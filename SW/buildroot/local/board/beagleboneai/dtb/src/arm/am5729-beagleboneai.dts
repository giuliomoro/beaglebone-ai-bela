/*
 * Copyright (C) 2014-2019 Texas Instruments Incorporated - http://www.ti.com/
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */
/dts-v1/;

#include <dt-bindings/interrupt-controller/arm-gic.h>
#include <dt-bindings/pinctrl/dra.h>
#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/interrupt-controller/irq.h>
#include <dt-bindings/pinctrl/dra.h>

#define MAX_SOURCES 400
//#define KERNEL_4_9
#define BELA

/ {
	model = "BeagleBoard.org BeagleBone AI";
	compatible = "beagleboard.org,am5729-beagleboneai", "ti,am5728", "ti,dra742", "ti,dra74", "ti,dra7", "ti,dra7xx";

	#address-cells = <2>;
	#size-cells = <2>;

	interrupt-parent = <&crossbar_mpu>;

	aliases {
		i2c0 = &i2c1;
		i2c1 = &i2c2;
		i2c2 = &i2c3;
		i2c3 = &i2c4;
		i2c4 = &i2c5;
		serial0 = &uart1;
		serial1 = &uart2;
		serial2 = &uart3;
		serial3 = &uart4;
		serial4 = &uart5;
		serial5 = &uart6;
		serial6 = &uart7;
		serial7 = &uart8;
		serial8 = &uart9;
		serial9 = &uart10;
		ethernet0 = &cpsw_emac0;
		ethernet1 = &cpsw_emac1;
		d_can0 = &dcan1;
		d_can1 = &dcan2;
		spi0 = &qspi;
		rproc0 = &ipu1;
		rproc1 = &ipu2;
		rproc2 = &dsp1;
		rproc3 = &dsp2;
		rtc0 = &tps659038_rtc;
		rtc1 = &rtc;
		display0 = &hdmi_conn;
	};

	chosen {
		stdout-path = &uart1;
	};

	memory@0 {
		device_type = "memory";
		reg = <0x0 0x80000000 0x0 0x40000000>;
	};

	reserved-memory {
		#address-cells = <2>;
		#size-cells = <2>;
		ranges;

		cmem_block_mem_1_ocmc3: cmem_block_mem@40500000 {
			reg = <0x0 0x40500000 0x0 0x100000>;
			no-map;
			status = "okay";
		};

		ipu2_memory_region: ipu2-memory@95800000 {
			compatible = "shared-dma-pool";
			reg = <0x0 0x95800000 0x0 0x3800000>;
			reusable;
			status = "okay";
		};

		dsp1_memory_region: dsp1-memory@99000000 {
			compatible = "shared-dma-pool";
			reg = <0x0 0x99000000 0x0 0x4000000>;
			reusable;
			status = "okay";
		};

		ipu1_memory_region: ipu1-memory@9d000000 {
			compatible = "shared-dma-pool";
			reg = <0x0 0x9d000000 0x0 0x2000000>;
			reusable;
			status = "okay";
		};

		dsp2_memory_region: dsp2-memory@9f000000 {
			compatible = "shared-dma-pool";
			reg = <0x0 0x9f000000 0x0 0x800000>;
			reusable;
			status = "okay";
		};

                cmem_block_mem_0: cmem_block_mem@a0000000 {
                        reg = <0x0 0xa0000000 0x0 0x18000000>;
                        no-map;
                        status = "okay";
                };
	};

        cmem {
                compatible = "ti,cmem";
                #address-cells = <1>;
                #size-cells = <0>;
		#pool-size-cells = <2>;
                status = "okay";

                cmem_block_0: cmem_block@0 {
                        reg = <0>;
                        memory-region = <&cmem_block_mem_0>;
                        cmem-buf-pools = <1 0x0 0x18000000>;
                };

		cmem_block_1: cmem_block@1 {
			reg = <1>;
			memory-region = <&cmem_block_mem_1_ocmc3>;
		};
        };

	pmu {
		compatible = "arm,cortex-a15-pmu";
		interrupt-parent = <&wakeupgen>;
		interrupts = <GIC_SPI 131 IRQ_TYPE_LEVEL_HIGH>,
			     <GIC_SPI 132 IRQ_TYPE_LEVEL_HIGH>;
	};

	vdd_adc: gpioregulator-vdd_adc {
		compatible = "regulator-gpio";
		regulator-name = "vdd_adc";
		vin-supply = <&vdd_5v>;
		regulator-min-microvolt = <1800000>;
		regulator-max-microvolt = <3300000>;
		regulator-always-on;
		regulator-boot-on;
		gpios = <&gpio3 27 GPIO_ACTIVE_HIGH>;
		states = <1800000 0
			3300000 1>;
	};

	vdd_5v: fixedregulator-vdd_5v {
		compatible = "regulator-fixed";
		regulator-name = "vdd_5v";
		regulator-min-microvolt = <5000000>;
		regulator-max-microvolt = <5000000>;
		regulator-always-on;
		regulator-boot-on;
	};

	vtt_fixed: fixedregulator-vtt {
		/* TPS51200 */
		compatible = "regulator-fixed";
		regulator-name = "vtt_fixed";
		vin-supply = <&vdd_ddr>;
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		regulator-always-on;
		regulator-boot-on;
	};

	leds {
		compatible = "gpio-leds";
		pinctrl-names = "default";
		pinctrl-0 = <&led_pins_default>;

		led0 {
			label = "beaglebone:green:usr0";
			gpios = <&gpio3 17 GPIO_ACTIVE_HIGH>;
			linux,default-trigger = "heartbeat";
			default-state = "off";
		};

		led1 {
			label = "beaglebone:green:usr1";
			gpios = <&gpio5 5 GPIO_ACTIVE_HIGH>;
			linux,default-trigger = "mmc0";
			default-state = "off";
		};

		led2 {
			label = "beaglebone:green:usr2";
			gpios = <&gpio3 15 GPIO_ACTIVE_HIGH>;
			linux,default-trigger = "cpu";
			default-state = "off";
		};

		led3 {
			label = "beaglebone:green:usr3";
			gpios = <&gpio3 14 GPIO_ACTIVE_HIGH>;
			linux,default-trigger = "mmc1";
			default-state = "off";
		};

		led4 {
			label = "beaglebone:green:usr4";
			gpios = <&gpio3 7 GPIO_ACTIVE_HIGH>;
			linux,default-trigger = "phy0assoc";
		};
	};

	hdmi_conn: connector@0 {
		compatible = "hdmi-connector";
		label = "hdmi";
		type = "a";

		port {
			hdmi_connector_in: endpoint {
				remote-endpoint = <&hdmi_encoder_out>;
			};
		};
	};

	hdmi_enc: encoder@0 {
		compatible = "ti,tpd12s016", "ti,tpd12s015";
		gpios = <0>,
			<0>,
			<&gpio7 12 GPIO_ACTIVE_HIGH>;

		ports {
			#address-cells = <0x1>;
			#size-cells = <0x0>;

			port@0 {
				reg = <0x0>;

				hdmi_encoder_in: endpoint@0 {
					remote-endpoint = <&hdmi_out>;
				};
			};

			port@1 {
				reg = <0x1>;

				hdmi_encoder_out: endpoint@0 {
					remote-endpoint = <&hdmi_connector_in>;
				};
			};
		};
	};

	emmc_pwrseq: emmc_pwrseq {
		compatible = "mmc-pwrseq-emmc";
		reset-gpios = <&gpio5 7 GPIO_ACTIVE_LOW>;
		pinctrl-names = "default";
		pinctrl-0 = <&emmc_pwrseq_pins_default>;
	};

	brcmf_pwrseq: brcmf_pwrseq {
		compatible = "mmc-pwrseq-simple";
		pinctrl-names = "default";
		pinctrl-0 = <&brcmf_pwrseq_pins_default>;
		reset-gpios = <&gpio3 22 GPIO_ACTIVE_LOW>,     // BT-REG-ON
				<&gpio3 18 GPIO_ACTIVE_LOW>;   // WL-REG-ON
	};

	unused_pins: unused_pins {
		compatible = "gpio-leds";
		pinctrl-names = "default";
		pinctrl-0 = <&unused_pins_default>;
	};

	cape_pins: cape_pins {
		compatible = "gpio-leds";
		pinctrl-names = "default";
		pinctrl-0 = <&cape_pins_default>;
		status = "okay";
	};

	extcon_usb1: extcon_usb1 {
		compatible = "linux,extcon-usb-gpio";
		ti,enable-id-detection;
		id-gpio = <&gpio3 13 GPIO_ACTIVE_HIGH>;
		pinctrl-names = "default";
		pinctrl-0 = <&extcon_usb1_pins_default>;
	};

	timer {
		compatible = "arm,armv7-timer";
		interrupts = <GIC_PPI 13 (GIC_CPU_MASK_SIMPLE(2) | IRQ_TYPE_LEVEL_LOW)>,
			     <GIC_PPI 14 (GIC_CPU_MASK_SIMPLE(2) | IRQ_TYPE_LEVEL_LOW)>,
			     <GIC_PPI 11 (GIC_CPU_MASK_SIMPLE(2) | IRQ_TYPE_LEVEL_LOW)>,
			     <GIC_PPI 10 (GIC_CPU_MASK_SIMPLE(2) | IRQ_TYPE_LEVEL_LOW)>;
		interrupt-parent = <&gic>;
	};

	gic: interrupt-controller@48211000 {
		compatible = "arm,cortex-a15-gic";
		interrupt-controller;
		#interrupt-cells = <3>;
		reg = <0x0 0x48211000 0x0 0x1000>,
		      <0x0 0x48212000 0x0 0x2000>,
		      <0x0 0x48214000 0x0 0x2000>,
		      <0x0 0x48216000 0x0 0x2000>;
		interrupts = <GIC_PPI 9 (GIC_CPU_MASK_SIMPLE(2) | IRQ_TYPE_LEVEL_HIGH)>;
		interrupt-parent = <&gic>;
	};

	wakeupgen: interrupt-controller@48281000 {
		compatible = "ti,omap5-wugen-mpu", "ti,omap4-wugen-mpu";
		interrupt-controller;
		#interrupt-cells = <3>;
		reg = <0x0 0x48281000 0x0 0x1000>;
		interrupt-parent = <&gic>;
	};

	cpus {
		#address-cells = <1>;
		#size-cells = <0>;

		cpu0: cpu@0 {
			device_type = "cpu";
			compatible = "arm,cortex-a15";
			reg = <0>;

			operating-points-v2 = <&cpu0_opp_table>;

			clocks = <&dpll_mpu_ck>;
			clock-names = "cpu";

			clock-latency = <300000>; /* From omap-cpufreq driver */

			/* cooling options */
			cooling-min-level = <0>;
			cooling-max-level = <2>;
			#cooling-cells = <2>; /* min followed by max */

			vbb-supply = <&abb_mpu>;
		};

		cpu@1 {
			device_type = "cpu";
			compatible = "arm,cortex-a15";
			reg = <1>;
			operating-points-v2 = <&cpu0_opp_table>;
		};
	};

	cpu0_opp_table: opp-table {
		compatible = "operating-points-v2-ti-cpu";
		syscon = <&scm_wkup>;
		opp-shared;

		opp_nom-1000000000 {
			opp-hz = /bits/ 64 <1000000000>;
			opp-microvolt = <1060000 850000 1150000>,
					<1060000 850000 1150000>;
			opp-supported-hw = <0xFF 0x01>;
			opp-suspend;
		};

		opp_od-1176000000 {
			opp-hz = /bits/ 64 <1176000000>;
			opp-microvolt = <1160000 885000 1160000>,
					<1160000 885000 1160000>;

			opp-supported-hw = <0xFF 0x02>;
		};

		opp_high@1500000000 {
			opp-hz = /bits/ 64 <1500000000>;
			opp-microvolt = <1210000 950000 1250000>,
					<1210000 950000 1250000>;
			opp-supported-hw = <0xFF 0x04>;
		};
	};

	/*
	 * The soc node represents the soc top level view. It is used for IPs
	 * that are not memory mapped in the MPU view or for the MPU itself.
	 */
	soc {
		compatible = "ti,omap-infra";
		mpu {
			compatible = "ti,omap5-mpu";
			ti,hwmods = "mpu";
		};
	};

	/*
	 * XXX: Use a flat representation of the SOC interconnect.
	 * The real OMAP interconnect network is quite complex.
	 * Since it will not bring real advantage to represent that in DT for
	 * the moment, just use a fake OCP bus entry to represent the whole bus
	 * hierarchy.
	 */
	ocp {
		compatible = "ti,dra7-l3-noc", "simple-bus";
		#address-cells = <1>;
		#size-cells = <1>;
		ranges = <0x0 0x0 0x0 0xc0000000>;
		ti,hwmods = "l3_main_1", "l3_main_2";
		reg = <0x0 0x44000000 0x0 0x1000000>,
		      <0x0 0x45000000 0x0 0x1000>;
		interrupts-extended = <&crossbar_mpu GIC_SPI 4 IRQ_TYPE_LEVEL_HIGH>,
				      <&wakeupgen GIC_SPI 10 IRQ_TYPE_LEVEL_HIGH>;

		l4_cfg: l4@4a000000 {
			compatible = "ti,dra7-l4-cfg", "simple-bus";
			#address-cells = <1>;
			#size-cells = <1>;
			ranges = <0 0x4a000000 0x22c000>;

			scm: scm@2000 {
				compatible = "ti,dra7-scm-core", "simple-bus";
				reg = <0x2000 0x2000>;
				#address-cells = <1>;
				#size-cells = <1>;
				ranges = <0 0x2000 0x2000>;

				scm_conf: scm_conf@0 {
					compatible = "syscon", "simple-bus";
					reg = <0x0 0x1400>;
					#address-cells = <1>;
					#size-cells = <1>;
					ranges = <0 0x0 0x1400>;

					pbias_regulator: pbias_regulator@e00 {
						compatible = "ti,pbias-dra7", "ti,pbias-omap";
						reg = <0xe00 0x4>;
						syscon = <&scm_conf>;
						pbias_mmc_reg: pbias_mmc_omap5 {
							regulator-name = "pbias_mmc_omap5";
							regulator-min-microvolt = <1800000>;
							regulator-max-microvolt = <3300000>;
						};
					};

					scm_conf_clocks: clocks {
						#address-cells = <1>;
						#size-cells = <0>;
					};
				};

				dra7_pmx_core: pinmux@1400 {
					compatible = "ti,dra7-padconf",
						     "pinctrl-single";
					reg = <0x1400 0x0468>;
					#address-cells = <1>;
					#size-cells = <0>;
					#pinctrl-cells = <1>;
					#interrupt-cells = <1>;
					interrupt-controller;
					pinctrl-single,register-width = <32>;
					pinctrl-single,function-mask = <0x3fffffff>;
				};

				scm_conf1: scm_conf@1c04 {
					compatible = "syscon";
					reg = <0x1c04 0x0020>;
					#syscon-cells = <2>;
				};

				scm_conf_pcie: scm_conf@1c24 {
					compatible = "syscon";
					reg = <0x1c24 0x0024>;
				};

				sdma_xbar: dma-router@b78 {
					compatible = "ti,dra7-dma-crossbar";
					reg = <0xb78 0xfc>;
					#dma-cells = <1>;
					dma-requests = <205>;
					ti,dma-safe-map = <0>;
					dma-masters = <&sdma>;
				};

				edma_xbar: dma-router@c78 {
					compatible = "ti,dra7-dma-crossbar";
					reg = <0xc78 0x7c>;
					#dma-cells = <2>;
					dma-requests = <204>;
					ti,dma-safe-map = <0>;
					dma-masters = <&edma>;
				};
			};

			cm_core_aon: cm_core_aon@5000 {
				compatible = "ti,dra7-cm-core-aon";
				reg = <0x5000 0x2000>;

				cm_core_aon_clocks: clocks {
					#address-cells = <1>;
					#size-cells = <0>;

					atl_clkin0_ck: atl_clkin0_ck {
						#clock-cells = <0>;
						compatible = "ti,dra7-atl-clock";
						clocks = <&atl_gfclk_mux>;
					};

					atl_clkin1_ck: atl_clkin1_ck {
						#clock-cells = <0>;
						compatible = "ti,dra7-atl-clock";
						clocks = <&atl_gfclk_mux>;
					};

					atl_clkin2_ck: atl_clkin2_ck {
						#clock-cells = <0>;
						compatible = "ti,dra7-atl-clock";
						clocks = <&atl_gfclk_mux>;
					};

					atl_clkin3_ck: atl_clkin3_ck {
						#clock-cells = <0>;
						compatible = "ti,dra7-atl-clock";
						clocks = <&atl_gfclk_mux>;
					};

					hdmi_clkin_ck: hdmi_clkin_ck {
						#clock-cells = <0>;
						compatible = "fixed-clock";
						clock-frequency = <0>;
					};

					mlb_clkin_ck: mlb_clkin_ck {
						#clock-cells = <0>;
						compatible = "fixed-clock";
						clock-frequency = <0>;
					};

					mlbp_clkin_ck: mlbp_clkin_ck {
						#clock-cells = <0>;
						compatible = "fixed-clock";
						clock-frequency = <0>;
					};

					pciesref_acs_clk_ck: pciesref_acs_clk_ck {
						#clock-cells = <0>;
						compatible = "fixed-clock";
						clock-frequency = <100000000>;
					};

					ref_clkin0_ck: ref_clkin0_ck {
						#clock-cells = <0>;
						compatible = "fixed-clock";
						clock-frequency = <0>;
					};

					ref_clkin1_ck: ref_clkin1_ck {
						#clock-cells = <0>;
						compatible = "fixed-clock";
						clock-frequency = <0>;
					};

					ref_clkin2_ck: ref_clkin2_ck {
						#clock-cells = <0>;
						compatible = "fixed-clock";
						clock-frequency = <0>;
					};

					ref_clkin3_ck: ref_clkin3_ck {
						#clock-cells = <0>;
						compatible = "fixed-clock";
						clock-frequency = <0>;
					};

					rmii_clk_ck: rmii_clk_ck {
						#clock-cells = <0>;
						compatible = "fixed-clock";
						clock-frequency = <0>;
					};

					sdvenc_clkin_ck: sdvenc_clkin_ck {
						#clock-cells = <0>;
						compatible = "fixed-clock";
						clock-frequency = <0>;
					};

					secure_32k_clk_src_ck: secure_32k_clk_src_ck {
						#clock-cells = <0>;
						compatible = "fixed-clock";
						clock-frequency = <32768>;
					};

					sys_clk32_crystal_ck: sys_clk32_crystal_ck {
						#clock-cells = <0>;
						compatible = "fixed-clock";
						clock-frequency = <32768>;
					};

					sys_clk32_pseudo_ck: sys_clk32_pseudo_ck {
						#clock-cells = <0>;
						compatible = "fixed-factor-clock";
						clocks = <&sys_clkin1>;
						clock-mult = <1>;
						clock-div = <610>;
					};

					virt_12000000_ck: virt_12000000_ck {
						#clock-cells = <0>;
						compatible = "fixed-clock";
						clock-frequency = <12000000>;
					};

					virt_13000000_ck: virt_13000000_ck {
						#clock-cells = <0>;
						compatible = "fixed-clock";
						clock-frequency = <13000000>;
					};

					virt_16800000_ck: virt_16800000_ck {
						#clock-cells = <0>;
						compatible = "fixed-clock";
						clock-frequency = <16800000>;
					};

					virt_19200000_ck: virt_19200000_ck {
						#clock-cells = <0>;
						compatible = "fixed-clock";
						clock-frequency = <19200000>;
					};

					virt_20000000_ck: virt_20000000_ck {
						#clock-cells = <0>;
						compatible = "fixed-clock";
						clock-frequency = <20000000>;
					};

					virt_26000000_ck: virt_26000000_ck {
						#clock-cells = <0>;
						compatible = "fixed-clock";
						clock-frequency = <26000000>;
					};

					virt_27000000_ck: virt_27000000_ck {
						#clock-cells = <0>;
						compatible = "fixed-clock";
						clock-frequency = <27000000>;
					};

					virt_38400000_ck: virt_38400000_ck {
						#clock-cells = <0>;
						compatible = "fixed-clock";
						clock-frequency = <38400000>;
					};

					sys_clkin2: sys_clkin2 {
						#clock-cells = <0>;
						compatible = "fixed-clock";
						clock-frequency = <22579200>;
					};

					usb_otg_clkin_ck: usb_otg_clkin_ck {
						#clock-cells = <0>;
						compatible = "fixed-clock";
						clock-frequency = <0>;
					};

					video1_clkin_ck: video1_clkin_ck {
						#clock-cells = <0>;
						compatible = "fixed-clock";
						clock-frequency = <0>;
					};

					video1_m2_clkin_ck: video1_m2_clkin_ck {
						#clock-cells = <0>;
						compatible = "fixed-clock";
						clock-frequency = <0>;
					};

					video2_clkin_ck: video2_clkin_ck {
						#clock-cells = <0>;
						compatible = "fixed-clock";
						clock-frequency = <0>;
					};

					video2_m2_clkin_ck: video2_m2_clkin_ck {
						#clock-cells = <0>;
						compatible = "fixed-clock";
						clock-frequency = <0>;
					};

					dpll_abe_ck: dpll_abe_ck@1e0 {
						#clock-cells = <0>;
						compatible = "ti,omap4-dpll-m4xen-clock";
						clocks = <&abe_dpll_clk_mux>, <&abe_dpll_bypass_clk_mux>;
						reg = <0x01e0>, <0x01e4>, <0x01ec>, <0x01e8>;
					};

					dpll_abe_x2_ck: dpll_abe_x2_ck {
						#clock-cells = <0>;
						compatible = "ti,omap4-dpll-x2-clock";
						clocks = <&dpll_abe_ck>;
					};

					dpll_abe_m2x2_ck: dpll_abe_m2x2_ck@1f0 {
						#clock-cells = <0>;
						compatible = "ti,divider-clock";
						clocks = <&dpll_abe_x2_ck>;
						ti,max-div = <31>;
						ti,autoidle-shift = <8>;
						reg = <0x01f0>;
						ti,index-starts-at-one;
						ti,invert-autoidle-bit;
					};

					abe_clk: abe_clk@108 {
						#clock-cells = <0>;
						compatible = "ti,divider-clock";
						clocks = <&dpll_abe_m2x2_ck>;
						ti,max-div = <4>;
						reg = <0x0108>;
						ti,index-power-of-two;
					};

					dpll_abe_m2_ck: dpll_abe_m2_ck@1f0 {
						#clock-cells = <0>;
						compatible = "ti,divider-clock";
						clocks = <&dpll_abe_ck>;
						ti,max-div = <31>;
						ti,autoidle-shift = <8>;
						reg = <0x01f0>;
						ti,index-starts-at-one;
						ti,invert-autoidle-bit;
					};

					dpll_abe_m3x2_ck: dpll_abe_m3x2_ck@1f4 {
						#clock-cells = <0>;
						compatible = "ti,divider-clock";
						clocks = <&dpll_abe_x2_ck>;
						ti,max-div = <31>;
						ti,autoidle-shift = <8>;
						reg = <0x01f4>;
						ti,index-starts-at-one;
						ti,invert-autoidle-bit;
					};

					dpll_core_byp_mux: dpll_core_byp_mux@12c {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&sys_clkin1>, <&dpll_abe_m3x2_ck>;
						ti,bit-shift = <23>;
						reg = <0x012c>;
					};

					dpll_core_ck: dpll_core_ck@120 {
						#clock-cells = <0>;
						compatible = "ti,omap4-dpll-core-clock";
						clocks = <&sys_clkin1>, <&dpll_core_byp_mux>;
						reg = <0x0120>, <0x0124>, <0x012c>, <0x0128>;
					};

					dpll_core_x2_ck: dpll_core_x2_ck {
						#clock-cells = <0>;
						compatible = "ti,omap4-dpll-x2-clock";
						clocks = <&dpll_core_ck>;
					};

					dpll_core_h12x2_ck: dpll_core_h12x2_ck@13c {
						#clock-cells = <0>;
						compatible = "ti,divider-clock";
						clocks = <&dpll_core_x2_ck>;
						ti,max-div = <63>;
						ti,autoidle-shift = <8>;
						reg = <0x013c>;
						ti,index-starts-at-one;
						ti,invert-autoidle-bit;
					};

					mpu_dpll_hs_clk_div: mpu_dpll_hs_clk_div {
						#clock-cells = <0>;
						compatible = "fixed-factor-clock";
						clocks = <&dpll_core_h12x2_ck>;
						clock-mult = <1>;
						clock-div = <1>;
					};

					dpll_mpu_ck: dpll_mpu_ck@160 {
						#clock-cells = <0>;
						compatible = "ti,omap5-mpu-dpll-clock";
						clocks = <&sys_clkin1>, <&mpu_dpll_hs_clk_div>;
						reg = <0x0160>, <0x0164>, <0x016c>, <0x0168>;
					};

					dpll_mpu_m2_ck: dpll_mpu_m2_ck@170 {
						#clock-cells = <0>;
						compatible = "ti,divider-clock";
						clocks = <&dpll_mpu_ck>;
						ti,max-div = <31>;
						ti,autoidle-shift = <8>;
						reg = <0x0170>;
						ti,index-starts-at-one;
						ti,invert-autoidle-bit;
					};

					mpu_dclk_div: mpu_dclk_div {
						#clock-cells = <0>;
						compatible = "fixed-factor-clock";
						clocks = <&dpll_mpu_m2_ck>;
						clock-mult = <1>;
						clock-div = <1>;
					};

					dsp_dpll_hs_clk_div: dsp_dpll_hs_clk_div {
						#clock-cells = <0>;
						compatible = "fixed-factor-clock";
						clocks = <&dpll_core_h12x2_ck>;
						clock-mult = <1>;
						clock-div = <1>;
					};

					dpll_dsp_byp_mux: dpll_dsp_byp_mux@240 {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&sys_clkin1>, <&dsp_dpll_hs_clk_div>;
						ti,bit-shift = <23>;
						reg = <0x0240>;
					};

					dpll_dsp_ck: dpll_dsp_ck@234 {
						#clock-cells = <0>;
						compatible = "ti,omap4-dpll-clock";
						clocks = <&sys_clkin1>, <&dpll_dsp_byp_mux>;
						reg = <0x0234>, <0x0238>, <0x0240>, <0x023c>;
						assigned-clocks = <&dpll_dsp_ck>;
						assigned-clock-rates = <600000000>;
					};

					dpll_dsp_m2_ck: dpll_dsp_m2_ck@244 {
						#clock-cells = <0>;
						compatible = "ti,divider-clock";
						clocks = <&dpll_dsp_ck>;
						ti,max-div = <31>;
						ti,autoidle-shift = <8>;
						reg = <0x0244>;
						ti,index-starts-at-one;
						ti,invert-autoidle-bit;
						assigned-clocks = <&dpll_dsp_m2_ck>;
						assigned-clock-rates = <600000000>;
					};

					iva_dpll_hs_clk_div: iva_dpll_hs_clk_div {
						#clock-cells = <0>;
						compatible = "fixed-factor-clock";
						clocks = <&dpll_core_h12x2_ck>;
						clock-mult = <1>;
						clock-div = <1>;
					};

					dpll_iva_byp_mux: dpll_iva_byp_mux@1ac {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&sys_clkin1>, <&iva_dpll_hs_clk_div>;
						ti,bit-shift = <23>;
						reg = <0x01ac>;
					};

					dpll_iva_ck: dpll_iva_ck@1a0 {
						#clock-cells = <0>;
						compatible = "ti,omap4-dpll-clock";
						clocks = <&sys_clkin1>, <&dpll_iva_byp_mux>;
						reg = <0x01a0>, <0x01a4>, <0x01ac>, <0x01a8>;
						assigned-clocks = <&dpll_iva_ck>;
						assigned-clock-rates = <1165000000>;
					};

					dpll_iva_m2_ck: dpll_iva_m2_ck@1b0 {
						#clock-cells = <0>;
						compatible = "ti,divider-clock";
						clocks = <&dpll_iva_ck>;
						ti,max-div = <31>;
						ti,autoidle-shift = <8>;
						reg = <0x01b0>;
						ti,index-starts-at-one;
						ti,invert-autoidle-bit;
						assigned-clocks = <&dpll_iva_m2_ck>;
						assigned-clock-rates = <388333334>;
					};

					iva_dclk: iva_dclk {
						#clock-cells = <0>;
						compatible = "fixed-factor-clock";
						clocks = <&dpll_iva_m2_ck>;
						clock-mult = <1>;
						clock-div = <1>;
					};

					dpll_gpu_byp_mux: dpll_gpu_byp_mux@2e4 {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&sys_clkin1>, <&dpll_abe_m3x2_ck>;
						ti,bit-shift = <23>;
						reg = <0x02e4>;
					};

					dpll_gpu_ck: dpll_gpu_ck@2d8 {
						#clock-cells = <0>;
						compatible = "ti,omap4-dpll-clock";
						clocks = <&sys_clkin1>, <&dpll_gpu_byp_mux>;
						reg = <0x02d8>, <0x02dc>, <0x02e4>, <0x02e0>;
						assigned-clocks = <&dpll_gpu_ck>;
						assigned-clock-rates = <1277000000>;
					};

					dpll_gpu_m2_ck: dpll_gpu_m2_ck@2e8 {
						#clock-cells = <0>;
						compatible = "ti,divider-clock";
						clocks = <&dpll_gpu_ck>;
						ti,max-div = <31>;
						ti,autoidle-shift = <8>;
						reg = <0x02e8>;
						ti,index-starts-at-one;
						ti,invert-autoidle-bit;
						assigned-clocks = <&dpll_gpu_m2_ck>;
						assigned-clock-rates = <425666667>;
					};

					dpll_core_m2_ck: dpll_core_m2_ck@130 {
						#clock-cells = <0>;
						compatible = "ti,divider-clock";
						clocks = <&dpll_core_ck>;
						ti,max-div = <31>;
						ti,autoidle-shift = <8>;
						reg = <0x0130>;
						ti,index-starts-at-one;
						ti,invert-autoidle-bit;
					};

					core_dpll_out_dclk_div: core_dpll_out_dclk_div {
						#clock-cells = <0>;
						compatible = "fixed-factor-clock";
						clocks = <&dpll_core_m2_ck>;
						clock-mult = <1>;
						clock-div = <1>;
					};

					dpll_ddr_byp_mux: dpll_ddr_byp_mux@21c {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&sys_clkin1>, <&dpll_abe_m3x2_ck>;
						ti,bit-shift = <23>;
						reg = <0x021c>;
					};

					dpll_ddr_ck: dpll_ddr_ck@210 {
						#clock-cells = <0>;
						compatible = "ti,omap4-dpll-clock";
						clocks = <&sys_clkin1>, <&dpll_ddr_byp_mux>;
						reg = <0x0210>, <0x0214>, <0x021c>, <0x0218>;
					};

					dpll_ddr_m2_ck: dpll_ddr_m2_ck@220 {
						#clock-cells = <0>;
						compatible = "ti,divider-clock";
						clocks = <&dpll_ddr_ck>;
						ti,max-div = <31>;
						ti,autoidle-shift = <8>;
						reg = <0x0220>;
						ti,index-starts-at-one;
						ti,invert-autoidle-bit;
					};

					dpll_gmac_byp_mux: dpll_gmac_byp_mux@2b4 {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&sys_clkin1>, <&dpll_abe_m3x2_ck>;
						ti,bit-shift = <23>;
						reg = <0x02b4>;
					};

					dpll_gmac_ck: dpll_gmac_ck@2a8 {
						#clock-cells = <0>;
						compatible = "ti,omap4-dpll-clock";
						clocks = <&sys_clkin1>, <&dpll_gmac_byp_mux>;
						reg = <0x02a8>, <0x02ac>, <0x02b4>, <0x02b0>;
					};

					dpll_gmac_m2_ck: dpll_gmac_m2_ck@2b8 {
						#clock-cells = <0>;
						compatible = "ti,divider-clock";
						clocks = <&dpll_gmac_ck>;
						ti,max-div = <31>;
						ti,autoidle-shift = <8>;
						reg = <0x02b8>;
						ti,index-starts-at-one;
						ti,invert-autoidle-bit;
					};

					video2_dclk_div: video2_dclk_div {
						#clock-cells = <0>;
						compatible = "fixed-factor-clock";
						clocks = <&video2_m2_clkin_ck>;
						clock-mult = <1>;
						clock-div = <1>;
					};

					video1_dclk_div: video1_dclk_div {
						#clock-cells = <0>;
						compatible = "fixed-factor-clock";
						clocks = <&video1_m2_clkin_ck>;
						clock-mult = <1>;
						clock-div = <1>;
					};

					hdmi_dclk_div: hdmi_dclk_div {
						#clock-cells = <0>;
						compatible = "fixed-factor-clock";
						clocks = <&hdmi_clkin_ck>;
						clock-mult = <1>;
						clock-div = <1>;
					};

					per_dpll_hs_clk_div: per_dpll_hs_clk_div {
						#clock-cells = <0>;
						compatible = "fixed-factor-clock";
						clocks = <&dpll_abe_m3x2_ck>;
						clock-mult = <1>;
						clock-div = <2>;
					};

					usb_dpll_hs_clk_div: usb_dpll_hs_clk_div {
						#clock-cells = <0>;
						compatible = "fixed-factor-clock";
						clocks = <&dpll_abe_m3x2_ck>;
						clock-mult = <1>;
						clock-div = <3>;
					};

					eve_dpll_hs_clk_div: eve_dpll_hs_clk_div {
						#clock-cells = <0>;
						compatible = "fixed-factor-clock";
						clocks = <&dpll_core_h12x2_ck>;
						clock-mult = <1>;
						clock-div = <1>;
					};

					dpll_eve_byp_mux: dpll_eve_byp_mux@290 {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&sys_clkin1>, <&eve_dpll_hs_clk_div>;
						ti,bit-shift = <23>;
						reg = <0x0290>;
					};

					dpll_eve_ck: dpll_eve_ck@284 {
						#clock-cells = <0>;
						compatible = "ti,omap4-dpll-clock";
						clocks = <&sys_clkin1>, <&dpll_eve_byp_mux>;
						reg = <0x0284>, <0x0288>, <0x0290>, <0x028c>;
					};

					dpll_eve_m2_ck: dpll_eve_m2_ck@294 {
						#clock-cells = <0>;
						compatible = "ti,divider-clock";
						clocks = <&dpll_eve_ck>;
						ti,max-div = <31>;
						ti,autoidle-shift = <8>;
						reg = <0x0294>;
						ti,index-starts-at-one;
						ti,invert-autoidle-bit;
					};

					eve_dclk_div: eve_dclk_div {
						#clock-cells = <0>;
						compatible = "fixed-factor-clock";
						clocks = <&dpll_eve_m2_ck>;
						clock-mult = <1>;
						clock-div = <1>;
					};

					dpll_core_h13x2_ck: dpll_core_h13x2_ck@140 {
						#clock-cells = <0>;
						compatible = "ti,divider-clock";
						clocks = <&dpll_core_x2_ck>;
						ti,max-div = <63>;
						ti,autoidle-shift = <8>;
						reg = <0x0140>;
						ti,index-starts-at-one;
						ti,invert-autoidle-bit;
					};

					dpll_core_h14x2_ck: dpll_core_h14x2_ck@144 {
						#clock-cells = <0>;
						compatible = "ti,divider-clock";
						clocks = <&dpll_core_x2_ck>;
						ti,max-div = <63>;
						ti,autoidle-shift = <8>;
						reg = <0x0144>;
						ti,index-starts-at-one;
						ti,invert-autoidle-bit;
					};

					dpll_core_h22x2_ck: dpll_core_h22x2_ck@154 {
						#clock-cells = <0>;
						compatible = "ti,divider-clock";
						clocks = <&dpll_core_x2_ck>;
						ti,max-div = <63>;
						ti,autoidle-shift = <8>;
						reg = <0x0154>;
						ti,index-starts-at-one;
						ti,invert-autoidle-bit;
					};

					dpll_core_h23x2_ck: dpll_core_h23x2_ck@158 {
						#clock-cells = <0>;
						compatible = "ti,divider-clock";
						clocks = <&dpll_core_x2_ck>;
						ti,max-div = <63>;
						ti,autoidle-shift = <8>;
						reg = <0x0158>;
						ti,index-starts-at-one;
						ti,invert-autoidle-bit;
					};

					dpll_core_h24x2_ck: dpll_core_h24x2_ck@15c {
						#clock-cells = <0>;
						compatible = "ti,divider-clock";
						clocks = <&dpll_core_x2_ck>;
						ti,max-div = <63>;
						ti,autoidle-shift = <8>;
						reg = <0x015c>;
						ti,index-starts-at-one;
						ti,invert-autoidle-bit;
					};

					dpll_ddr_x2_ck: dpll_ddr_x2_ck {
						#clock-cells = <0>;
						compatible = "ti,omap4-dpll-x2-clock";
						clocks = <&dpll_ddr_ck>;
					};

					dpll_ddr_h11x2_ck: dpll_ddr_h11x2_ck@228 {
						#clock-cells = <0>;
						compatible = "ti,divider-clock";
						clocks = <&dpll_ddr_x2_ck>;
						ti,max-div = <63>;
						ti,autoidle-shift = <8>;
						reg = <0x0228>;
						ti,index-starts-at-one;
						ti,invert-autoidle-bit;
					};

					dpll_dsp_x2_ck: dpll_dsp_x2_ck {
						#clock-cells = <0>;
						compatible = "ti,omap4-dpll-x2-clock";
						clocks = <&dpll_dsp_ck>;
					};

					dpll_dsp_m3x2_ck: dpll_dsp_m3x2_ck@248 {
						#clock-cells = <0>;
						compatible = "ti,divider-clock";
						clocks = <&dpll_dsp_x2_ck>;
						ti,max-div = <31>;
						ti,autoidle-shift = <8>;
						reg = <0x0248>;
						ti,index-starts-at-one;
						ti,invert-autoidle-bit;
						assigned-clocks = <&dpll_dsp_m3x2_ck>;
						assigned-clock-rates = <400000000>;
					};

					dpll_gmac_x2_ck: dpll_gmac_x2_ck {
						#clock-cells = <0>;
						compatible = "ti,omap4-dpll-x2-clock";
						clocks = <&dpll_gmac_ck>;
					};

					dpll_gmac_h11x2_ck: dpll_gmac_h11x2_ck@2c0 {
						#clock-cells = <0>;
						compatible = "ti,divider-clock";
						clocks = <&dpll_gmac_x2_ck>;
						ti,max-div = <63>;
						ti,autoidle-shift = <8>;
						reg = <0x02c0>;
						ti,index-starts-at-one;
						ti,invert-autoidle-bit;
					};

					dpll_gmac_h12x2_ck: dpll_gmac_h12x2_ck@2c4 {
						#clock-cells = <0>;
						compatible = "ti,divider-clock";
						clocks = <&dpll_gmac_x2_ck>;
						ti,max-div = <63>;
						ti,autoidle-shift = <8>;
						reg = <0x02c4>;
						ti,index-starts-at-one;
						ti,invert-autoidle-bit;
					};

					dpll_gmac_h13x2_ck: dpll_gmac_h13x2_ck@2c8 {
						#clock-cells = <0>;
						compatible = "ti,divider-clock";
						clocks = <&dpll_gmac_x2_ck>;
						ti,max-div = <63>;
						ti,autoidle-shift = <8>;
						reg = <0x02c8>;
						ti,index-starts-at-one;
						ti,invert-autoidle-bit;
					};

					dpll_gmac_m3x2_ck: dpll_gmac_m3x2_ck@2bc {
						#clock-cells = <0>;
						compatible = "ti,divider-clock";
						clocks = <&dpll_gmac_x2_ck>;
						ti,max-div = <31>;
						ti,autoidle-shift = <8>;
						reg = <0x02bc>;
						ti,index-starts-at-one;
						ti,invert-autoidle-bit;
					};

					gmii_m_clk_div: gmii_m_clk_div {
						#clock-cells = <0>;
						compatible = "fixed-factor-clock";
						clocks = <&dpll_gmac_h11x2_ck>;
						clock-mult = <1>;
						clock-div = <2>;
					};

					hdmi_clk2_div: hdmi_clk2_div {
						#clock-cells = <0>;
						compatible = "fixed-factor-clock";
						clocks = <&hdmi_clkin_ck>;
						clock-mult = <1>;
						clock-div = <1>;
					};

					hdmi_div_clk: hdmi_div_clk {
						#clock-cells = <0>;
						compatible = "fixed-factor-clock";
						clocks = <&hdmi_clkin_ck>;
						clock-mult = <1>;
						clock-div = <1>;
					};

					l3_iclk_div: l3_iclk_div@100 {
						#clock-cells = <0>;
						compatible = "ti,divider-clock";
						ti,max-div = <2>;
						ti,bit-shift = <4>;
						reg = <0x0100>;
						clocks = <&dpll_core_h12x2_ck>;
						ti,index-power-of-two;
					};

					l4_root_clk_div: l4_root_clk_div {
						#clock-cells = <0>;
						compatible = "fixed-factor-clock";
						clocks = <&l3_iclk_div>;
						clock-mult = <1>;
						clock-div = <2>;
					};

					video1_clk2_div: video1_clk2_div {
						#clock-cells = <0>;
						compatible = "fixed-factor-clock";
						clocks = <&video1_clkin_ck>;
						clock-mult = <1>;
						clock-div = <1>;
					};

					video1_div_clk: video1_div_clk {
						#clock-cells = <0>;
						compatible = "fixed-factor-clock";
						clocks = <&video1_clkin_ck>;
						clock-mult = <1>;
						clock-div = <1>;
					};

					video2_clk2_div: video2_clk2_div {
						#clock-cells = <0>;
						compatible = "fixed-factor-clock";
						clocks = <&video2_clkin_ck>;
						clock-mult = <1>;
						clock-div = <1>;
					};

					video2_div_clk: video2_div_clk {
						#clock-cells = <0>;
						compatible = "fixed-factor-clock";
						clocks = <&video2_clkin_ck>;
						clock-mult = <1>;
						clock-div = <1>;
					};

					ipu1_gfclk_mux: ipu1_gfclk_mux@520 {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&dpll_abe_m2x2_ck>, <&dpll_core_h22x2_ck>;
						ti,bit-shift = <24>;
						reg = <0x0520>;
						assigned-clocks = <&ipu1_gfclk_mux>;
						assigned-clock-parents = <&dpll_core_h22x2_ck>;
					};

					mcasp1_ahclkr_mux: mcasp1_ahclkr_mux@550 {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&abe_24m_fclk>, <&abe_sys_clk_div>, <&func_24m_clk>, <&atl_clkin3_ck>, <&atl_clkin2_ck>, <&atl_clkin1_ck>, <&atl_clkin0_ck>, <&sys_clkin2>, <&ref_clkin0_ck>, <&ref_clkin1_ck>, <&ref_clkin2_ck>, <&ref_clkin3_ck>, <&mlb_clk>, <&mlbp_clk>;
						ti,bit-shift = <28>;
						reg = <0x0550>;
					};

					mcasp1_ahclkx_mux: mcasp1_ahclkx_mux@550 {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&abe_24m_fclk>, <&abe_sys_clk_div>, <&func_24m_clk>, <&atl_clkin3_ck>, <&atl_clkin2_ck>, <&atl_clkin1_ck>, <&atl_clkin0_ck>, <&sys_clkin2>, <&ref_clkin0_ck>, <&ref_clkin1_ck>, <&ref_clkin2_ck>, <&ref_clkin3_ck>, <&mlb_clk>, <&mlbp_clk>;
						ti,bit-shift = <24>;
						reg = <0x0550>;
					};

					mcasp1_aux_gfclk_mux: mcasp1_aux_gfclk_mux@550 {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&per_abe_x1_gfclk2_div>, <&video1_clk2_div>, <&video2_clk2_div>, <&hdmi_clk2_div>;
						ti,bit-shift = <22>;
						reg = <0x0550>;
					};

					timer5_gfclk_mux: timer5_gfclk_mux@558 {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&timer_sys_clk_div>, <&sys_32k_ck>, <&sys_clkin2>, <&ref_clkin0_ck>, <&ref_clkin1_ck>, <&ref_clkin2_ck>, <&ref_clkin3_ck>, <&abe_giclk_div>, <&video1_div_clk>, <&video2_div_clk>, <&hdmi_div_clk>, <&clkoutmux0_clk_mux>;
						ti,bit-shift = <24>;
						reg = <0x0558>;
					};

					timer6_gfclk_mux: timer6_gfclk_mux@560 {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&timer_sys_clk_div>, <&sys_32k_ck>, <&sys_clkin2>, <&ref_clkin0_ck>, <&ref_clkin1_ck>, <&ref_clkin2_ck>, <&ref_clkin3_ck>, <&abe_giclk_div>, <&video1_div_clk>, <&video2_div_clk>, <&hdmi_div_clk>, <&clkoutmux0_clk_mux>;
						ti,bit-shift = <24>;
						reg = <0x0560>;
					};

					timer7_gfclk_mux: timer7_gfclk_mux@568 {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&timer_sys_clk_div>, <&sys_32k_ck>, <&sys_clkin2>, <&ref_clkin0_ck>, <&ref_clkin1_ck>, <&ref_clkin2_ck>, <&ref_clkin3_ck>, <&abe_giclk_div>, <&video1_div_clk>, <&video2_div_clk>, <&hdmi_div_clk>, <&clkoutmux0_clk_mux>;
						ti,bit-shift = <24>;
						reg = <0x0568>;
					};

					timer8_gfclk_mux: timer8_gfclk_mux@570 {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&timer_sys_clk_div>, <&sys_32k_ck>, <&sys_clkin2>, <&ref_clkin0_ck>, <&ref_clkin1_ck>, <&ref_clkin2_ck>, <&ref_clkin3_ck>, <&abe_giclk_div>, <&video1_div_clk>, <&video2_div_clk>, <&hdmi_div_clk>, <&clkoutmux0_clk_mux>;
						ti,bit-shift = <24>;
						reg = <0x0570>;
					};

					uart6_gfclk_mux: uart6_gfclk_mux@580 {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&func_48m_fclk>, <&dpll_per_m2x2_ck>;
						ti,bit-shift = <24>;
						reg = <0x0580>;
					};

					dummy_ck: dummy_ck {
						#clock-cells = <0>;
						compatible = "fixed-clock";
						clock-frequency = <0>;
					};
				};

				cm_core_aon_clockdomains: clockdomains {
				};
			};

			cm_core: cm_core@8000 {
				compatible = "ti,dra7-cm-core";
				reg = <0x8000 0x3000>;

				cm_core_clocks: clocks {
					#address-cells = <1>;
					#size-cells = <0>;

					dpll_pcie_ref_ck: dpll_pcie_ref_ck@200 {
						#clock-cells = <0>;
						compatible = "ti,omap4-dpll-clock";
						clocks = <&sys_clkin1>, <&sys_clkin1>;
						reg = <0x0200>, <0x0204>, <0x020c>, <0x0208>;
					};

					dpll_pcie_ref_m2ldo_ck: dpll_pcie_ref_m2ldo_ck@210 {
						#clock-cells = <0>;
						compatible = "ti,divider-clock";
						clocks = <&dpll_pcie_ref_ck>;
						ti,max-div = <31>;
						ti,autoidle-shift = <8>;
						reg = <0x0210>;
						ti,index-starts-at-one;
						ti,invert-autoidle-bit;
					};

					apll_pcie_in_clk_mux: apll_pcie_in_clk_mux@4ae06118 {
						compatible = "ti,mux-clock";
						clocks = <&dpll_pcie_ref_m2ldo_ck>, <&pciesref_acs_clk_ck>;
						#clock-cells = <0>;
						reg = <0x021c 0x4>;
						ti,bit-shift = <7>;
					};

					apll_pcie_ck: apll_pcie_ck@21c {
						#clock-cells = <0>;
						compatible = "ti,dra7-apll-clock";
						clocks = <&apll_pcie_in_clk_mux>, <&dpll_pcie_ref_ck>;
						reg = <0x021c>, <0x0220>;
					};

					optfclk_pciephy1_32khz: optfclk_pciephy1_32khz@4a0093b0 {
						compatible = "ti,gate-clock";
						clocks = <&sys_32k_ck>;
						#clock-cells = <0>;
						reg = <0x13b0>;
						ti,bit-shift = <8>;
					};

					optfclk_pciephy2_32khz: optfclk_pciephy2_32khz@4a0093b8 {
						compatible = "ti,gate-clock";
						clocks = <&sys_32k_ck>;
						#clock-cells = <0>;
						reg = <0x13b8>;
						ti,bit-shift = <8>;
					};

					optfclk_pciephy_div: optfclk_pciephy_div@4a00821c {
						compatible = "ti,divider-clock";
						clocks = <&apll_pcie_ck>;
						#clock-cells = <0>;
						reg = <0x021c>;
						ti,dividers = <2>, <1>;
						ti,bit-shift = <8>;
						ti,max-div = <2>;
					};

					optfclk_pciephy1_clk: optfclk_pciephy1_clk@4a0093b0 {
						compatible = "ti,gate-clock";
						clocks = <&apll_pcie_ck>;
						#clock-cells = <0>;
						reg = <0x13b0>;
						ti,bit-shift = <9>;
					};

					optfclk_pciephy2_clk: optfclk_pciephy2_clk@4a0093b8 {
						compatible = "ti,gate-clock";
						clocks = <&apll_pcie_ck>;
						#clock-cells = <0>;
						reg = <0x13b8>;
						ti,bit-shift = <9>;
					};

					optfclk_pciephy1_div_clk: optfclk_pciephy1_div_clk@4a0093b0 {
						compatible = "ti,gate-clock";
						clocks = <&optfclk_pciephy_div>;
						#clock-cells = <0>;
						reg = <0x13b0>;
						ti,bit-shift = <10>;
					};

					optfclk_pciephy2_div_clk: optfclk_pciephy2_div_clk@4a0093b8 {
						compatible = "ti,gate-clock";
						clocks = <&optfclk_pciephy_div>;
						#clock-cells = <0>;
						reg = <0x13b8>;
						ti,bit-shift = <10>;
					};

					apll_pcie_clkvcoldo: apll_pcie_clkvcoldo {
						#clock-cells = <0>;
						compatible = "fixed-factor-clock";
						clocks = <&apll_pcie_ck>;
						clock-mult = <1>;
						clock-div = <1>;
					};

					apll_pcie_clkvcoldo_div: apll_pcie_clkvcoldo_div {
						#clock-cells = <0>;
						compatible = "fixed-factor-clock";
						clocks = <&apll_pcie_ck>;
						clock-mult = <1>;
						clock-div = <1>;
					};

					apll_pcie_m2_ck: apll_pcie_m2_ck {
						#clock-cells = <0>;
						compatible = "fixed-factor-clock";
						clocks = <&apll_pcie_ck>;
						clock-mult = <1>;
						clock-div = <1>;
					};

					dpll_per_byp_mux: dpll_per_byp_mux@14c {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&sys_clkin1>, <&per_dpll_hs_clk_div>;
						ti,bit-shift = <23>;
						reg = <0x014c>;
					};

					dpll_per_ck: dpll_per_ck@140 {
						#clock-cells = <0>;
						compatible = "ti,omap4-dpll-clock";
						clocks = <&sys_clkin1>, <&dpll_per_byp_mux>;
						reg = <0x0140>, <0x0144>, <0x014c>, <0x0148>;
					};

					dpll_per_m2_ck: dpll_per_m2_ck@150 {
						#clock-cells = <0>;
						compatible = "ti,divider-clock";
						clocks = <&dpll_per_ck>;
						ti,max-div = <31>;
						ti,autoidle-shift = <8>;
						reg = <0x0150>;
						ti,index-starts-at-one;
						ti,invert-autoidle-bit;
					};

					func_96m_aon_dclk_div: func_96m_aon_dclk_div {
						#clock-cells = <0>;
						compatible = "fixed-factor-clock";
						clocks = <&dpll_per_m2_ck>;
						clock-mult = <1>;
						clock-div = <1>;
					};

					dpll_usb_byp_mux: dpll_usb_byp_mux@18c {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&sys_clkin1>, <&usb_dpll_hs_clk_div>;
						ti,bit-shift = <23>;
						reg = <0x018c>;
					};

					dpll_usb_ck: dpll_usb_ck@180 {
						#clock-cells = <0>;
						compatible = "ti,omap4-dpll-j-type-clock";
						clocks = <&sys_clkin1>, <&dpll_usb_byp_mux>;
						reg = <0x0180>, <0x0184>, <0x018c>, <0x0188>;
					};

					dpll_usb_m2_ck: dpll_usb_m2_ck@190 {
						#clock-cells = <0>;
						compatible = "ti,divider-clock";
						clocks = <&dpll_usb_ck>;
						ti,max-div = <127>;
						ti,autoidle-shift = <8>;
						reg = <0x0190>;
						ti,index-starts-at-one;
						ti,invert-autoidle-bit;
					};

					dpll_pcie_ref_m2_ck: dpll_pcie_ref_m2_ck@210 {
						#clock-cells = <0>;
						compatible = "ti,divider-clock";
						clocks = <&dpll_pcie_ref_ck>;
						ti,max-div = <127>;
						ti,autoidle-shift = <8>;
						reg = <0x0210>;
						ti,index-starts-at-one;
						ti,invert-autoidle-bit;
					};

					dpll_per_x2_ck: dpll_per_x2_ck {
						#clock-cells = <0>;
						compatible = "ti,omap4-dpll-x2-clock";
						clocks = <&dpll_per_ck>;
					};

					dpll_per_h11x2_ck: dpll_per_h11x2_ck@158 {
						#clock-cells = <0>;
						compatible = "ti,divider-clock";
						clocks = <&dpll_per_x2_ck>;
						ti,max-div = <63>;
						ti,autoidle-shift = <8>;
						reg = <0x0158>;
						ti,index-starts-at-one;
						ti,invert-autoidle-bit;
					};

					dpll_per_h12x2_ck: dpll_per_h12x2_ck@15c {
						#clock-cells = <0>;
						compatible = "ti,divider-clock";
						clocks = <&dpll_per_x2_ck>;
						ti,max-div = <63>;
						ti,autoidle-shift = <8>;
						reg = <0x015c>;
						ti,index-starts-at-one;
						ti,invert-autoidle-bit;
					};

					dpll_per_h13x2_ck: dpll_per_h13x2_ck@160 {
						#clock-cells = <0>;
						compatible = "ti,divider-clock";
						clocks = <&dpll_per_x2_ck>;
						ti,max-div = <63>;
						ti,autoidle-shift = <8>;
						reg = <0x0160>;
						ti,index-starts-at-one;
						ti,invert-autoidle-bit;
					};

					dpll_per_h14x2_ck: dpll_per_h14x2_ck@164 {
						#clock-cells = <0>;
						compatible = "ti,divider-clock";
						clocks = <&dpll_per_x2_ck>;
						ti,max-div = <63>;
						ti,autoidle-shift = <8>;
						reg = <0x0164>;
						ti,index-starts-at-one;
						ti,invert-autoidle-bit;
					};

					dpll_per_m2x2_ck: dpll_per_m2x2_ck@150 {
						#clock-cells = <0>;
						compatible = "ti,divider-clock";
						clocks = <&dpll_per_x2_ck>;
						ti,max-div = <31>;
						ti,autoidle-shift = <8>;
						reg = <0x0150>;
						ti,index-starts-at-one;
						ti,invert-autoidle-bit;
					};

					dpll_usb_clkdcoldo: dpll_usb_clkdcoldo {
						#clock-cells = <0>;
						compatible = "fixed-factor-clock";
						clocks = <&dpll_usb_ck>;
						clock-mult = <1>;
						clock-div = <1>;
					};

					func_128m_clk: func_128m_clk {
						#clock-cells = <0>;
						compatible = "fixed-factor-clock";
						clocks = <&dpll_per_h11x2_ck>;
						clock-mult = <1>;
						clock-div = <2>;
					};

					func_12m_fclk: func_12m_fclk {
						#clock-cells = <0>;
						compatible = "fixed-factor-clock";
						clocks = <&dpll_per_m2x2_ck>;
						clock-mult = <1>;
						clock-div = <16>;
					};

					func_24m_clk: func_24m_clk {
						#clock-cells = <0>;
						compatible = "fixed-factor-clock";
						clocks = <&dpll_per_m2_ck>;
						clock-mult = <1>;
						clock-div = <4>;
					};

					func_48m_fclk: func_48m_fclk {
						#clock-cells = <0>;
						compatible = "fixed-factor-clock";
						clocks = <&dpll_per_m2x2_ck>;
						clock-mult = <1>;
						clock-div = <4>;
					};

					func_96m_fclk: func_96m_fclk {
						#clock-cells = <0>;
						compatible = "fixed-factor-clock";
						clocks = <&dpll_per_m2x2_ck>;
						clock-mult = <1>;
						clock-div = <2>;
					};

					l3init_60m_fclk: l3init_60m_fclk@104 {
						#clock-cells = <0>;
						compatible = "ti,divider-clock";
						clocks = <&dpll_usb_m2_ck>;
						reg = <0x0104>;
						ti,dividers = <1>, <8>;
					};

					clkout2_clk: clkout2_clk@6b0 {
						#clock-cells = <0>;
						compatible = "ti,gate-clock";
						clocks = <&clkoutmux2_clk_mux>;
						ti,bit-shift = <8>;
						reg = <0x06b0>;
					};

					l3init_960m_gfclk: l3init_960m_gfclk@6c0 {
						#clock-cells = <0>;
						compatible = "ti,gate-clock";
						clocks = <&dpll_usb_clkdcoldo>;
						ti,bit-shift = <8>;
						reg = <0x06c0>;
					};

					dss_32khz_clk: dss_32khz_clk@1120 {
						#clock-cells = <0>;
						compatible = "ti,gate-clock";
						clocks = <&sys_32k_ck>;
						ti,bit-shift = <11>;
						reg = <0x1120>;
					};

					dss_48mhz_clk: dss_48mhz_clk@1120 {
						#clock-cells = <0>;
						compatible = "ti,gate-clock";
						clocks = <&func_48m_fclk>;
						ti,bit-shift = <9>;
						reg = <0x1120>;
					};

					dss_dss_clk: dss_dss_clk@1120 {
						#clock-cells = <0>;
						compatible = "ti,gate-clock";
						clocks = <&dpll_per_h12x2_ck>;
						ti,bit-shift = <8>;
						reg = <0x1120>;
						ti,set-rate-parent;
					};

					dss_hdmi_clk: dss_hdmi_clk@1120 {
						#clock-cells = <0>;
						compatible = "ti,gate-clock";
						clocks = <&hdmi_dpll_clk_mux>;
						ti,bit-shift = <10>;
						reg = <0x1120>;
					};

					dss_video1_clk: dss_video1_clk@1120 {
						#clock-cells = <0>;
						compatible = "ti,gate-clock";
						clocks = <&video1_dpll_clk_mux>;
						ti,bit-shift = <12>;
						reg = <0x1120>;
					};

					dss_video2_clk: dss_video2_clk@1120 {
						#clock-cells = <0>;
						compatible = "ti,gate-clock";
						clocks = <&video2_dpll_clk_mux>;
						ti,bit-shift = <13>;
						reg = <0x1120>;
					};

					gpio2_dbclk: gpio2_dbclk@1760 {
						#clock-cells = <0>;
						compatible = "ti,gate-clock";
						clocks = <&sys_32k_ck>;
						ti,bit-shift = <8>;
						reg = <0x1760>;
					};

					gpio3_dbclk: gpio3_dbclk@1768 {
						#clock-cells = <0>;
						compatible = "ti,gate-clock";
						clocks = <&sys_32k_ck>;
						ti,bit-shift = <8>;
						reg = <0x1768>;
					};

					gpio4_dbclk: gpio4_dbclk@1770 {
						#clock-cells = <0>;
						compatible = "ti,gate-clock";
						clocks = <&sys_32k_ck>;
						ti,bit-shift = <8>;
						reg = <0x1770>;
					};

					gpio5_dbclk: gpio5_dbclk@1778 {
						#clock-cells = <0>;
						compatible = "ti,gate-clock";
						clocks = <&sys_32k_ck>;
						ti,bit-shift = <8>;
						reg = <0x1778>;
					};

					gpio6_dbclk: gpio6_dbclk@1780 {
						#clock-cells = <0>;
						compatible = "ti,gate-clock";
						clocks = <&sys_32k_ck>;
						ti,bit-shift = <8>;
						reg = <0x1780>;
					};

					gpio7_dbclk: gpio7_dbclk@1810 {
						#clock-cells = <0>;
						compatible = "ti,gate-clock";
						clocks = <&sys_32k_ck>;
						ti,bit-shift = <8>;
						reg = <0x1810>;
					};

					gpio8_dbclk: gpio8_dbclk@1818 {
						#clock-cells = <0>;
						compatible = "ti,gate-clock";
						clocks = <&sys_32k_ck>;
						ti,bit-shift = <8>;
						reg = <0x1818>;
					};

					mmc1_clk32k: mmc1_clk32k@1328 {
						#clock-cells = <0>;
						compatible = "ti,gate-clock";
						clocks = <&sys_32k_ck>;
						ti,bit-shift = <8>;
						reg = <0x1328>;
					};

					mmc2_clk32k: mmc2_clk32k@1330 {
						#clock-cells = <0>;
						compatible = "ti,gate-clock";
						clocks = <&sys_32k_ck>;
						ti,bit-shift = <8>;
						reg = <0x1330>;
					};

					mmc3_clk32k: mmc3_clk32k@1820 {
						#clock-cells = <0>;
						compatible = "ti,gate-clock";
						clocks = <&sys_32k_ck>;
						ti,bit-shift = <8>;
						reg = <0x1820>;
					};

					mmc4_clk32k: mmc4_clk32k@1828 {
						#clock-cells = <0>;
						compatible = "ti,gate-clock";
						clocks = <&sys_32k_ck>;
						ti,bit-shift = <8>;
						reg = <0x1828>;
					};

					sata_ref_clk: sata_ref_clk@1388 {
						#clock-cells = <0>;
						compatible = "ti,gate-clock";
						clocks = <&sys_clkin1>;
						ti,bit-shift = <8>;
						reg = <0x1388>;
					};

					usb_otg_ss1_refclk960m: usb_otg_ss1_refclk960m@13f0 {
						#clock-cells = <0>;
						compatible = "ti,gate-clock";
						clocks = <&l3init_960m_gfclk>;
						ti,bit-shift = <8>;
						reg = <0x13f0>;
					};

					usb_otg_ss2_refclk960m: usb_otg_ss2_refclk960m@1340 {
						#clock-cells = <0>;
						compatible = "ti,gate-clock";
						clocks = <&l3init_960m_gfclk>;
						ti,bit-shift = <8>;
						reg = <0x1340>;
					};

					usb_phy1_always_on_clk32k: usb_phy1_always_on_clk32k@640 {
						#clock-cells = <0>;
						compatible = "ti,gate-clock";
						clocks = <&sys_32k_ck>;
						ti,bit-shift = <8>;
						reg = <0x0640>;
					};

					usb_phy2_always_on_clk32k: usb_phy2_always_on_clk32k@688 {
						#clock-cells = <0>;
						compatible = "ti,gate-clock";
						clocks = <&sys_32k_ck>;
						ti,bit-shift = <8>;
						reg = <0x0688>;
					};

					usb_phy3_always_on_clk32k: usb_phy3_always_on_clk32k@698 {
						#clock-cells = <0>;
						compatible = "ti,gate-clock";
						clocks = <&sys_32k_ck>;
						ti,bit-shift = <8>;
						reg = <0x0698>;
					};

					atl_dpll_clk_mux: atl_dpll_clk_mux@c00 {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&sys_32k_ck>, <&video1_clkin_ck>, <&video2_clkin_ck>, <&hdmi_clkin_ck>;
						ti,bit-shift = <24>;
						reg = <0x0c00>;
					};

					atl_gfclk_mux: atl_gfclk_mux@c00 {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&l3_iclk_div>, <&dpll_abe_m2_ck>, <&atl_dpll_clk_mux>;
						ti,bit-shift = <26>;
						reg = <0x0c00>;
					};

					rmii_50mhz_clk_mux: rmii_50mhz_clk_mux@13d0 {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&dpll_gmac_h11x2_ck>, <&rmii_clk_ck>;
						ti,bit-shift = <24>;
						reg = <0x13d0>;
					};

					gmac_rft_clk_mux: gmac_rft_clk_mux@13d0 {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&video1_clkin_ck>, <&video2_clkin_ck>, <&dpll_abe_m2_ck>, <&hdmi_clkin_ck>, <&l3_iclk_div>;
						ti,bit-shift = <25>;
						reg = <0x13d0>;
					};

					gpu_core_gclk_mux: gpu_core_gclk_mux@1220 {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&dpll_core_h14x2_ck>, <&dpll_per_h14x2_ck>, <&dpll_gpu_m2_ck>;
						ti,bit-shift = <24>;
						reg = <0x1220>;
						assigned-clocks = <&gpu_core_gclk_mux>;
						assigned-clock-parents = <&dpll_gpu_m2_ck>;
					};

					gpu_hyd_gclk_mux: gpu_hyd_gclk_mux@1220 {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&dpll_core_h14x2_ck>, <&dpll_per_h14x2_ck>, <&dpll_gpu_m2_ck>;
						ti,bit-shift = <26>;
						reg = <0x1220>;
						assigned-clocks = <&gpu_hyd_gclk_mux>;
						assigned-clock-parents = <&dpll_gpu_m2_ck>;
					};

					l3instr_ts_gclk_div: l3instr_ts_gclk_div@e50 {
						#clock-cells = <0>;
						compatible = "ti,divider-clock";
						clocks = <&wkupaon_iclk_mux>;
						ti,bit-shift = <24>;
						reg = <0x0e50>;
						ti,dividers = <8>, <16>, <32>;
					};

					mcasp2_ahclkr_mux: mcasp2_ahclkr_mux@1860 {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&abe_24m_fclk>, <&abe_sys_clk_div>, <&func_24m_clk>, <&atl_clkin3_ck>, <&atl_clkin2_ck>, <&atl_clkin1_ck>, <&atl_clkin0_ck>, <&sys_clkin2>, <&ref_clkin0_ck>, <&ref_clkin1_ck>, <&ref_clkin2_ck>, <&ref_clkin3_ck>, <&mlb_clk>, <&mlbp_clk>;
						ti,bit-shift = <28>;
						reg = <0x1860>;
					};

					mcasp2_ahclkx_mux: mcasp2_ahclkx_mux@1860 {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&abe_24m_fclk>, <&abe_sys_clk_div>, <&func_24m_clk>, <&atl_clkin3_ck>, <&atl_clkin2_ck>, <&atl_clkin1_ck>, <&atl_clkin0_ck>, <&sys_clkin2>, <&ref_clkin0_ck>, <&ref_clkin1_ck>, <&ref_clkin2_ck>, <&ref_clkin3_ck>, <&mlb_clk>, <&mlbp_clk>;
						ti,bit-shift = <24>;
						reg = <0x1860>;
					};

					mcasp2_aux_gfclk_mux: mcasp2_aux_gfclk_mux@1860 {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&per_abe_x1_gfclk2_div>, <&video1_clk2_div>, <&video2_clk2_div>, <&hdmi_clk2_div>;
						ti,bit-shift = <22>;
						reg = <0x1860>;
					};

					mcasp3_ahclkx_mux: mcasp3_ahclkx_mux@1868 {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&abe_24m_fclk>, <&abe_sys_clk_div>, <&func_24m_clk>, <&atl_clkin3_ck>, <&atl_clkin2_ck>, <&atl_clkin1_ck>, <&atl_clkin0_ck>, <&sys_clkin2>, <&ref_clkin0_ck>, <&ref_clkin1_ck>, <&ref_clkin2_ck>, <&ref_clkin3_ck>, <&mlb_clk>, <&mlbp_clk>;
						ti,bit-shift = <24>;
						reg = <0x1868>;
						assigned-clocks = <&mcasp3_ahclkx_mux>;
						assigned-clock-parents = <&abe_24m_fclk>;
					};

					mcasp3_aux_gfclk_mux: mcasp3_aux_gfclk_mux@1868 {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&per_abe_x1_gfclk2_div>, <&video1_clk2_div>, <&video2_clk2_div>, <&hdmi_clk2_div>;
						ti,bit-shift = <22>;
						reg = <0x1868>;
					};

					mcasp4_ahclkx_mux: mcasp4_ahclkx_mux@1898 {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&abe_24m_fclk>, <&abe_sys_clk_div>, <&func_24m_clk>, <&atl_clkin3_ck>, <&atl_clkin2_ck>, <&atl_clkin1_ck>, <&atl_clkin0_ck>, <&sys_clkin2>, <&ref_clkin0_ck>, <&ref_clkin1_ck>, <&ref_clkin2_ck>, <&ref_clkin3_ck>, <&mlb_clk>, <&mlbp_clk>;
						ti,bit-shift = <24>;
						reg = <0x1898>;
					};

					mcasp4_aux_gfclk_mux: mcasp4_aux_gfclk_mux@1898 {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&per_abe_x1_gfclk2_div>, <&video1_clk2_div>, <&video2_clk2_div>, <&hdmi_clk2_div>;
						ti,bit-shift = <22>;
						reg = <0x1898>;
					};

					mcasp5_ahclkx_mux: mcasp5_ahclkx_mux@1878 {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&abe_24m_fclk>, <&abe_sys_clk_div>, <&func_24m_clk>, <&atl_clkin3_ck>, <&atl_clkin2_ck>, <&atl_clkin1_ck>, <&atl_clkin0_ck>, <&sys_clkin2>, <&ref_clkin0_ck>, <&ref_clkin1_ck>, <&ref_clkin2_ck>, <&ref_clkin3_ck>, <&mlb_clk>, <&mlbp_clk>;
						ti,bit-shift = <24>;
						reg = <0x1878>;
					};

					mcasp5_aux_gfclk_mux: mcasp5_aux_gfclk_mux@1878 {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&per_abe_x1_gfclk2_div>, <&video1_clk2_div>, <&video2_clk2_div>, <&hdmi_clk2_div>;
						ti,bit-shift = <22>;
						reg = <0x1878>;
					};

					mcasp6_ahclkx_mux: mcasp6_ahclkx_mux@1904 {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&abe_24m_fclk>, <&abe_sys_clk_div>, <&func_24m_clk>, <&atl_clkin3_ck>, <&atl_clkin2_ck>, <&atl_clkin1_ck>, <&atl_clkin0_ck>, <&sys_clkin2>, <&ref_clkin0_ck>, <&ref_clkin1_ck>, <&ref_clkin2_ck>, <&ref_clkin3_ck>, <&mlb_clk>, <&mlbp_clk>;
						ti,bit-shift = <24>;
						reg = <0x1904>;
					};

					mcasp6_aux_gfclk_mux: mcasp6_aux_gfclk_mux@1904 {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&per_abe_x1_gfclk2_div>, <&video1_clk2_div>, <&video2_clk2_div>, <&hdmi_clk2_div>;
						ti,bit-shift = <22>;
						reg = <0x1904>;
					};

					mcasp7_ahclkx_mux: mcasp7_ahclkx_mux@1908 {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&abe_24m_fclk>, <&abe_sys_clk_div>, <&func_24m_clk>, <&atl_clkin3_ck>, <&atl_clkin2_ck>, <&atl_clkin1_ck>, <&atl_clkin0_ck>, <&sys_clkin2>, <&ref_clkin0_ck>, <&ref_clkin1_ck>, <&ref_clkin2_ck>, <&ref_clkin3_ck>, <&mlb_clk>, <&mlbp_clk>;
						ti,bit-shift = <24>;
						reg = <0x1908>;
					};

					mcasp7_aux_gfclk_mux: mcasp7_aux_gfclk_mux@1908 {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&per_abe_x1_gfclk2_div>, <&video1_clk2_div>, <&video2_clk2_div>, <&hdmi_clk2_div>;
						ti,bit-shift = <22>;
						reg = <0x1908>;
					};

					mcasp8_ahclkx_mux: mcasp8_ahclkx_mux@1890 {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&abe_24m_fclk>, <&abe_sys_clk_div>, <&func_24m_clk>, <&atl_clkin3_ck>, <&atl_clkin2_ck>, <&atl_clkin1_ck>, <&atl_clkin0_ck>, <&sys_clkin2>, <&ref_clkin0_ck>, <&ref_clkin1_ck>, <&ref_clkin2_ck>, <&ref_clkin3_ck>, <&mlb_clk>, <&mlbp_clk>;
						ti,bit-shift = <22>;
						reg = <0x1890>;
					};

					mcasp8_aux_gfclk_mux: mcasp8_aux_gfclk_mux@1890 {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&per_abe_x1_gfclk2_div>, <&video1_clk2_div>, <&video2_clk2_div>, <&hdmi_clk2_div>;
						ti,bit-shift = <24>;
						reg = <0x1890>;
					};

					mmc1_fclk_mux: mmc1_fclk_mux@1328 {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&func_128m_clk>, <&dpll_per_m2x2_ck>;
						ti,bit-shift = <24>;
						reg = <0x1328>;
					};

					mmc1_fclk_div: mmc1_fclk_div@1328 {
						#clock-cells = <0>;
						compatible = "ti,divider-clock";
						clocks = <&mmc1_fclk_mux>;
						ti,bit-shift = <25>;
						ti,max-div = <4>;
						reg = <0x1328>;
						ti,index-power-of-two;
					};

					mmc2_fclk_mux: mmc2_fclk_mux@1330 {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&func_128m_clk>, <&dpll_per_m2x2_ck>;
						ti,bit-shift = <24>;
						reg = <0x1330>;
					};

					mmc2_fclk_div: mmc2_fclk_div@1330 {
						#clock-cells = <0>;
						compatible = "ti,divider-clock";
						clocks = <&mmc2_fclk_mux>;
						ti,bit-shift = <25>;
						ti,max-div = <4>;
						reg = <0x1330>;
						ti,index-power-of-two;
					};

					mmc3_gfclk_mux: mmc3_gfclk_mux@1820 {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&func_48m_fclk>, <&dpll_per_m2x2_ck>;
						ti,bit-shift = <24>;
						reg = <0x1820>;
					};

					mmc3_gfclk_div: mmc3_gfclk_div@1820 {
						#clock-cells = <0>;
						compatible = "ti,divider-clock";
						clocks = <&mmc3_gfclk_mux>;
						ti,bit-shift = <25>;
						ti,max-div = <4>;
						reg = <0x1820>;
						ti,index-power-of-two;
					};

					mmc4_gfclk_mux: mmc4_gfclk_mux@1828 {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&func_48m_fclk>, <&dpll_per_m2x2_ck>;
						ti,bit-shift = <24>;
						reg = <0x1828>;
					};

					mmc4_gfclk_div: mmc4_gfclk_div@1828 {
						#clock-cells = <0>;
						compatible = "ti,divider-clock";
						clocks = <&mmc4_gfclk_mux>;
						ti,bit-shift = <25>;
						ti,max-div = <4>;
						reg = <0x1828>;
						ti,index-power-of-two;
					};

					qspi_gfclk_mux: qspi_gfclk_mux@1838 {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&func_128m_clk>, <&dpll_per_h13x2_ck>;
						ti,bit-shift = <24>;
						reg = <0x1838>;
					};

					qspi_gfclk_div: qspi_gfclk_div@1838 {
						#clock-cells = <0>;
						compatible = "ti,divider-clock";
						clocks = <&qspi_gfclk_mux>;
						ti,bit-shift = <25>;
						ti,max-div = <4>;
						reg = <0x1838>;
						ti,index-power-of-two;
					};

					timer10_gfclk_mux: timer10_gfclk_mux@1728 {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&timer_sys_clk_div>, <&sys_32k_ck>, <&sys_clkin2>, <&ref_clkin0_ck>, <&ref_clkin1_ck>, <&ref_clkin2_ck>, <&ref_clkin3_ck>, <&abe_giclk_div>, <&video1_div_clk>, <&video2_div_clk>, <&hdmi_div_clk>;
						ti,bit-shift = <24>;
						reg = <0x1728>;
					};

					timer11_gfclk_mux: timer11_gfclk_mux@1730 {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&timer_sys_clk_div>, <&sys_32k_ck>, <&sys_clkin2>, <&ref_clkin0_ck>, <&ref_clkin1_ck>, <&ref_clkin2_ck>, <&ref_clkin3_ck>, <&abe_giclk_div>, <&video1_div_clk>, <&video2_div_clk>, <&hdmi_div_clk>;
						ti,bit-shift = <24>;
						reg = <0x1730>;
					};

					timer13_gfclk_mux: timer13_gfclk_mux@17c8 {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&timer_sys_clk_div>, <&sys_32k_ck>, <&sys_clkin2>, <&ref_clkin0_ck>, <&ref_clkin1_ck>, <&ref_clkin2_ck>, <&ref_clkin3_ck>, <&abe_giclk_div>, <&video1_div_clk>, <&video2_div_clk>, <&hdmi_div_clk>;
						ti,bit-shift = <24>;
						reg = <0x17c8>;
					};

					timer14_gfclk_mux: timer14_gfclk_mux@17d0 {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&timer_sys_clk_div>, <&sys_32k_ck>, <&sys_clkin2>, <&ref_clkin0_ck>, <&ref_clkin1_ck>, <&ref_clkin2_ck>, <&ref_clkin3_ck>, <&abe_giclk_div>, <&video1_div_clk>, <&video2_div_clk>, <&hdmi_div_clk>;
						ti,bit-shift = <24>;
						reg = <0x17d0>;
					};

					timer15_gfclk_mux: timer15_gfclk_mux@17d8 {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&timer_sys_clk_div>, <&sys_32k_ck>, <&sys_clkin2>, <&ref_clkin0_ck>, <&ref_clkin1_ck>, <&ref_clkin2_ck>, <&ref_clkin3_ck>, <&abe_giclk_div>, <&video1_div_clk>, <&video2_div_clk>, <&hdmi_div_clk>;
						ti,bit-shift = <24>;
						reg = <0x17d8>;
					};

					timer16_gfclk_mux: timer16_gfclk_mux@1830 {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&timer_sys_clk_div>, <&sys_32k_ck>, <&sys_clkin2>, <&ref_clkin0_ck>, <&ref_clkin1_ck>, <&ref_clkin2_ck>, <&ref_clkin3_ck>, <&abe_giclk_div>, <&video1_div_clk>, <&video2_div_clk>, <&hdmi_div_clk>;
						ti,bit-shift = <24>;
						reg = <0x1830>;
					};

					timer2_gfclk_mux: timer2_gfclk_mux@1738 {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&timer_sys_clk_div>, <&sys_32k_ck>, <&sys_clkin2>, <&ref_clkin0_ck>, <&ref_clkin1_ck>, <&ref_clkin2_ck>, <&ref_clkin3_ck>, <&abe_giclk_div>, <&video1_div_clk>, <&video2_div_clk>, <&hdmi_div_clk>;
						ti,bit-shift = <24>;
						reg = <0x1738>;
					};

					timer3_gfclk_mux: timer3_gfclk_mux@1740 {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&timer_sys_clk_div>, <&sys_32k_ck>, <&sys_clkin2>, <&ref_clkin0_ck>, <&ref_clkin1_ck>, <&ref_clkin2_ck>, <&ref_clkin3_ck>, <&abe_giclk_div>, <&video1_div_clk>, <&video2_div_clk>, <&hdmi_div_clk>;
						ti,bit-shift = <24>;
						reg = <0x1740>;
					};

					timer4_gfclk_mux: timer4_gfclk_mux@1748 {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&timer_sys_clk_div>, <&sys_32k_ck>, <&sys_clkin2>, <&ref_clkin0_ck>, <&ref_clkin1_ck>, <&ref_clkin2_ck>, <&ref_clkin3_ck>, <&abe_giclk_div>, <&video1_div_clk>, <&video2_div_clk>, <&hdmi_div_clk>;
						ti,bit-shift = <24>;
						reg = <0x1748>;
					};

					timer9_gfclk_mux: timer9_gfclk_mux@1750 {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&timer_sys_clk_div>, <&sys_32k_ck>, <&sys_clkin2>, <&ref_clkin0_ck>, <&ref_clkin1_ck>, <&ref_clkin2_ck>, <&ref_clkin3_ck>, <&abe_giclk_div>, <&video1_div_clk>, <&video2_div_clk>, <&hdmi_div_clk>;
						ti,bit-shift = <24>;
						reg = <0x1750>;
					};

					uart1_gfclk_mux: uart1_gfclk_mux@1840 {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&func_48m_fclk>, <&dpll_per_m2x2_ck>;
						ti,bit-shift = <24>;
						reg = <0x1840>;
					};

					uart2_gfclk_mux: uart2_gfclk_mux@1848 {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&func_48m_fclk>, <&dpll_per_m2x2_ck>;
						ti,bit-shift = <24>;
						reg = <0x1848>;
					};

					uart3_gfclk_mux: uart3_gfclk_mux@1850 {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&func_48m_fclk>, <&dpll_per_m2x2_ck>;
						ti,bit-shift = <24>;
						reg = <0x1850>;
					};

					uart4_gfclk_mux: uart4_gfclk_mux@1858 {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&func_48m_fclk>, <&dpll_per_m2x2_ck>;
						ti,bit-shift = <24>;
						reg = <0x1858>;
					};

					uart5_gfclk_mux: uart5_gfclk_mux@1870 {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&func_48m_fclk>, <&dpll_per_m2x2_ck>;
						ti,bit-shift = <24>;
						reg = <0x1870>;
					};

					uart7_gfclk_mux: uart7_gfclk_mux@18d0 {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&func_48m_fclk>, <&dpll_per_m2x2_ck>;
						ti,bit-shift = <24>;
						reg = <0x18d0>;
					};

					uart8_gfclk_mux: uart8_gfclk_mux@18e0 {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&func_48m_fclk>, <&dpll_per_m2x2_ck>;
						ti,bit-shift = <24>;
						reg = <0x18e0>;
					};

					uart9_gfclk_mux: uart9_gfclk_mux@18e8 {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&func_48m_fclk>, <&dpll_per_m2x2_ck>;
						ti,bit-shift = <24>;
						reg = <0x18e8>;
					};

					vip1_gclk_mux: vip1_gclk_mux@1020 {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&l3_iclk_div>, <&dpll_core_h23x2_ck>;
						ti,bit-shift = <24>;
						reg = <0x1020>;
					};

					vip2_gclk_mux: vip2_gclk_mux@1028 {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&l3_iclk_div>, <&dpll_core_h23x2_ck>;
						ti,bit-shift = <24>;
						reg = <0x1028>;
					};

					vip3_gclk_mux: vip3_gclk_mux@1030 {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&l3_iclk_div>, <&dpll_core_h23x2_ck>;
						ti,bit-shift = <24>;
						reg = <0x1030>;
					};
				};

				cm_core_clockdomains: clockdomains {
					coreaon_clkdm: coreaon_clkdm {
						compatible = "ti,clockdomain";
						clocks = <&dpll_usb_ck>;
					};
				};
			};
		};

		l4_wkup: l4@4ae00000 {
			compatible = "ti,dra7-l4-wkup", "simple-bus";
			#address-cells = <1>;
			#size-cells = <1>;
			ranges = <0 0x4ae00000 0x3f000>;

			counter32k: counter@4000 {
				compatible = "ti,omap-counter32k";
				reg = <0x4000 0x40>;
				ti,hwmods = "counter_32k";
			};

			prm: prm@6000 {
				compatible = "ti,dra7-prm";
				reg = <0x6000 0x3000>;
				interrupts = <GIC_SPI 6 IRQ_TYPE_LEVEL_HIGH>;

				prm_clocks: clocks {
					#address-cells = <1>;
					#size-cells = <0>;

					sys_clkin1: sys_clkin1@110 {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&virt_12000000_ck>, <&virt_20000000_ck>, <&virt_16800000_ck>, <&virt_19200000_ck>, <&virt_26000000_ck>, <&virt_27000000_ck>, <&virt_38400000_ck>;
						reg = <0x0110>;
						ti,index-starts-at-one;
					};

					abe_dpll_sys_clk_mux: abe_dpll_sys_clk_mux@118 {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&sys_clkin1>, <&sys_clkin2>;
						reg = <0x0118>;
					};

					abe_dpll_bypass_clk_mux: abe_dpll_bypass_clk_mux@114 {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&abe_dpll_sys_clk_mux>, <&sys_32k_ck>;
						reg = <0x0114>;
					};

					abe_dpll_clk_mux: abe_dpll_clk_mux@10c {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&abe_dpll_sys_clk_mux>, <&sys_32k_ck>;
						reg = <0x010c>;
					};

					abe_24m_fclk: abe_24m_fclk@11c {
						#clock-cells = <0>;
						compatible = "ti,divider-clock";
						clocks = <&dpll_abe_m2x2_ck>;
						reg = <0x011c>;
						ti,dividers = <8>, <16>;
					};

					aess_fclk: aess_fclk@178 {
						#clock-cells = <0>;
						compatible = "ti,divider-clock";
						clocks = <&abe_clk>;
						reg = <0x0178>;
						ti,max-div = <2>;
					};

					abe_giclk_div: abe_giclk_div@174 {
						#clock-cells = <0>;
						compatible = "ti,divider-clock";
						clocks = <&aess_fclk>;
						reg = <0x0174>;
						ti,max-div = <2>;
					};

					abe_lp_clk_div: abe_lp_clk_div@1d8 {
						#clock-cells = <0>;
						compatible = "ti,divider-clock";
						clocks = <&dpll_abe_m2x2_ck>;
						reg = <0x01d8>;
						ti,dividers = <16>, <32>;
					};

					abe_sys_clk_div: abe_sys_clk_div@120 {
						#clock-cells = <0>;
						compatible = "ti,divider-clock";
						clocks = <&sys_clkin1>;
						reg = <0x0120>;
						ti,max-div = <2>;
					};

					adc_gfclk_mux: adc_gfclk_mux@1dc {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&sys_clkin1>, <&sys_clkin2>, <&sys_32k_ck>;
						reg = <0x01dc>;
					};

					sys_clk1_dclk_div: sys_clk1_dclk_div@1c8 {
						#clock-cells = <0>;
						compatible = "ti,divider-clock";
						clocks = <&sys_clkin1>;
						ti,max-div = <64>;
						reg = <0x01c8>;
						ti,index-power-of-two;
					};

					sys_clk2_dclk_div: sys_clk2_dclk_div@1cc {
						#clock-cells = <0>;
						compatible = "ti,divider-clock";
						clocks = <&sys_clkin2>;
						ti,max-div = <64>;
						reg = <0x01cc>;
						ti,index-power-of-two;
					};

					per_abe_x1_dclk_div: per_abe_x1_dclk_div@1bc {
						#clock-cells = <0>;
						compatible = "ti,divider-clock";
						clocks = <&dpll_abe_m2_ck>;
						ti,max-div = <64>;
						reg = <0x01bc>;
						ti,index-power-of-two;
					};

					dsp_gclk_div: dsp_gclk_div@18c {
						#clock-cells = <0>;
						compatible = "ti,divider-clock";
						clocks = <&dpll_dsp_m2_ck>;
						ti,max-div = <64>;
						reg = <0x018c>;
						ti,index-power-of-two;
					};

					gpu_dclk: gpu_dclk@1a0 {
						#clock-cells = <0>;
						compatible = "ti,divider-clock";
						clocks = <&dpll_gpu_m2_ck>;
						ti,max-div = <64>;
						reg = <0x01a0>;
						ti,index-power-of-two;
					};

					emif_phy_dclk_div: emif_phy_dclk_div@190 {
						#clock-cells = <0>;
						compatible = "ti,divider-clock";
						clocks = <&dpll_ddr_m2_ck>;
						ti,max-div = <64>;
						reg = <0x0190>;
						ti,index-power-of-two;
					};

					gmac_250m_dclk_div: gmac_250m_dclk_div@19c {
						#clock-cells = <0>;
						compatible = "ti,divider-clock";
						clocks = <&dpll_gmac_m2_ck>;
						ti,max-div = <64>;
						reg = <0x019c>;
						ti,index-power-of-two;
					};

					gmac_main_clk: gmac_main_clk {
						#clock-cells = <0>;
						compatible = "fixed-factor-clock";
						clocks = <&gmac_250m_dclk_div>;
						clock-mult = <1>;
						clock-div = <2>;
					};

					l3init_480m_dclk_div: l3init_480m_dclk_div@1ac {
						#clock-cells = <0>;
						compatible = "ti,divider-clock";
						clocks = <&dpll_usb_m2_ck>;
						ti,max-div = <64>;
						reg = <0x01ac>;
						ti,index-power-of-two;
					};

					usb_otg_dclk_div: usb_otg_dclk_div@184 {
						#clock-cells = <0>;
						compatible = "ti,divider-clock";
						clocks = <&usb_otg_clkin_ck>;
						ti,max-div = <64>;
						reg = <0x0184>;
						ti,index-power-of-two;
					};

					sata_dclk_div: sata_dclk_div@1c0 {
						#clock-cells = <0>;
						compatible = "ti,divider-clock";
						clocks = <&sys_clkin1>;
						ti,max-div = <64>;
						reg = <0x01c0>;
						ti,index-power-of-two;
					};

					pcie2_dclk_div: pcie2_dclk_div@1b8 {
						#clock-cells = <0>;
						compatible = "ti,divider-clock";
						clocks = <&dpll_pcie_ref_m2_ck>;
						ti,max-div = <64>;
						reg = <0x01b8>;
						ti,index-power-of-two;
					};

					pcie_dclk_div: pcie_dclk_div@1b4 {
						#clock-cells = <0>;
						compatible = "ti,divider-clock";
						clocks = <&apll_pcie_m2_ck>;
						ti,max-div = <64>;
						reg = <0x01b4>;
						ti,index-power-of-two;
					};

					emu_dclk_div: emu_dclk_div@194 {
						#clock-cells = <0>;
						compatible = "ti,divider-clock";
						clocks = <&sys_clkin1>;
						ti,max-div = <64>;
						reg = <0x0194>;
						ti,index-power-of-two;
					};

					secure_32k_dclk_div: secure_32k_dclk_div@1c4 {
						#clock-cells = <0>;
						compatible = "ti,divider-clock";
						clocks = <&secure_32k_clk_src_ck>;
						ti,max-div = <64>;
						reg = <0x01c4>;
						ti,index-power-of-two;
					};

					clkoutmux0_clk_mux: clkoutmux0_clk_mux@158 {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&sys_clk1_dclk_div>, <&sys_clk2_dclk_div>, <&per_abe_x1_dclk_div>, <&mpu_dclk_div>, <&dsp_gclk_div>, <&iva_dclk>, <&gpu_dclk>, <&core_dpll_out_dclk_div>, <&emif_phy_dclk_div>, <&gmac_250m_dclk_div>, <&video2_dclk_div>, <&video1_dclk_div>, <&hdmi_dclk_div>, <&func_96m_aon_dclk_div>, <&l3init_480m_dclk_div>, <&usb_otg_dclk_div>, <&sata_dclk_div>, <&pcie2_dclk_div>, <&pcie_dclk_div>, <&emu_dclk_div>, <&secure_32k_dclk_div>, <&eve_dclk_div>;
						reg = <0x0158>;
					};

					clkoutmux1_clk_mux: clkoutmux1_clk_mux@15c {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&sys_clk1_dclk_div>, <&sys_clk2_dclk_div>, <&per_abe_x1_dclk_div>, <&mpu_dclk_div>, <&dsp_gclk_div>, <&iva_dclk>, <&gpu_dclk>, <&core_dpll_out_dclk_div>, <&emif_phy_dclk_div>, <&gmac_250m_dclk_div>, <&video2_dclk_div>, <&video1_dclk_div>, <&hdmi_dclk_div>, <&func_96m_aon_dclk_div>, <&l3init_480m_dclk_div>, <&usb_otg_dclk_div>, <&sata_dclk_div>, <&pcie2_dclk_div>, <&pcie_dclk_div>, <&emu_dclk_div>, <&secure_32k_dclk_div>, <&eve_dclk_div>;
						reg = <0x015c>;
					};

					clkoutmux2_clk_mux: clkoutmux2_clk_mux@160 {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&sys_clk1_dclk_div>, <&sys_clk2_dclk_div>, <&per_abe_x1_dclk_div>, <&mpu_dclk_div>, <&dsp_gclk_div>, <&iva_dclk>, <&gpu_dclk>, <&core_dpll_out_dclk_div>, <&emif_phy_dclk_div>, <&gmac_250m_dclk_div>, <&video2_dclk_div>, <&video1_dclk_div>, <&hdmi_dclk_div>, <&func_96m_aon_dclk_div>, <&l3init_480m_dclk_div>, <&usb_otg_dclk_div>, <&sata_dclk_div>, <&pcie2_dclk_div>, <&pcie_dclk_div>, <&emu_dclk_div>, <&secure_32k_dclk_div>, <&eve_dclk_div>;
						reg = <0x0160>;
					};

					custefuse_sys_gfclk_div: custefuse_sys_gfclk_div {
						#clock-cells = <0>;
						compatible = "fixed-factor-clock";
						clocks = <&sys_clkin1>;
						clock-mult = <1>;
						clock-div = <2>;
					};

					eve_clk: eve_clk@180 {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&dpll_eve_m2_ck>, <&dpll_dsp_m3x2_ck>;
						reg = <0x0180>;
					};

					hdmi_dpll_clk_mux: hdmi_dpll_clk_mux@164 {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&sys_clkin1>, <&sys_clkin2>;
						reg = <0x0164>;
					};

					mlb_clk: mlb_clk@134 {
						#clock-cells = <0>;
						compatible = "ti,divider-clock";
						clocks = <&mlb_clkin_ck>;
						ti,max-div = <64>;
						reg = <0x0134>;
						ti,index-power-of-two;
					};

					mlbp_clk: mlbp_clk@130 {
						#clock-cells = <0>;
						compatible = "ti,divider-clock";
						clocks = <&mlbp_clkin_ck>;
						ti,max-div = <64>;
						reg = <0x0130>;
						ti,index-power-of-two;
					};

					per_abe_x1_gfclk2_div: per_abe_x1_gfclk2_div@138 {
						#clock-cells = <0>;
						compatible = "ti,divider-clock";
						clocks = <&dpll_abe_m2_ck>;
						ti,max-div = <64>;
						reg = <0x0138>;
						ti,index-power-of-two;
					};

					timer_sys_clk_div: timer_sys_clk_div@144 {
						#clock-cells = <0>;
						compatible = "ti,divider-clock";
						clocks = <&sys_clkin1>;
						reg = <0x0144>;
						ti,max-div = <2>;
					};

					video1_dpll_clk_mux: video1_dpll_clk_mux@168 {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&sys_clkin1>, <&sys_clkin2>;
						reg = <0x0168>;
					};

					video2_dpll_clk_mux: video2_dpll_clk_mux@16c {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&sys_clkin1>, <&sys_clkin2>;
						reg = <0x016c>;
					};

					wkupaon_iclk_mux: wkupaon_iclk_mux@108 {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&sys_clkin1>, <&abe_lp_clk_div>;
						reg = <0x0108>;
					};

					gpio1_dbclk: gpio1_dbclk@1838 {
						#clock-cells = <0>;
						compatible = "ti,gate-clock";
						clocks = <&sys_32k_ck>;
						ti,bit-shift = <8>;
						reg = <0x1838>;
					};

					dcan1_sys_clk_mux: dcan1_sys_clk_mux@1888 {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&sys_clkin1>, <&sys_clkin2>;
						ti,bit-shift = <24>;
						reg = <0x1888>;
					};

					timer1_gfclk_mux: timer1_gfclk_mux@1840 {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&timer_sys_clk_div>, <&sys_32k_ck>, <&sys_clkin2>, <&ref_clkin0_ck>, <&ref_clkin1_ck>, <&ref_clkin2_ck>, <&ref_clkin3_ck>, <&abe_giclk_div>, <&video1_div_clk>, <&video2_div_clk>, <&hdmi_div_clk>;
						ti,bit-shift = <24>;
						reg = <0x1840>;
					};

					uart10_gfclk_mux: uart10_gfclk_mux@1880 {
						#clock-cells = <0>;
						compatible = "ti,mux-clock";
						clocks = <&func_48m_fclk>, <&dpll_per_m2x2_ck>;
						ti,bit-shift = <24>;
						reg = <0x1880>;
					};
				};

				prm_clockdomains: clockdomains {
				};
			};

			scm_wkup: scm_conf@c000 {
				compatible = "syscon";
				reg = <0xc000 0x1000>;
			};
		};

		axi@0 {
			compatible = "simple-bus";
			#size-cells = <1>;
			#address-cells = <1>;
			ranges = <0x51000000 0x51000000 0x3000
				  0x0	     0x20000000 0x10000000>;
			/**
			 * To enable PCI endpoint mode, disable the pcie1_rc
			 * node and enable pcie1_ep mode.
			 */
			pcie1_rc: pcie@51000000 {
				compatible = "ti,dra7-pcie";
				reg = <0x51000000 0x2000>, <0x51002000 0x14c>, <0x1000 0x2000>;
				reg-names = "rc_dbics", "ti_conf", "config";
				interrupts = <0 232 0x4>, <0 233 0x4>;
				#address-cells = <3>;
				#size-cells = <2>;
				device_type = "pci";
				ranges = <0x81000000 0 0          0x03000 0 0x00010000
					  0x82000000 0 0x20013000 0x13000 0 0xffed000>;
				bus-range = <0x00 0xff>;
				#interrupt-cells = <1>;
				num-lanes = <1>;
				linux,pci-domain = <0>;
				ti,hwmods = "pcie1";
				phys = <&pcie1_phy>;
				phy-names = "pcie-phy0";
				ti,syscon-conf = <&scm_conf>;
				ti,syscon-pcie = <&scm_conf_pcie>;
				interrupt-map-mask = <0 0 0 7>;
				interrupt-map = <0 0 0 1 &pcie1_intc 1>,
						<0 0 0 2 &pcie1_intc 2>,
						<0 0 0 3 &pcie1_intc 3>,
						<0 0 0 4 &pcie1_intc 4>;
				ti,syscon-unaligned-access = <&scm_conf1 0x14 1>;
				status = "disabled";
				pcie1_intc: interrupt-controller {
					interrupt-controller;
					#address-cells = <0>;
					#interrupt-cells = <1>;
				};
			};

			pcie1_ep: pcie_ep@51000000 {
				compatible = "ti,dra7-pcie-ep";
				reg = <0x51000000 0x28>, <0x51002000 0x14c>, <0x51001000 0x28>, <0x1000 0x10000000>;
				reg-names = "ep_dbics", "ti_conf", "ep_dbics2", "addr_space";
				interrupts = <0 232 0x4>;
				num-lanes = <1>;
				num-ib-windows = <4>;
				num-ob-windows = <16>;
				ti,hwmods = "pcie1";
				phys = <&pcie1_phy>;
				phy-names = "pcie-phy0";
				ti,syscon-unaligned-access = <&scm_conf1 0x14 1>;
				ti,syscon-conf = <&scm_conf>;
				ti,syscon-pcie = <&scm_conf_pcie>;
				status = "disabled";
			};
		};

		axi@1 {
			compatible = "simple-bus";
			#size-cells = <1>;
			#address-cells = <1>;
			ranges = <0x51800000 0x51800000 0x3000
				  0x0	     0x30000000 0x10000000>;
			status = "disabled";
			pcie2_rc: pcie@51800000 {
				compatible = "ti,dra7-pcie";
				reg = <0x51800000 0x2000>, <0x51802000 0x14c>, <0x1000 0x2000>;
				reg-names = "rc_dbics", "ti_conf", "config";
				interrupts = <0 355 0x4>, <0 356 0x4>;
				#address-cells = <3>;
				#size-cells = <2>;
				device_type = "pci";
				ranges = <0x81000000 0 0          0x03000 0 0x00010000
					  0x82000000 0 0x30013000 0x13000 0 0xffed000>;
				bus-range = <0x00 0xff>;
				#interrupt-cells = <1>;
				num-lanes = <1>;
				linux,pci-domain = <1>;
				ti,hwmods = "pcie2";
				phys = <&pcie2_phy>;
				phy-names = "pcie-phy0";
				interrupt-map-mask = <0 0 0 7>;
				interrupt-map = <0 0 0 1 &pcie2_intc 1>,
						<0 0 0 2 &pcie2_intc 2>,
						<0 0 0 3 &pcie2_intc 3>,
						<0 0 0 4 &pcie2_intc 4>;
				ti,syscon-unaligned-access = <&scm_conf1 0x14 2>;
				pcie2_intc: interrupt-controller {
					interrupt-controller;
					#address-cells = <0>;
					#interrupt-cells = <1>;
				};
			};
		};

		ocmcram1: ocmcram@40300000 {
			compatible = "mmio-sram";
			reg = <0x40300000 0x80000>;
			ranges = <0x0 0x40300000 0x80000>;
			#address-cells = <1>;
			#size-cells = <1>;
			/*
			 * This is a placeholder for an optional reserved
			 * region for use by secure software. The size
			 * of this region is not known until runtime so it
			 * is set as zero to either be updated to reserve
			 * space or left unchanged to leave all SRAM for use.
			 * On HS parts that that require the reserved region
			 * either the bootloader can update the size to
			 * the required amount or the node can be overridden
			 * from the board dts file for the secure platform.
			 */
			sram-hs@0 {
				compatible = "ti,secure-ram";
				reg = <0x0 0x0>;
			};
		};

		/*
		 * NOTE: ocmcram2 and ocmcram3 are not available on all
		 * DRA7xx and AM57xx variants. Confirm availability in
		 * the data manual for the exact part number in use
		 * before enabling these nodes in the board dts file.
		 */
		ocmcram2: ocmcram@40400000 {
			status = "disabled";
			compatible = "mmio-sram";
			reg = <0x40400000 0x100000>;
			ranges = <0x0 0x40400000 0x100000>;
			#address-cells = <1>;
			#size-cells = <1>;
		};

		ocmcram3: ocmcram@40500000 {
			status = "disabled";
			compatible = "mmio-sram";
			reg = <0x40500000 0x100000>;
			ranges = <0x0 0x40500000 0x100000>;
			#address-cells = <1>;
			#size-cells = <1>;
		};

		bandgap: bandgap@4a0021e0 {
			reg = <0x4a0021e0 0xc
				0x4a00232c 0xc
				0x4a002380 0x2c
				0x4a0023C0 0x3c
				0x4a002564 0x8
				0x4a002574 0x50>;
				compatible = "ti,dra752-bandgap";
				interrupts = <GIC_SPI 121 IRQ_TYPE_LEVEL_HIGH>;
				#thermal-sensor-cells = <1>;
		};

		dsp1_system: dsp_system@40d00000 {
			compatible = "syscon";
			reg = <0x40d00000 0x100>;
		};

		dra7_iodelay_core: padconf@4844a000 {
			compatible = "ti,dra7-iodelay";
			reg = <0x4844a000 0x0d1c>;
			#address-cells = <1>;
			#size-cells = <0>;
			#pinctrl-cells = <2>;
		};

		sdma: dma-controller@4a056000 {
			compatible = "ti,omap4430-sdma";
			reg = <0x4a056000 0x1000>;
			interrupts = <GIC_SPI 7 IRQ_TYPE_LEVEL_HIGH>,
				     <GIC_SPI 8 IRQ_TYPE_LEVEL_HIGH>,
				     <GIC_SPI 9 IRQ_TYPE_LEVEL_HIGH>,
				     <GIC_SPI 10 IRQ_TYPE_LEVEL_HIGH>;
			#dma-cells = <1>;
			dma-channels = <32>;
			dma-requests = <127>;
		};

		edma: edma@43300000 {
			compatible = "ti,edma3-tpcc";
			ti,hwmods = "tpcc";
			reg = <0x43300000 0x100000>;
			reg-names = "edma3_cc";
			interrupts = <GIC_SPI 361 IRQ_TYPE_LEVEL_HIGH>,
				     <GIC_SPI 360 IRQ_TYPE_LEVEL_HIGH>,
				     <GIC_SPI 359 IRQ_TYPE_LEVEL_HIGH>;
			interrupt-names = "edma3_ccint", "edma3_mperr",
					  "edma3_ccerrint";
			dma-requests = <64>;
			#dma-cells = <2>;

			ti,tptcs = <&edma_tptc0 7>, <&edma_tptc1 0>;

			/*
			 * memcpy is disabled, can be enabled with:
			 * ti,edma-memcpy-channels = <20 21>;
			 * for example. Note that these channels need to be
			 * masked in the xbar as well.
			 */
		};

		edma_tptc0: tptc@43400000 {
			compatible = "ti,edma3-tptc";
			ti,hwmods = "tptc0";
			reg =	<0x43400000 0x100000>;
			interrupts = <GIC_SPI 370 IRQ_TYPE_LEVEL_HIGH>;
			interrupt-names = "edma3_tcerrint";
		};

		edma_tptc1: tptc@43500000 {
			compatible = "ti,edma3-tptc";
			ti,hwmods = "tptc1";
			reg =	<0x43500000 0x100000>;
			interrupts = <GIC_SPI 371 IRQ_TYPE_LEVEL_HIGH>;
			interrupt-names = "edma3_tcerrint";
		};

		gpio1: gpio@4ae10000 {
			compatible = "ti,omap4-gpio";
			reg = <0x4ae10000 0x200>;
			interrupts = <GIC_SPI 24 IRQ_TYPE_LEVEL_HIGH>;
			ti,hwmods = "gpio1";
			gpio-controller;
			#gpio-cells = <2>;
			interrupt-controller;
			#interrupt-cells = <2>;
		};

		gpio2: gpio@48055000 {
			compatible = "ti,omap4-gpio";
			reg = <0x48055000 0x200>;
			interrupts = <GIC_SPI 25 IRQ_TYPE_LEVEL_HIGH>;
			ti,hwmods = "gpio2";
			gpio-controller;
			#gpio-cells = <2>;
			interrupt-controller;
			#interrupt-cells = <2>;
		};

		gpio3: gpio@48057000 {
			compatible = "ti,omap4-gpio";
			reg = <0x48057000 0x200>;
			interrupts = <GIC_SPI 26 IRQ_TYPE_LEVEL_HIGH>;
			ti,hwmods = "gpio3";
			gpio-controller;
			#gpio-cells = <2>;
			interrupt-controller;
			#interrupt-cells = <2>;
		};

		gpio4: gpio@48059000 {
			compatible = "ti,omap4-gpio";
			reg = <0x48059000 0x200>;
			interrupts = <GIC_SPI 27 IRQ_TYPE_LEVEL_HIGH>;
			ti,hwmods = "gpio4";
			gpio-controller;
			#gpio-cells = <2>;
			interrupt-controller;
			#interrupt-cells = <2>;
		};

		gpio5: gpio@4805b000 {
			compatible = "ti,omap4-gpio";
			reg = <0x4805b000 0x200>;
			interrupts = <GIC_SPI 28 IRQ_TYPE_LEVEL_HIGH>;
			ti,hwmods = "gpio5";
			gpio-controller;
			#gpio-cells = <2>;
			interrupt-controller;
			#interrupt-cells = <2>;
		};

		gpio6: gpio@4805d000 {
			compatible = "ti,omap4-gpio";
			reg = <0x4805d000 0x200>;
			interrupts = <GIC_SPI 29 IRQ_TYPE_LEVEL_HIGH>;
			ti,hwmods = "gpio6";
			gpio-controller;
			#gpio-cells = <2>;
			interrupt-controller;
			#interrupt-cells = <2>;
		};

		gpio7: gpio@48051000 {
			compatible = "ti,omap4-gpio";
			reg = <0x48051000 0x200>;
			interrupts = <GIC_SPI 30 IRQ_TYPE_LEVEL_HIGH>;
			ti,hwmods = "gpio7";
			gpio-controller;
			#gpio-cells = <2>;
			interrupt-controller;
			#interrupt-cells = <2>;
		};

		gpio8: gpio@48053000 {
			compatible = "ti,omap4-gpio";
			reg = <0x48053000 0x200>;
			interrupts = <GIC_SPI 116 IRQ_TYPE_LEVEL_HIGH>;
			ti,hwmods = "gpio8";
			gpio-controller;
			#gpio-cells = <2>;
			interrupt-controller;
			#interrupt-cells = <2>;
		};

		uart1: serial@4806a000 {
			compatible = "ti,dra742-uart", "ti,omap4-uart";
			reg = <0x4806a000 0x100>;
			interrupts-extended = <&crossbar_mpu GIC_SPI 67 IRQ_TYPE_LEVEL_HIGH>;
			ti,hwmods = "uart1";
			clock-frequency = <48000000>;
			status = "disabled";
			dmas = <&sdma_xbar 49>, <&sdma_xbar 50>;
			dma-names = "tx", "rx";
		};

		uart2: serial@4806c000 {
			compatible = "ti,dra742-uart", "ti,omap4-uart";
			reg = <0x4806c000 0x100>;
			interrupts = <GIC_SPI 68 IRQ_TYPE_LEVEL_HIGH>;
			ti,hwmods = "uart2";
			clock-frequency = <48000000>;
			status = "disabled";
			dmas = <&sdma_xbar 51>, <&sdma_xbar 52>;
			dma-names = "tx", "rx";
		};

		uart3: serial@48020000 {
			compatible = "ti,dra742-uart", "ti,omap4-uart";
			reg = <0x48020000 0x100>;
			interrupts = <GIC_SPI 69 IRQ_TYPE_LEVEL_HIGH>;
			ti,hwmods = "uart3";
			clock-frequency = <48000000>;
			status = "disabled";
			dmas = <&sdma_xbar 53>, <&sdma_xbar 54>;
			dma-names = "tx", "rx";
		};

		uart4: serial@4806e000 {
			compatible = "ti,dra742-uart", "ti,omap4-uart";
			reg = <0x4806e000 0x100>;
			interrupts = <GIC_SPI 65 IRQ_TYPE_LEVEL_HIGH>;
			ti,hwmods = "uart4";
			clock-frequency = <48000000>;
                        status = "disabled";
			dmas = <&sdma_xbar 55>, <&sdma_xbar 56>;
			dma-names = "tx", "rx";
		};

		uart5: serial@48066000 {
			compatible = "ti,dra742-uart", "ti,omap4-uart";
			reg = <0x48066000 0x100>;
			interrupts = <GIC_SPI 100 IRQ_TYPE_LEVEL_HIGH>;
			ti,hwmods = "uart5";
			clock-frequency = <48000000>;
			status = "disabled";
			dmas = <&sdma_xbar 63>, <&sdma_xbar 64>;
			dma-names = "tx", "rx";
		};

		uart6: serial@48068000 {
			compatible = "ti,dra742-uart", "ti,omap4-uart";
			reg = <0x48068000 0x100>;
			interrupts = <GIC_SPI 101 IRQ_TYPE_LEVEL_HIGH>;
			ti,hwmods = "uart6";
			clock-frequency = <48000000>;
			status = "disabled";
			dmas = <&sdma_xbar 79>, <&sdma_xbar 80>;
			dma-names = "tx", "rx";
		};

		uart7: serial@48420000 {
			compatible = "ti,dra742-uart", "ti,omap4-uart";
			reg = <0x48420000 0x100>;
			interrupts = <GIC_SPI 218 IRQ_TYPE_LEVEL_HIGH>;
			ti,hwmods = "uart7";
			clock-frequency = <48000000>;
			status = "disabled";
		};

		uart8: serial@48422000 {
			compatible = "ti,dra742-uart", "ti,omap4-uart";
			reg = <0x48422000 0x100>;
			interrupts = <GIC_SPI 219 IRQ_TYPE_LEVEL_HIGH>;
			ti,hwmods = "uart8";
			clock-frequency = <48000000>;
			status = "disabled";
		};

		uart9: serial@48424000 {
			compatible = "ti,dra742-uart", "ti,omap4-uart";
			reg = <0x48424000 0x100>;
			interrupts = <GIC_SPI 220 IRQ_TYPE_LEVEL_HIGH>;
			ti,hwmods = "uart9";
			clock-frequency = <48000000>;
			status = "disabled";
		};

		uart10: serial@4ae2b000 {
			compatible = "ti,dra742-uart", "ti,omap4-uart";
			reg = <0x4ae2b000 0x100>;
			interrupts = <GIC_SPI 221 IRQ_TYPE_LEVEL_HIGH>;
			ti,hwmods = "uart10";
			clock-frequency = <48000000>;
			status = "disabled";
		};

		mailbox1: mailbox@4a0f4000 {
			compatible = "ti,omap4-mailbox";
			reg = <0x4a0f4000 0x200>;
			interrupts = <GIC_SPI 21 IRQ_TYPE_LEVEL_HIGH>,
				     <GIC_SPI 135 IRQ_TYPE_LEVEL_HIGH>,
				     <GIC_SPI 134 IRQ_TYPE_LEVEL_HIGH>;
			ti,hwmods = "mailbox1";
			#mbox-cells = <1>;
			ti,mbox-num-users = <3>;
			ti,mbox-num-fifos = <8>;
			status = "disabled";
		};

		mailbox2: mailbox@4883a000 {
			compatible = "ti,omap4-mailbox";
			reg = <0x4883a000 0x200>;
			interrupts = <GIC_SPI 237 IRQ_TYPE_LEVEL_HIGH>,
				     <GIC_SPI 238 IRQ_TYPE_LEVEL_HIGH>,
				     <GIC_SPI 239 IRQ_TYPE_LEVEL_HIGH>,
				     <GIC_SPI 240 IRQ_TYPE_LEVEL_HIGH>;
			ti,hwmods = "mailbox2";
			#mbox-cells = <1>;
			ti,mbox-num-users = <4>;
			ti,mbox-num-fifos = <12>;
			status = "disabled";
		};

		mailbox3: mailbox@4883c000 {
			compatible = "ti,omap4-mailbox";
			reg = <0x4883c000 0x200>;
			interrupts = <GIC_SPI 241 IRQ_TYPE_LEVEL_HIGH>,
				     <GIC_SPI 242 IRQ_TYPE_LEVEL_HIGH>,
				     <GIC_SPI 243 IRQ_TYPE_LEVEL_HIGH>,
				     <GIC_SPI 244 IRQ_TYPE_LEVEL_HIGH>;
			ti,hwmods = "mailbox3";
			#mbox-cells = <1>;
			ti,mbox-num-users = <4>;
			ti,mbox-num-fifos = <12>;
			status = "disabled";
		};

		mailbox4: mailbox@4883e000 {
			compatible = "ti,omap4-mailbox";
			reg = <0x4883e000 0x200>;
			interrupts = <GIC_SPI 245 IRQ_TYPE_LEVEL_HIGH>,
				     <GIC_SPI 246 IRQ_TYPE_LEVEL_HIGH>,
				     <GIC_SPI 247 IRQ_TYPE_LEVEL_HIGH>,
				     <GIC_SPI 248 IRQ_TYPE_LEVEL_HIGH>;
			ti,hwmods = "mailbox4";
			#mbox-cells = <1>;
			ti,mbox-num-users = <4>;
			ti,mbox-num-fifos = <12>;
			status = "disabled";
		};

		mailbox5: mailbox@48840000 {
			compatible = "ti,omap4-mailbox";
			reg = <0x48840000 0x200>;
			interrupts = <GIC_SPI 249 IRQ_TYPE_LEVEL_HIGH>,
				     <GIC_SPI 250 IRQ_TYPE_LEVEL_HIGH>,
				     <GIC_SPI 251 IRQ_TYPE_LEVEL_HIGH>,
				     <GIC_SPI 252 IRQ_TYPE_LEVEL_HIGH>;
			ti,hwmods = "mailbox5";
			#mbox-cells = <1>;
			ti,mbox-num-users = <4>;
			ti,mbox-num-fifos = <12>;
			status = "disabled";
		};

		mailbox6: mailbox@48842000 {
			compatible = "ti,omap4-mailbox";
			reg = <0x48842000 0x200>;
			interrupts = <GIC_SPI 253 IRQ_TYPE_LEVEL_HIGH>,
				     <GIC_SPI 254 IRQ_TYPE_LEVEL_HIGH>,
				     <GIC_SPI 255 IRQ_TYPE_LEVEL_HIGH>,
				     <GIC_SPI 256 IRQ_TYPE_LEVEL_HIGH>;
			ti,hwmods = "mailbox6";
			#mbox-cells = <1>;
			ti,mbox-num-users = <4>;
			ti,mbox-num-fifos = <12>;
			status = "disabled";
		};

		mailbox7: mailbox@48844000 {
			compatible = "ti,omap4-mailbox";
			reg = <0x48844000 0x200>;
			interrupts = <GIC_SPI 257 IRQ_TYPE_LEVEL_HIGH>,
				     <GIC_SPI 258 IRQ_TYPE_LEVEL_HIGH>,
				     <GIC_SPI 259 IRQ_TYPE_LEVEL_HIGH>,
				     <GIC_SPI 260 IRQ_TYPE_LEVEL_HIGH>;
			ti,hwmods = "mailbox7";
			#mbox-cells = <1>;
			ti,mbox-num-users = <4>;
			ti,mbox-num-fifos = <12>;
			status = "disabled";
		};

		mailbox8: mailbox@48846000 {
			compatible = "ti,omap4-mailbox";
			reg = <0x48846000 0x200>;
			interrupts = <GIC_SPI 261 IRQ_TYPE_LEVEL_HIGH>,
				     <GIC_SPI 262 IRQ_TYPE_LEVEL_HIGH>,
				     <GIC_SPI 263 IRQ_TYPE_LEVEL_HIGH>,
				     <GIC_SPI 264 IRQ_TYPE_LEVEL_HIGH>;
			ti,hwmods = "mailbox8";
			#mbox-cells = <1>;
			ti,mbox-num-users = <4>;
			ti,mbox-num-fifos = <12>;
			status = "disabled";
		};

		mailbox9: mailbox@4885e000 {
			compatible = "ti,omap4-mailbox";
			reg = <0x4885e000 0x200>;
			interrupts = <GIC_SPI 265 IRQ_TYPE_LEVEL_HIGH>,
				     <GIC_SPI 266 IRQ_TYPE_LEVEL_HIGH>,
				     <GIC_SPI 267 IRQ_TYPE_LEVEL_HIGH>,
				     <GIC_SPI 268 IRQ_TYPE_LEVEL_HIGH>;
			ti,hwmods = "mailbox9";
			#mbox-cells = <1>;
			ti,mbox-num-users = <4>;
			ti,mbox-num-fifos = <12>;
			status = "disabled";
		};

		mailbox10: mailbox@48860000 {
			compatible = "ti,omap4-mailbox";
			reg = <0x48860000 0x200>;
			interrupts = <GIC_SPI 269 IRQ_TYPE_LEVEL_HIGH>,
				     <GIC_SPI 270 IRQ_TYPE_LEVEL_HIGH>,
				     <GIC_SPI 271 IRQ_TYPE_LEVEL_HIGH>,
				     <GIC_SPI 272 IRQ_TYPE_LEVEL_HIGH>;
			ti,hwmods = "mailbox10";
			#mbox-cells = <1>;
			ti,mbox-num-users = <4>;
			ti,mbox-num-fifos = <12>;
			status = "disabled";
		};

		mailbox11: mailbox@48862000 {
			compatible = "ti,omap4-mailbox";
			reg = <0x48862000 0x200>;
			interrupts = <GIC_SPI 273 IRQ_TYPE_LEVEL_HIGH>,
				     <GIC_SPI 274 IRQ_TYPE_LEVEL_HIGH>,
				     <GIC_SPI 275 IRQ_TYPE_LEVEL_HIGH>,
				     <GIC_SPI 276 IRQ_TYPE_LEVEL_HIGH>;
			ti,hwmods = "mailbox11";
			#mbox-cells = <1>;
			ti,mbox-num-users = <4>;
			ti,mbox-num-fifos = <12>;
			status = "disabled";
		};

		mailbox12: mailbox@48864000 {
			compatible = "ti,omap4-mailbox";
			reg = <0x48864000 0x200>;
			interrupts = <GIC_SPI 277 IRQ_TYPE_LEVEL_HIGH>,
				     <GIC_SPI 278 IRQ_TYPE_LEVEL_HIGH>,
				     <GIC_SPI 279 IRQ_TYPE_LEVEL_HIGH>,
				     <GIC_SPI 280 IRQ_TYPE_LEVEL_HIGH>;
			ti,hwmods = "mailbox12";
			#mbox-cells = <1>;
			ti,mbox-num-users = <4>;
			ti,mbox-num-fifos = <12>;
			status = "disabled";
		};

		mailbox13: mailbox@48802000 {
			compatible = "ti,omap4-mailbox";
			reg = <0x48802000 0x200>;
			interrupts = <GIC_SPI 379 IRQ_TYPE_LEVEL_HIGH>,
				     <GIC_SPI 380 IRQ_TYPE_LEVEL_HIGH>,
				     <GIC_SPI 381 IRQ_TYPE_LEVEL_HIGH>,
				     <GIC_SPI 382 IRQ_TYPE_LEVEL_HIGH>;
			ti,hwmods = "mailbox13";
			#mbox-cells = <1>;
			ti,mbox-num-users = <4>;
			ti,mbox-num-fifos = <12>;
			status = "disabled";
		};

		timer1: timer@4ae18000 {
			compatible = "ti,omap5430-timer";
			reg = <0x4ae18000 0x80>;
			interrupts = <GIC_SPI 32 IRQ_TYPE_LEVEL_HIGH>;
			ti,hwmods = "timer1";
			ti,timer-alwon;
		};

		timer2: timer@48032000 {
			compatible = "ti,omap5430-timer";
			reg = <0x48032000 0x80>;
			interrupts = <GIC_SPI 33 IRQ_TYPE_LEVEL_HIGH>;
			ti,hwmods = "timer2";
		};

		timer3: timer@48034000 {
			compatible = "ti,omap5430-timer";
			reg = <0x48034000 0x80>;
			interrupts = <GIC_SPI 34 IRQ_TYPE_LEVEL_HIGH>;
			ti,hwmods = "timer3";
		};

		timer4: timer@48036000 {
			compatible = "ti,omap5430-timer";
			reg = <0x48036000 0x80>;
			interrupts = <GIC_SPI 35 IRQ_TYPE_LEVEL_HIGH>;
			ti,hwmods = "timer4";
		};

		timer5: timer@48820000 {
			compatible = "ti,omap5430-timer";
			reg = <0x48820000 0x80>;
			interrupts = <GIC_SPI 36 IRQ_TYPE_LEVEL_HIGH>;
			ti,hwmods = "timer5";
		};

		timer6: timer@48822000 {
			compatible = "ti,omap5430-timer";
			reg = <0x48822000 0x80>;
			interrupts = <GIC_SPI 37 IRQ_TYPE_LEVEL_HIGH>;
			ti,hwmods = "timer6";
		};

		timer7: timer@48824000 {
			compatible = "ti,omap5430-timer";
			reg = <0x48824000 0x80>;
			interrupts = <GIC_SPI 38 IRQ_TYPE_LEVEL_HIGH>;
			ti,hwmods = "timer7";
		};

		timer8: timer@48826000 {
			compatible = "ti,omap5430-timer";
			reg = <0x48826000 0x80>;
			interrupts = <GIC_SPI 39 IRQ_TYPE_LEVEL_HIGH>;
			ti,hwmods = "timer8";
		};

		timer9: timer@4803e000 {
			compatible = "ti,omap5430-timer";
			reg = <0x4803e000 0x80>;
			interrupts = <GIC_SPI 40 IRQ_TYPE_LEVEL_HIGH>;
			ti,hwmods = "timer9";
		};

		timer10: timer@48086000 {
			compatible = "ti,omap5430-timer";
			reg = <0x48086000 0x80>;
			interrupts = <GIC_SPI 41 IRQ_TYPE_LEVEL_HIGH>;
			ti,hwmods = "timer10";
		};

		timer11: timer@48088000 {
			compatible = "ti,omap5430-timer";
			reg = <0x48088000 0x80>;
			interrupts = <GIC_SPI 42 IRQ_TYPE_LEVEL_HIGH>;
			ti,hwmods = "timer11";
		};

		timer12: timer@4ae20000 {
			compatible = "ti,omap5430-timer";
			reg = <0x4ae20000 0x80>;
			interrupts = <GIC_SPI 90 IRQ_TYPE_LEVEL_HIGH>;
			ti,hwmods = "timer12";
			ti,timer-alwon;
			ti,timer-secure;
		};

		timer13: timer@48828000 {
			compatible = "ti,omap5430-timer";
			reg = <0x48828000 0x80>;
			interrupts = <GIC_SPI 339 IRQ_TYPE_LEVEL_HIGH>;
			ti,hwmods = "timer13";
		};

		timer14: timer@4882a000 {
			compatible = "ti,omap5430-timer";
			reg = <0x4882a000 0x80>;
			interrupts = <GIC_SPI 340 IRQ_TYPE_LEVEL_HIGH>;
			ti,hwmods = "timer14";
		};

		timer15: timer@4882c000 {
			compatible = "ti,omap5430-timer";
			reg = <0x4882c000 0x80>;
			interrupts = <GIC_SPI 341 IRQ_TYPE_LEVEL_HIGH>;
			ti,hwmods = "timer15";
		};

		timer16: timer@4882e000 {
			compatible = "ti,omap5430-timer";
			reg = <0x4882e000 0x80>;
			interrupts = <GIC_SPI 342 IRQ_TYPE_LEVEL_HIGH>;
			ti,hwmods = "timer16";
		};

		wdt2: wdt@4ae14000 {
			compatible = "ti,omap3-wdt";
			reg = <0x4ae14000 0x80>;
			interrupts = <GIC_SPI 75 IRQ_TYPE_LEVEL_HIGH>;
			ti,hwmods = "wd_timer2";
		};

		hwspinlock: spinlock@4a0f6000 {
			compatible = "ti,omap4-hwspinlock";
			reg = <0x4a0f6000 0x1000>;
			ti,hwmods = "spinlock";
			#hwlock-cells = <1>;
		};

		dmm@4e000000 {
			compatible = "ti,dra7-dmm", "ti,omap5-dmm";
			reg = <0x4e000000 0x800>;
			interrupts = <GIC_SPI 108 IRQ_TYPE_LEVEL_HIGH>;
			ti,hwmods = "dmm";
		};

		ipu1: ipu@58820000 {
			compatible = "ti,dra7-ipu";
			reg = <0x58820000 0x10000>;
			reg-names = "l2ram";
			ti,hwmods = "ipu1";
			iommus = <&mmu_ipu1>;
			ti,rproc-standby-info = <0x4a005520>;
			status = "disabled";
		};

		ipu2: ipu@55020000 {
			compatible = "ti,dra7-ipu";
			reg = <0x55020000 0x10000>;
			reg-names = "l2ram";
			ti,hwmods = "ipu2";
			iommus = <&mmu_ipu2>;
			ti,rproc-standby-info = <0x4a008920>;
			status = "disabled";
		};

		dsp1: dsp@40800000 {
			compatible = "ti,dra7-dsp";
			reg = <0x40800000 0x48000>,
			      <0x40e00000 0x8000>,
			      <0x40f00000 0x8000>;
			reg-names = "l2ram", "l1pram", "l1dram";
			ti,hwmods = "dsp1";
			syscon-bootreg = <&scm_conf 0x55c>;
			iommus = <&mmu0_dsp1>, <&mmu1_dsp1>;
			ti,rproc-standby-info = <0x4a005420>;
			mboxes = <&mailbox5 &mbox_dsp1_ipc3x>;
			timers = <&timer5>;
			watchdog-timers = <&timer10>;
			status = "okay";
			memory-region = <&dsp1_memory_region>;
		};

		i2c1: i2c@48070000 {
			compatible = "ti,omap4-i2c";
			reg = <0x48070000 0x100>;
			interrupts = <GIC_SPI 51 IRQ_TYPE_LEVEL_HIGH>;
			#address-cells = <1>;
			#size-cells = <0>;
			ti,hwmods = "i2c1";
			status = "disabled";
		};

		i2c2: i2c@48072000 {
			compatible = "ti,omap4-i2c";
			reg = <0x48072000 0x100>;
			interrupts = <GIC_SPI 52 IRQ_TYPE_LEVEL_HIGH>;
			#address-cells = <1>;
			#size-cells = <0>;
			ti,hwmods = "i2c2";
			status = "disabled";
		};

		i2c3: i2c@48060000 {
			compatible = "ti,omap4-i2c";
			reg = <0x48060000 0x100>;
			interrupts = <GIC_SPI 56 IRQ_TYPE_LEVEL_HIGH>;
			#address-cells = <1>;
			#size-cells = <0>;
			ti,hwmods = "i2c3";
			status = "disabled";
		};

		i2c4: i2c@4807a000 {
			compatible = "ti,omap4-i2c";
			reg = <0x4807a000 0x100>;
			interrupts = <GIC_SPI 57 IRQ_TYPE_LEVEL_HIGH>;
			#address-cells = <1>;
			#size-cells = <0>;
			ti,hwmods = "i2c4";
			status = "disabled";
		};

		i2c5: i2c@4807c000 {
			compatible = "ti,omap4-i2c";
			reg = <0x4807c000 0x100>;
			interrupts = <GIC_SPI 55 IRQ_TYPE_LEVEL_HIGH>;
			#address-cells = <1>;
			#size-cells = <0>;
			ti,hwmods = "i2c5";
			status = "disabled";
		};

		mmc1: mmc@4809c000 {
#ifdef KERNEL_4_9
			compatible = "ti,dra7-hsmmc", "ti,omap4-hsmmc"; /* 4.9 */
#else
			compatible = "ti,dra7-sdhci"; /* 4.14 */
#endif
			reg = <0x4809c000 0x400>;
			interrupts = <GIC_SPI 78 IRQ_TYPE_LEVEL_HIGH>;
			ti,hwmods = "mmc1";
			pbias-supply = <&pbias_mmc_reg>;
			max-frequency = <192000000>;
			mmc-ddr-1_8v;
		};

		mmc2: mmc@480b4000 {
#ifdef KERNEL_4_9
			compatible = "ti,dra7-hsmmc", "ti,omap4-hsmmc"; /* 4.9 */
#else
			compatible = "ti,dra7-sdhci"; /* 4.14 */
#endif
			reg = <0x480b4000 0x400>;
			interrupts = <GIC_SPI 81 IRQ_TYPE_LEVEL_HIGH>;
			ti,hwmods = "mmc2";
			max-frequency = <192000000>;
			/* SDR104/DDR50/SDR50 bits in CAPA2 is not supported */
			sdhci-caps-mask = <0x7 0x0>;
			mmc-hs200-1_8v;
			mmc-ddr-1_8v;
		};

		mmc3: mmc@480ad000 {
#ifdef KERNEL_4_9
			compatible = "ti,dra7-hsmmc", "ti,omap4-hsmmc"; /* 4.9 */
#else
			compatible = "ti,dra7-sdhci"; /* 4.14 */
#endif
			reg = <0x480ad000 0x400>;
			interrupts = <GIC_SPI 89 IRQ_TYPE_LEVEL_HIGH>;
			ti,hwmods = "mmc3";
			status = "disabled";
			/* Errata i887 limits max-frequency of MMC3 to 64 MHz */
			max-frequency = <64000000>;
			/* SDMA is not supported */
			sdhci-caps-mask = <0x0 0x400000>;
		};

		mmc4: mmc@480d1000 {
#ifdef KERNEL_4_9
			compatible = "ti,dra7-hsmmc", "ti,omap4-hsmmc"; /* 4.9 */
#else
			compatible = "ti,dra7-sdhci"; /* 4.14 */
#endif
			reg = <0x480d1000 0x400>;
			interrupts = <GIC_SPI 91 IRQ_TYPE_LEVEL_HIGH>;
			ti,hwmods = "mmc4";
			max-frequency = <192000000>;
#ifdef KERNEL_4_9
			dmas = <&sdma_xbar 57>, <&sdma_xbar 58>;
			dma-names = "tx", "rx";
#else
			/* SDMA is not supported */
			sdhci-caps-mask = <0x0 0x400000>;
#endif
		};

		mmu0_dsp1: mmu@40d01000 {
			compatible = "ti,dra7-dsp-iommu";
			reg = <0x40d01000 0x100>;
			interrupts = <GIC_SPI 23 IRQ_TYPE_LEVEL_HIGH>;
			ti,hwmods = "mmu0_dsp1";
			#iommu-cells = <0>;
			ti,syscon-mmuconfig = <&dsp1_system 0x0>;
		};

		mmu1_dsp1: mmu@40d02000 {
			compatible = "ti,dra7-dsp-iommu";
			reg = <0x40d02000 0x100>;
			interrupts = <GIC_SPI 145 IRQ_TYPE_LEVEL_HIGH>;
			ti,hwmods = "mmu1_dsp1";
			#iommu-cells = <0>;
			ti,syscon-mmuconfig = <&dsp1_system 0x1>;
		};

		mmu_ipu1: mmu@58882000 {
			compatible = "ti,dra7-iommu";
			reg = <0x58882000 0x100>;
			interrupts = <GIC_SPI 395 IRQ_TYPE_LEVEL_HIGH>;
			ti,hwmods = "mmu_ipu1";
			#iommu-cells = <0>;
			ti,iommu-bus-err-back;
		};

		mmu_ipu2: mmu@55082000 {
			compatible = "ti,dra7-iommu";
			reg = <0x55082000 0x100>;
			interrupts = <GIC_SPI 396 IRQ_TYPE_LEVEL_HIGH>;
			ti,hwmods = "mmu_ipu2";
			#iommu-cells = <0>;
			ti,iommu-bus-err-back;
		};

		pruss_soc_bus1: pruss_soc_bus@4b226004 {
			compatible = "ti,am5728-pruss-soc-bus";
			reg = <0x4b226004 0x4>;
			ti,hwmods = "pruss1";
			#address-cells = <1>;
			#size-cells = <1>;
			ranges = <0x0 0x4b200000 0x80000>;
			status = "disabled";

			pruss1: pruss@0 {
				compatible = "ti,am5728-pruss";
				reg = <0x0 0x80000>;
				interrupts = <GIC_SPI 186 IRQ_TYPE_LEVEL_HIGH>,
					     <GIC_SPI 187 IRQ_TYPE_LEVEL_HIGH>,
					     <GIC_SPI 188 IRQ_TYPE_LEVEL_HIGH>,
					     <GIC_SPI 189 IRQ_TYPE_LEVEL_HIGH>,
					     <GIC_SPI 190 IRQ_TYPE_LEVEL_HIGH>,
					     <GIC_SPI 191 IRQ_TYPE_LEVEL_HIGH>,
					     <GIC_SPI 192 IRQ_TYPE_LEVEL_HIGH>,
					     <GIC_SPI 193 IRQ_TYPE_LEVEL_HIGH>;
				interrupt-names = "host2", "host3", "host4",
						  "host5", "host6", "host7",
						  "host8", "host9";
				#address-cells = <1>;
				#size-cells = <1>;
				ranges;
				status = "disabled";

				pruss1_mem: memories@0 {
					reg = <0x0 0x2000>,
					      <0x2000 0x2000>,
					      <0x10000 0x8000>;
					reg-names = "dram0", "dram1",
						    "shrdram2";
				};

				pruss1_cfg: cfg@26000 {
					compatible = "syscon";
					reg = <0x26000 0x2000>;
				};

				pruss1_iep: iep@2e000 {
					compatible = "syscon";
					reg = <0x2e000 0x31c>;
				};

				pruss1_mii_rt: mii_rt@32000 {
					compatible = "syscon";
					reg = <0x32000 0x58>;
				};

				pruss1_intc: intc@20000 {
					compatible = "ti,am5728-pruss-intc";
					reg = <0x20000 0x2000>;
					reg-names = "intc";
					interrupt-controller;
					#interrupt-cells = <1>;
				};

				pru1_0: pru@34000 {
					compatible = "ti,am5728-pru";
					reg = <0x34000 0x3000>,
					      <0x22000 0x400>,
					      <0x22400 0x100>;
					reg-names = "iram", "control", "debug";
					firmware-name = "am57xx-pru1_0-fw";
					interrupt-parent = <&pruss1_intc>;
					interrupts = <16>, <17>;
					interrupt-names = "vring", "kick";
				};

				pru1_1: pru@38000 {
					compatible = "ti,am5728-pru";
					reg = <0x38000 0x3000>,
					      <0x24000 0x400>,
					      <0x24400 0x100>;
					reg-names = "iram", "control", "debug";
					firmware-name = "am57xx-pru1_1-fw";
					interrupt-parent = <&pruss1_intc>;
					interrupts = <18>, <19>;
					interrupt-names = "vring", "kick";
				};

				pruss1_mdio: mdio@32400 {
					compatible = "ti,davinci_mdio";
					#address-cells = <1>;
					#size-cells = <0>;
					clocks = <&dpll_gmac_h13x2_ck>;
					clock-names = "fck";
					bus_freq = <1000000>;
					reg = <0x32400 0x90>;
					status = "disabled";
				};
			};
		};

		pruss_soc_bus2: pruss_soc_bus@4b2a6004 {
			compatible = "ti,am5728-pruss-soc-bus";
			reg = <0x4b2a6004 0x4>;
			ti,hwmods = "pruss2";
			#address-cells = <1>;
			#size-cells = <1>;
			ranges = <0x0 0x4b280000 0x80000>;
			status = "disabled";

			pruss2: pruss@0 {
				compatible = "ti,am5728-pruss";
				reg = <0x0 0x80000>;
				interrupts = <GIC_SPI 196 IRQ_TYPE_LEVEL_HIGH>,
					     <GIC_SPI 197 IRQ_TYPE_LEVEL_HIGH>,
					     <GIC_SPI 198 IRQ_TYPE_LEVEL_HIGH>,
					     <GIC_SPI 199 IRQ_TYPE_LEVEL_HIGH>,
					     <GIC_SPI 200 IRQ_TYPE_LEVEL_HIGH>,
					     <GIC_SPI 201 IRQ_TYPE_LEVEL_HIGH>,
					     <GIC_SPI 202 IRQ_TYPE_LEVEL_HIGH>,
					     <GIC_SPI 203 IRQ_TYPE_LEVEL_HIGH>;
				interrupt-names = "host2", "host3", "host4",
						  "host5", "host6", "host7",
						  "host8", "host9";
				#address-cells = <1>;
				#size-cells = <1>;
				ranges;
				status = "disabled";

				pruss2_mem: memories@0 {
					reg = <0x0 0x2000>,
					      <0x2000 0x2000>,
					      <0x10000 0x8000>;
					reg-names = "dram0", "dram1",
						    "shrdram2";
				};

				pruss2_cfg: cfg@26000 {
					compatible = "syscon";
					reg = <0x26000 0x2000>;
				};

				pruss2_iep: iep@2e000 {
					compatible = "syscon";
					reg = <0x2e000 0x31c>;
				};

				pruss2_mii_rt: mii_rt@32000 {
					compatible = "syscon";
					reg = <0x32000 0x58>;
				};

				pruss2_intc: intc@20000 {
					compatible = "ti,am5728-pruss-intc";
					reg = <0x20000 0x2000>;
					reg-names = "intc";
					interrupt-controller;
					#interrupt-cells = <1>;
				};

				pru2_0: pru@34000 {
					compatible = "ti,am5728-pru";
					reg = <0x34000 0x3000>,
					      <0x22000 0x400>,
					      <0x22400 0x100>;
					reg-names = "iram", "control", "debug";
					firmware-name = "am57xx-pru2_0-fw";
					interrupt-parent = <&pruss2_intc>;
					interrupts = <16>, <17>;
					interrupt-names = "vring", "kick";
				};

				pru2_1: pru@38000 {
					compatible = "ti,am5728-pru";
					reg = <0x38000 0x3000>,
					      <0x24000 0x400>,
					      <0x24400 0x100>;
					reg-names = "iram", "control", "debug";
					firmware-name = "am57xx-pru2_1-fw";
					interrupt-parent = <&pruss2_intc>;
					interrupts = <18>, <19>;
					interrupt-names = "vring", "kick";
				};

				pruss2_mdio: mdio@32400 {
					compatible = "ti,davinci_mdio";
					#address-cells = <1>;
					#size-cells = <0>;
					clocks = <&dpll_gmac_h13x2_ck>;
					clock-names = "fck";
					bus_freq = <1000000>;
					reg = <0x32400 0x90>;
					status = "disabled";
				};
			};
		};

		abb_mpu: regulator-abb-mpu {
			compatible = "ti,abb-v3";
			regulator-name = "abb_mpu";
			#address-cells = <0>;
			#size-cells = <0>;
			clocks = <&sys_clkin1>;
			ti,settling-time = <50>;
			ti,clock-cycles = <16>;

			reg = <0x4ae07ddc 0x4>, <0x4ae07de0 0x4>,
			      <0x4ae06014 0x4>, <0x4a003b20 0xc>,
			      <0x4ae0c158 0x4>;
			reg-names = "setup-address", "control-address",
				    "int-address", "efuse-address",
				    "ldo-address";
			ti,tranxdone-status-mask = <0x80>;
			/* LDOVBBMPU_FBB_MUX_CTRL */
			ti,ldovbb-override-mask = <0x400>;
			/* LDOVBBMPU_FBB_VSET_OUT */
			ti,ldovbb-vset-mask = <0x1F>;

			/*
			 * NOTE: only FBB mode used but actual vset will
			 * determine final biasing
			 */
			ti,abb_info = <
			/*uV		ABB	efuse	rbb_m fbb_m	vset_m*/
			1060000		0	0x0	0 0x02000000 0x01F00000
			1160000		0	0x4	0 0x02000000 0x01F00000
			1210000		0	0x8	0 0x02000000 0x01F00000
			>;
		};

		abb_ivahd: regulator-abb-ivahd {
			compatible = "ti,abb-v3";
			regulator-name = "abb_ivahd";
			#address-cells = <0>;
			#size-cells = <0>;
			clocks = <&sys_clkin1>;
			ti,settling-time = <50>;
			ti,clock-cycles = <16>;

			reg = <0x4ae07e34 0x4>, <0x4ae07e24 0x4>,
			      <0x4ae06010 0x4>, <0x4a0025cc 0xc>,
			      <0x4a002470 0x4>;
			reg-names = "setup-address", "control-address",
				    "int-address", "efuse-address",
				    "ldo-address";
			ti,tranxdone-status-mask = <0x40000000>;
			/* LDOVBBIVA_FBB_MUX_CTRL */
			ti,ldovbb-override-mask = <0x400>;
			/* LDOVBBIVA_FBB_VSET_OUT */
			ti,ldovbb-vset-mask = <0x1F>;

			/*
			 * NOTE: only FBB mode used but actual vset will
			 * determine final biasing
			 */
			ti,abb_info = <
			/*uV		ABB	efuse	rbb_m fbb_m	vset_m*/
			1055000		0	0x0	0 0x02000000 0x01F00000
			1150000		0	0x4	0 0x02000000 0x01F00000
			1250000		0	0x8	0 0x02000000 0x01F00000
			>;
		};

		abb_dspeve: regulator-abb-dspeve {
			compatible = "ti,abb-v3";
			regulator-name = "abb_dspeve";
			#address-cells = <0>;
			#size-cells = <0>;
			clocks = <&sys_clkin1>;
			ti,settling-time = <50>;
			ti,clock-cycles = <16>;

			reg = <0x4ae07e30 0x4>, <0x4ae07e20 0x4>,
			      <0x4ae06010 0x4>, <0x4a0025e0 0xc>,
			      <0x4a00246c 0x4>;
			reg-names = "setup-address", "control-address",
				    "int-address", "efuse-address",
				    "ldo-address";
			ti,tranxdone-status-mask = <0x20000000>;
			/* LDOVBBDSPEVE_FBB_MUX_CTRL */
			ti,ldovbb-override-mask = <0x400>;
			/* LDOVBBDSPEVE_FBB_VSET_OUT */
			ti,ldovbb-vset-mask = <0x1F>;

			/*
			 * NOTE: only FBB mode used but actual vset will
			 * determine final biasing
			 */
			ti,abb_info = <
			/*uV		ABB	efuse	rbb_m fbb_m	vset_m*/
			1055000		0	0x0	0 0x02000000 0x01F00000
			1150000		0	0x4	0 0x02000000 0x01F00000
			1250000		0	0x8	0 0x02000000 0x01F00000
			>;
		};

		abb_gpu: regulator-abb-gpu {
			compatible = "ti,abb-v3";
			regulator-name = "abb_gpu";
			#address-cells = <0>;
			#size-cells = <0>;
			clocks = <&sys_clkin1>;
			ti,settling-time = <50>;
			ti,clock-cycles = <16>;

			reg = <0x4ae07de4 0x4>, <0x4ae07de8 0x4>,
			      <0x4ae06010 0x4>, <0x4a003b08 0xc>,
			      <0x4ae0c154 0x4>;
			reg-names = "setup-address", "control-address",
				    "int-address", "efuse-address",
				    "ldo-address";
			ti,tranxdone-status-mask = <0x10000000>;
			/* LDOVBBGPU_FBB_MUX_CTRL */
			ti,ldovbb-override-mask = <0x400>;
			/* LDOVBBGPU_FBB_VSET_OUT */
			ti,ldovbb-vset-mask = <0x1F>;

			/*
			 * NOTE: only FBB mode used but actual vset will
			 * determine final biasing
			 */
			ti,abb_info = <
			/*uV		ABB	efuse	rbb_m fbb_m	vset_m*/
			1090000		0	0x0	0 0x02000000 0x01F00000
			1210000		0	0x4	0 0x02000000 0x01F00000
			1280000		0	0x8	0 0x02000000 0x01F00000
			>;
		};

		mcspi1: spi@48098000 {
			compatible = "ti,omap4-mcspi";
			reg = <0x48098000 0x200>;
			interrupts = <GIC_SPI 60 IRQ_TYPE_LEVEL_HIGH>;
			#address-cells = <1>;
			#size-cells = <0>;
			ti,hwmods = "mcspi1";
			ti,spi-num-cs = <4>;
			dmas = <&sdma_xbar 35>,
			       <&sdma_xbar 36>,
			       <&sdma_xbar 37>,
			       <&sdma_xbar 38>,
			       <&sdma_xbar 39>,
			       <&sdma_xbar 40>,
			       <&sdma_xbar 41>,
			       <&sdma_xbar 42>;
			dma-names = "tx0", "rx0", "tx1", "rx1",
				    "tx2", "rx2", "tx3", "rx3";
			status = "disabled";
		};

		mcspi2: spi@4809a000 {
			compatible = "ti,omap4-mcspi";
			reg = <0x4809a000 0x200>;
			interrupts = <GIC_SPI 61 IRQ_TYPE_LEVEL_HIGH>;
			#address-cells = <1>;
			#size-cells = <0>;
			ti,hwmods = "mcspi2";
			ti,spi-num-cs = <2>;
			dmas = <&sdma_xbar 43>,
			       <&sdma_xbar 44>,
			       <&sdma_xbar 45>,
			       <&sdma_xbar 46>;
			dma-names = "tx0", "rx0", "tx1", "rx1";
			status = "disabled";
		};

		mcspi3: spi@480b8000 {
			compatible = "ti,omap4-mcspi";
			reg = <0x480b8000 0x200>;
			interrupts = <GIC_SPI 86 IRQ_TYPE_LEVEL_HIGH>;
			#address-cells = <1>;
			#size-cells = <0>;
			ti,hwmods = "mcspi3";
			ti,spi-num-cs = <2>;
			dmas = <&sdma_xbar 15>, <&sdma_xbar 16>;
			dma-names = "tx0", "rx0";
			status = "disabled";
		};

		mcspi4: spi@480ba000 {
			compatible = "ti,omap4-mcspi";
			reg = <0x480ba000 0x200>;
			interrupts = <GIC_SPI 43 IRQ_TYPE_LEVEL_HIGH>;
			#address-cells = <1>;
			#size-cells = <0>;
			ti,hwmods = "mcspi4";
			ti,spi-num-cs = <1>;
			dmas = <&sdma_xbar 70>, <&sdma_xbar 71>;
			dma-names = "tx0", "rx0";
			status = "disabled";
		};

		qspi: qspi@4b300000 {
			compatible = "ti,dra7xxx-qspi";
			reg = <0x4b300000 0x100>,
			      <0x5c000000 0x4000000>;
			reg-names = "qspi_base", "qspi_mmap";
			syscon-chipselects = <&scm_conf 0x558>;
			#address-cells = <1>;
			#size-cells = <0>;
			ti,hwmods = "qspi";
			clocks = <&qspi_gfclk_div>;
			clock-names = "fck";
			num-cs = <4>;
			interrupts = <GIC_SPI 343 IRQ_TYPE_LEVEL_HIGH>;
			status = "disabled";
		};

		/* OCP2SCP3 */
		ocp2scp@4a090000 {
			compatible = "ti,omap-ocp2scp";
			#address-cells = <1>;
			#size-cells = <1>;
			ranges;
			reg = <0x4a090000 0x20>;
			ti,hwmods = "ocp2scp3";
			sata_phy: phy@4A096000 {
				compatible = "ti,phy-pipe3-sata";
				reg = <0x4A096000 0x80>, /* phy_rx */
				      <0x4A096400 0x64>, /* phy_tx */
				      <0x4A096800 0x40>; /* pll_ctrl */
				reg-names = "phy_rx", "phy_tx", "pll_ctrl";
				syscon-phy-power = <&scm_conf 0x374>;
				clocks = <&sys_clkin1>, <&sata_ref_clk>;
				clock-names = "sysclk", "refclk";
				syscon-pllreset = <&scm_conf 0x3fc>;
				#phy-cells = <0>;
			};

			pcie1_phy: pciephy@4a094000 {
				compatible = "ti,phy-pipe3-pcie";
				reg = <0x4a094000 0x80>, /* phy_rx */
				      <0x4a094400 0x64>; /* phy_tx */
				reg-names = "phy_rx", "phy_tx";
				syscon-phy-power = <&scm_conf_pcie 0x1c>;
				syscon-pcs = <&scm_conf_pcie 0x10>;
				clocks = <&dpll_pcie_ref_ck>,
					 <&dpll_pcie_ref_m2ldo_ck>,
					 <&optfclk_pciephy1_32khz>,
					 <&optfclk_pciephy1_clk>,
					 <&optfclk_pciephy1_div_clk>,
					 <&optfclk_pciephy_div>,
					 <&sys_clkin1>;
				clock-names = "dpll_ref", "dpll_ref_m2",
					      "wkupclk", "refclk",
					      "div-clk", "phy-div", "sysclk";
				#phy-cells = <0>;
			};

			pcie2_phy: pciephy@4a095000 {
				compatible = "ti,phy-pipe3-pcie";
				reg = <0x4a095000 0x80>, /* phy_rx */
				      <0x4a095400 0x64>; /* phy_tx */
				reg-names = "phy_rx", "phy_tx";
				syscon-phy-power = <&scm_conf_pcie 0x20>;
				syscon-pcs = <&scm_conf_pcie 0x10>;
				clocks = <&dpll_pcie_ref_ck>,
					 <&dpll_pcie_ref_m2ldo_ck>,
					 <&optfclk_pciephy2_32khz>,
					 <&optfclk_pciephy2_clk>,
					 <&optfclk_pciephy2_div_clk>,
					 <&optfclk_pciephy_div>,
					 <&sys_clkin1>;
				clock-names = "dpll_ref", "dpll_ref_m2",
					      "wkupclk", "refclk",
					      "div-clk", "phy-div", "sysclk";
				#phy-cells = <0>;
				status = "disabled";
			};
		};

		sata: sata@4a141100 {
			compatible = "snps,dwc-ahci";
			reg = <0x4a140000 0x1100>, <0x4a141100 0x7>;
			interrupts = <GIC_SPI 49 IRQ_TYPE_LEVEL_HIGH>;
			phys = <&sata_phy>;
			phy-names = "sata-phy";
			clocks = <&sata_ref_clk>;
			ti,hwmods = "sata";
			ports-implemented = <0x1>;
		};

		rtc: rtc@48838000 {
			compatible = "ti,am3352-rtc";
			reg = <0x48838000 0x100>;
			interrupts = <GIC_SPI 217 IRQ_TYPE_LEVEL_HIGH>,
				     <GIC_SPI 217 IRQ_TYPE_LEVEL_HIGH>;
			ti,hwmods = "rtcss";
			clocks = <&sys_32k_ck>;
		};

		/* OCP2SCP1 */
		ocp2scp@4a080000 {
			compatible = "ti,omap-ocp2scp";
			#address-cells = <1>;
			#size-cells = <1>;
			ranges;
			reg = <0x4a080000 0x20>;
			ti,hwmods = "ocp2scp1";

			usb2_phy1: phy@4a084000 {
				compatible = "ti,dra7x-usb2", "ti,omap-usb2";
				reg = <0x4a084000 0x400>;
				syscon-phy-power = <&scm_conf 0x300>;
				clocks = <&usb_phy1_always_on_clk32k>,
					 <&usb_otg_ss1_refclk960m>;
				clock-names =	"wkupclk",
						"refclk";
				#phy-cells = <0>;
			};

			usb2_phy2: phy@4a085000 {
				compatible = "ti,dra7x-usb2-phy2",
					     "ti,omap-usb2";
				reg = <0x4a085000 0x400>;
				syscon-phy-power = <&scm_conf 0xe74>;
				clocks = <&usb_phy2_always_on_clk32k>,
					 <&usb_otg_ss2_refclk960m>;
				clock-names =	"wkupclk",
						"refclk";
				#phy-cells = <0>;
			};

			usb3_phy1: phy@4a084400 {
				compatible = "ti,omap-usb3";
				reg = <0x4a084400 0x80>,
				      <0x4a084800 0x64>,
				      <0x4a084c00 0x40>;
				reg-names = "phy_rx", "phy_tx", "pll_ctrl";
				syscon-phy-power = <&scm_conf 0x370>;
				clocks = <&usb_phy3_always_on_clk32k>,
					 <&sys_clkin1>,
					 <&usb_otg_ss1_refclk960m>;
				clock-names =	"wkupclk",
						"sysclk",
						"refclk";
				#phy-cells = <0>;
			};
		};

		omap_dwc3_1: omap_dwc3_1@48880000 {
			compatible = "ti,dwc3";
			ti,hwmods = "usb_otg_ss1";
			reg = <0x48880000 0x10000>;
			interrupts = <GIC_SPI 72 IRQ_TYPE_LEVEL_HIGH>;
			#address-cells = <1>;
			#size-cells = <1>;
			utmi-mode = <2>;
			ranges;
			usb1: usb@48890000 {
				compatible = "snps,dwc3";
				reg = <0x48890000 0x17000>;
				interrupts = <GIC_SPI 71 IRQ_TYPE_LEVEL_HIGH>,
					     <GIC_SPI 71 IRQ_TYPE_LEVEL_HIGH>,
					     <GIC_SPI 72 IRQ_TYPE_LEVEL_HIGH>;
				interrupt-names = "peripheral",
						  "host",
						  "otg";
				phys = <&usb2_phy1>, <&usb3_phy1>;
				phy-names = "usb2-phy", "usb3-phy";
				maximum-speed = "super-speed";
				dr_mode = "otg";
				snps,dis_u3_susphy_quirk;
				snps,dis_u2_susphy_quirk;
			};
		};

		omap_dwc3_2: omap_dwc3_2@488c0000 {
			compatible = "ti,dwc3";
			ti,hwmods = "usb_otg_ss2";
			reg = <0x488c0000 0x10000>;
			interrupts = <GIC_SPI 87 IRQ_TYPE_LEVEL_HIGH>;
			#address-cells = <1>;
			#size-cells = <1>;
			utmi-mode = <2>;
			ranges;
			usb2: usb@488d0000 {
				compatible = "snps,dwc3";
				reg = <0x488d0000 0x17000>;
				interrupts = <GIC_SPI 73 IRQ_TYPE_LEVEL_HIGH>,
					     <GIC_SPI 73 IRQ_TYPE_LEVEL_HIGH>,
					     <GIC_SPI 87 IRQ_TYPE_LEVEL_HIGH>;
				interrupt-names = "peripheral",
						  "host",
						  "otg";
				phys = <&usb2_phy2>;
				phy-names = "usb2-phy";
				maximum-speed = "high-speed";
				dr_mode = "otg";
				snps,dis_u3_susphy_quirk;
				snps,dis_u2_susphy_quirk;
				snps,dis_metastability_quirk;
			};
		};

		/* IRQ for DWC3_3 and DWC3_4 need IRQ crossbar */
		omap_dwc3_3: omap_dwc3_3@48900000 {
			compatible = "ti,dwc3";
			ti,hwmods = "usb_otg_ss3";
			reg = <0x48900000 0x10000>;
			interrupts = <GIC_SPI 344 IRQ_TYPE_LEVEL_HIGH>;
			#address-cells = <1>;
			#size-cells = <1>;
			utmi-mode = <2>;
			ranges;
			status = "disabled";
			usb3: usb@48910000 {
				compatible = "snps,dwc3";
				reg = <0x48910000 0x17000>;
				interrupts = <GIC_SPI 88 IRQ_TYPE_LEVEL_HIGH>,
					     <GIC_SPI 88 IRQ_TYPE_LEVEL_HIGH>,
					     <GIC_SPI 344 IRQ_TYPE_LEVEL_HIGH>;
				interrupt-names = "peripheral",
						  "host",
						  "otg";
				maximum-speed = "high-speed";
				dr_mode = "otg";
				snps,dis_u3_susphy_quirk;
				snps,dis_u2_susphy_quirk;
			};
		};

		elm: elm@48078000 {
			compatible = "ti,am3352-elm";
			reg = <0x48078000 0xfc0>;      /* device IO registers */
			interrupts = <GIC_SPI 1 IRQ_TYPE_LEVEL_HIGH>;
			ti,hwmods = "elm";
			status = "disabled";
		};

		gpmc: gpmc@50000000 {
			compatible = "ti,am3352-gpmc";
			ti,hwmods = "gpmc";
			reg = <0x50000000 0x37c>;      /* device IO registers */
			interrupts = <GIC_SPI 15 IRQ_TYPE_LEVEL_HIGH>;
			dmas = <&edma_xbar 4 0>;
			dma-names = "rxtx";
			gpmc,num-cs = <8>;
			gpmc,num-waitpins = <2>;
			#address-cells = <2>;
			#size-cells = <1>;
			interrupt-controller;
			#interrupt-cells = <2>;
			gpio-controller;
			#gpio-cells = <2>;
			status = "disabled";
		};

		atl: atl@4843c000 {
			compatible = "ti,dra7-atl";
			reg = <0x4843c000 0x3ff>;
			ti,hwmods = "atl";
			ti,provided-clocks = <&atl_clkin0_ck>, <&atl_clkin1_ck>,
					     <&atl_clkin2_ck>, <&atl_clkin3_ck>;
			clocks = <&atl_gfclk_mux>;
			clock-names = "fck";
			status = "disabled";
		};

		mcasp1: mcasp@48460000 {
			compatible = "ti,dra7-mcasp-audio";
			ti,hwmods = "mcasp1";
			reg = <0x48460000 0x2000>,
			      <0x45800000 0x1000>;
			reg-names = "mpu","dat";
			interrupts = <GIC_SPI 104 IRQ_TYPE_LEVEL_HIGH>,
				     <GIC_SPI 103 IRQ_TYPE_LEVEL_HIGH>;
			interrupt-names = "tx", "rx";
			dmas = <&edma_xbar 129 1>, <&edma_xbar 128 1>;
			dma-names = "tx", "rx";
			clocks = <&mcasp1_aux_gfclk_mux>, <&mcasp1_ahclkx_mux>,
				 <&mcasp1_ahclkr_mux>;
			clock-names = "fck", "ahclkx", "ahclkr";
			status = "disabled";
		};

		mcasp2: mcasp@48464000 {
			compatible = "ti,dra7-mcasp-audio";
			ti,hwmods = "mcasp2";
			reg = <0x48464000 0x2000>,
			      <0x45c00000 0x1000>;
			reg-names = "mpu","dat";
			interrupts = <GIC_SPI 149 IRQ_TYPE_LEVEL_HIGH>,
				     <GIC_SPI 148 IRQ_TYPE_LEVEL_HIGH>;
			interrupt-names = "tx", "rx";
			dmas = <&edma_xbar 131 1>, <&edma_xbar 130 1>;
			dma-names = "tx", "rx";
			clocks = <&mcasp2_aux_gfclk_mux>, <&mcasp2_ahclkx_mux>,
				 <&mcasp2_ahclkr_mux>;
			clock-names = "fck", "ahclkx", "ahclkr";
			status = "disabled";
		};

		mcasp3: mcasp@48468000 {
			compatible = "ti,dra7-mcasp-audio";
			ti,hwmods = "mcasp3";
			reg = <0x48468000 0x2000>,
			      <0x46000000 0x1000>;
			reg-names = "mpu","dat";
			interrupts = <GIC_SPI 151 IRQ_TYPE_LEVEL_HIGH>,
				     <GIC_SPI 150 IRQ_TYPE_LEVEL_HIGH>;
			interrupt-names = "tx", "rx";
			dmas = <&edma_xbar 133 1>, <&edma_xbar 132 1>;
			dma-names = "tx", "rx";
			clocks = <&mcasp3_aux_gfclk_mux>, <&mcasp3_ahclkx_mux>;
			clock-names = "fck", "ahclkx";
			status = "disabled";
		};

		mcasp4: mcasp@4846c000 {
			compatible = "ti,dra7-mcasp-audio";
			ti,hwmods = "mcasp4";
			reg = <0x4846c000 0x2000>,
			      <0x48436000 0x1000>;
			reg-names = "mpu","dat";
			interrupts = <GIC_SPI 153 IRQ_TYPE_LEVEL_HIGH>,
				     <GIC_SPI 152 IRQ_TYPE_LEVEL_HIGH>;
			interrupt-names = "tx", "rx";
			dmas = <&edma_xbar 135 1>, <&edma_xbar 134 1>;
			dma-names = "tx", "rx";
			clocks = <&mcasp4_aux_gfclk_mux>, <&mcasp4_ahclkx_mux>;
			clock-names = "fck", "ahclkx";
			status = "disabled";
		};

		mcasp5: mcasp@48470000 {
			compatible = "ti,dra7-mcasp-audio";
			ti,hwmods = "mcasp5";
			reg = <0x48470000 0x2000>,
			      <0x4843a000 0x1000>;
			reg-names = "mpu","dat";
			interrupts = <GIC_SPI 155 IRQ_TYPE_LEVEL_HIGH>,
				     <GIC_SPI 154 IRQ_TYPE_LEVEL_HIGH>;
			interrupt-names = "tx", "rx";
			dmas = <&edma_xbar 137 1>, <&edma_xbar 136 1>;
			dma-names = "tx", "rx";
			clocks = <&mcasp5_aux_gfclk_mux>, <&mcasp5_ahclkx_mux>;
			clock-names = "fck", "ahclkx";
			status = "disabled";
		};

		mcasp6: mcasp@48474000 {
			compatible = "ti,dra7-mcasp-audio";
			ti,hwmods = "mcasp6";
			reg = <0x48474000 0x2000>,
			      <0x4844c000 0x1000>;
			reg-names = "mpu","dat";
			interrupts = <GIC_SPI 157 IRQ_TYPE_LEVEL_HIGH>,
				     <GIC_SPI 156 IRQ_TYPE_LEVEL_HIGH>;
			interrupt-names = "tx", "rx";
			dmas = <&edma_xbar 139 1>, <&edma_xbar 138 1>;
			dma-names = "tx", "rx";
			clocks = <&mcasp6_aux_gfclk_mux>, <&mcasp6_ahclkx_mux>;
			clock-names = "fck", "ahclkx";
			status = "disabled";
		};

		mcasp7: mcasp@48478000 {
			compatible = "ti,dra7-mcasp-audio";
			ti,hwmods = "mcasp7";
			reg = <0x48478000 0x2000>,
			      <0x48450000 0x1000>;
			reg-names = "mpu","dat";
			interrupts = <GIC_SPI 159 IRQ_TYPE_LEVEL_HIGH>,
				     <GIC_SPI 158 IRQ_TYPE_LEVEL_HIGH>;
			interrupt-names = "tx", "rx";
			dmas = <&edma_xbar 141 1>, <&edma_xbar 140 1>;
			dma-names = "tx", "rx";
			clocks = <&mcasp7_aux_gfclk_mux>, <&mcasp7_ahclkx_mux>;
			clock-names = "fck", "ahclkx";
			status = "disabled";
		};

		mcasp8: mcasp@4847c000 {
			compatible = "ti,dra7-mcasp-audio";
			ti,hwmods = "mcasp8";
			reg = <0x4847c000 0x2000>,
			      <0x48454000 0x1000>;
			reg-names = "mpu","dat";
			interrupts = <GIC_SPI 161 IRQ_TYPE_LEVEL_HIGH>,
				     <GIC_SPI 160 IRQ_TYPE_LEVEL_HIGH>;
			interrupt-names = "tx", "rx";
			dmas = <&edma_xbar 143 1>, <&edma_xbar 142 1>;
			dma-names = "tx", "rx";
			clocks = <&mcasp8_aux_gfclk_mux>, <&mcasp8_ahclkx_mux>;
			clock-names = "fck", "ahclkx";
			status = "disabled";
		};

		crossbar_mpu: crossbar@4a002a48 {
			compatible = "ti,irq-crossbar";
			reg = <0x4a002a48 0x130>;
			interrupt-controller;
			interrupt-parent = <&wakeupgen>;
			#interrupt-cells = <3>;
			ti,max-irqs = <160>;
			ti,max-crossbar-sources = <MAX_SOURCES>;
			ti,reg-size = <2>;
			ti,irqs-reserved = <0 1 2 3 5 6 131 132>;
			ti,irqs-skip = <10 133 139 140>;
			ti,irqs-safe-map = <0>;
		};

		mac: ethernet@48484000 {
			compatible = "ti,dra7-cpsw","ti,cpsw";
			ti,hwmods = "gmac";
			clocks = <&gmac_main_clk>, <&gmac_rft_clk_mux>;
			clock-names = "fck", "cpts";
			cpdma_channels = <8>;
			ale_entries = <1024>;
			bd_ram_size = <0x2000>;
			mac_control = <0x20>;
			slaves = <2>;
			active_slave = <0>;
			cpts_clock_mult = <0x784CFE14>;
			cpts_clock_shift = <29>;
			reg = <0x48484000 0x1000
			       0x48485200 0x2E00>;
			#address-cells = <1>;
			#size-cells = <1>;

			/*
			 * Do not allow gating of cpsw clock as workaround
			 * for errata i877. Keeping internal clock disabled
			 * causes the device switching characteristics
			 * to degrade over time and eventually fail to meet
			 * the data manual delay time/skew specs.
			 */
			ti,no-idle;

			/*
			 * rx_thresh_pend
			 * rx_pend
			 * tx_pend
			 * misc_pend
			 */
			interrupts = <GIC_SPI 334 IRQ_TYPE_LEVEL_HIGH>,
				     <GIC_SPI 335 IRQ_TYPE_LEVEL_HIGH>,
				     <GIC_SPI 336 IRQ_TYPE_LEVEL_HIGH>,
				     <GIC_SPI 337 IRQ_TYPE_LEVEL_HIGH>;
			ranges;
			syscon = <&scm_conf>;
			status = "disabled";

			davinci_mdio: mdio@48485000 {
				compatible = "ti,cpsw-mdio","ti,davinci_mdio";
				#address-cells = <1>;
				#size-cells = <0>;
				ti,hwmods = "davinci_mdio";
				bus_freq = <1000000>;
				reg = <0x48485000 0x100>;
			};

			cpsw_emac0: slave@48480200 {
				/* Filled in by U-Boot */
				mac-address = [ 00 00 00 00 00 00 ];
			};

			cpsw_emac1: slave@48480300 {
				/* Filled in by U-Boot */
				mac-address = [ 00 00 00 00 00 00 ];
			};

			phy_sel: cpsw-phy-sel@4a002554 {
				compatible = "ti,dra7xx-cpsw-phy-sel";
				reg= <0x4a002554 0x4>;
				reg-names = "gmii-sel";
			};
		};

		dcan1: can@4ae3c000 {
			compatible = "ti,dra7-d_can";
			ti,hwmods = "dcan1";
			reg = <0x4ae3c000 0x2000>;
			syscon-raminit = <&scm_conf 0x558 0>;
			interrupts = <GIC_SPI 222 IRQ_TYPE_LEVEL_HIGH>;
			clocks = <&dcan1_sys_clk_mux>;
			status = "disabled";
		};

		dcan2: can@48480000 {
			compatible = "ti,dra7-d_can";
			ti,hwmods = "dcan2";
			reg = <0x48480000 0x2000>;
			syscon-raminit = <&scm_conf 0x558 1>;
			interrupts = <GIC_SPI 225 IRQ_TYPE_LEVEL_HIGH>;
			clocks = <&sys_clkin1>;
			status = "disabled";
		};

		gpu: gpu@56000000 {
			compatible = "ti,dra7-sgx544", "img,sgx544";
			reg = <0x56000000 0x10000>;
			reg-names = "gpu_ocp_base";
			interrupts = <GIC_SPI 16 IRQ_TYPE_LEVEL_HIGH>;
			ti,hwmods = "gpu";
			clocks = <&l3_iclk_div>, <&gpu_core_gclk_mux>,
				<&gpu_hyd_gclk_mux>;
			clock-names = "iclk", "fclk1", "fclk2";
			status = "disabled";
		};

		bb2d: bb2d@59000000 {
			compatible = "ti,dra7-bb2d","vivante,gc";
			reg = <0x59000000 0x0700>;
			interrupts = <GIC_SPI 120 IRQ_TYPE_LEVEL_HIGH>;
			ti,hwmods = "bb2d";
			clocks = <&dpll_core_h24x2_ck>;
			clock-names = "fclk";
			status = "disabled";
		};

		//bb2d: bb2d@59000000 {
		//	compatible = "ti,dra7-bb2d","vivante,gc";
		//	reg = <0x59000000 0x0700>;
		//	interrupts = <GIC_SPI 120 IRQ_TYPE_LEVEL_HIGH>;
		//	ti,hwmods = "bb2d";
		//	clocks = <&dpll_core_h24x2_ck>;
		//	clock-names = "fclk";
		//	status = "disabled";
		//};

		dss: dss@58000000 {
			compatible = "ti,dra7-dss";
			/* 'reg' defined in dra72x.dtsi and dra74x.dtsi */
			/* 'clocks' defined in dra72x.dtsi and dra74x.dtsi */
			status = "disabled";
			ti,hwmods = "dss_core";
			/* CTRL_CORE_DSS_PLL_CONTROL */
			syscon-pll-ctrl = <&scm_conf 0x538>;
			#address-cells = <1>;
			#size-cells = <1>;
			ranges;

			dispc@58001000 {
				compatible = "ti,dra7-dispc";
				reg = <0x58001000 0x1000>;
				interrupts = <GIC_SPI 20 IRQ_TYPE_LEVEL_HIGH>;
				ti,hwmods = "dss_dispc";
				clocks = <&dss_dss_clk>;
				clock-names = "fck";
				/* CTRL_CORE_SMA_SW_1 */
				syscon-pol = <&scm_conf 0x534>;
			};

			hdmi: encoder@58060000 {
				compatible = "ti,dra7-hdmi";
				reg = <0x58040000 0x200>,
				      <0x58040200 0x80>,
				      <0x58040300 0x80>,
				      <0x58060000 0x19000>;
				reg-names = "wp", "pll", "phy", "core";
				interrupts = <GIC_SPI 96 IRQ_TYPE_LEVEL_HIGH>;
				status = "disabled";
				ti,hwmods = "dss_hdmi";
				clocks = <&dss_48mhz_clk>, <&dss_hdmi_clk>;
				clock-names = "fck", "sys_clk";
				dmas = <&sdma_xbar 76>;
				dma-names = "audio_tx";
			};
		};

		epwmss0: epwmss@4843e000 {
			compatible = "ti,dra746-pwmss", "ti,am33xx-pwmss";
			reg = <0x4843e000 0x30>;
			ti,hwmods = "epwmss0";
			#address-cells = <1>;
			#size-cells = <1>;
			status = "disabled";
			ranges;

			ehrpwm0: pwm@4843e200 {
				compatible = "ti,dra746-ehrpwm",
					     "ti,am3352-ehrpwm";
				#pwm-cells = <3>;
				reg = <0x4843e200 0x80>;
				clocks = <&ehrpwm0_tbclk>, <&l4_root_clk_div>;
				clock-names = "tbclk", "fck";
				status = "disabled";
			};

			eqep0: eqep@0x4843e180 {
				compatible = "ti,am33xx-eqep";
				reg = <0x4843e180 0x80>;
				clocks = <&l4_root_clk_div>;
				clock-names = "fck";
				interrupt-parent = <&crossbar_mpu>;
				interrupts = <GIC_SPI 210 IRQ_TYPE_LEVEL_HIGH>;
			};

			ecap0: ecap@4843e100 {
				compatible = "ti,dra746-ecap",
					     "ti,am3352-ecap";
				#pwm-cells = <3>;
				reg = <0x4843e100 0x80>;
				clocks = <&l4_root_clk_div>;
				clock-names = "fck";
				status = "disabled";
			};
		};

		epwmss1: epwmss@48440000 {
			compatible = "ti,dra746-pwmss", "ti,am33xx-pwmss";
			reg = <0x48440000 0x30>;
			ti,hwmods = "epwmss1";
			#address-cells = <1>;
			#size-cells = <1>;
			status = "disabled";
			ranges;

			ehrpwm1: pwm@48440200 {
				compatible = "ti,dra746-ehrpwm",
					     "ti,am3352-ehrpwm";
				#pwm-cells = <3>;
				reg = <0x48440200 0x80>;
				clocks = <&ehrpwm1_tbclk>, <&l4_root_clk_div>;
				clock-names = "tbclk", "fck";
				status = "disabled";
			};

			eqep1: eqep@0x48440180 {
				compatible = "ti,am33xx-eqep";
				reg = <0x48440180 0x80>;
				clocks = <&l4_root_clk_div>;
				clock-names = "fck";
				interrupt-parent = <&crossbar_mpu>;
				interrupts = <GIC_SPI 211 IRQ_TYPE_LEVEL_HIGH>;
			};

			ecap1: ecap@48440100 {
				compatible = "ti,dra746-ecap",
					     "ti,am3352-ecap";
				#pwm-cells = <3>;
				reg = <0x48440100 0x80>;
				clocks = <&l4_root_clk_div>;
				clock-names = "fck";
				status = "disabled";
			};
		};

		epwmss2: epwmss@48442000 {
			compatible = "ti,dra746-pwmss", "ti,am33xx-pwmss";
			reg = <0x48442000 0x30>;
			ti,hwmods = "epwmss2";
			#address-cells = <1>;
			#size-cells = <1>;
			status = "disabled";
			ranges;

			ehrpwm2: pwm@48442200 {
				compatible = "ti,dra746-ehrpwm",
					     "ti,am3352-ehrpwm";
				#pwm-cells = <3>;
				reg = <0x48442200 0x80>;
				clocks = <&ehrpwm2_tbclk>, <&l4_root_clk_div>;
				clock-names = "tbclk", "fck";
				status = "disabled";
			};

			eqep2: eqep@0x48442180 {
				compatible = "ti,am33xx-eqep";
				reg = <0x48442180 0x80>;
				clocks = <&l4_root_clk_div>;
				clock-names = "fck";
				interrupt-parent = <&crossbar_mpu>;
				interrupts = <GIC_SPI 212 IRQ_TYPE_LEVEL_HIGH>;
			};

			ecap2: ecap@48442100 {
				compatible = "ti,dra746-ecap",
					     "ti,am3352-ecap";
				#pwm-cells = <3>;
				reg = <0x48442100 0x80>;
				clocks = <&l4_root_clk_div>;
				clock-names = "fck";
				status = "disabled";
			};
		};

		aes1: aes@4b500000 {
			compatible = "ti,omap4-aes";
			ti,hwmods = "aes1";
			reg = <0x4b500000 0xa0>;
			interrupts = <GIC_SPI 80 IRQ_TYPE_LEVEL_HIGH>;
			dmas = <&edma_xbar 111 0>, <&edma_xbar 110 0>;
			dma-names = "tx", "rx";
			clocks = <&l3_iclk_div>;
			clock-names = "fck";
		};

		aes2: aes@4b700000 {
			compatible = "ti,omap4-aes";
			ti,hwmods = "aes2";
			reg = <0x4b700000 0xa0>;
			interrupts = <GIC_SPI 59 IRQ_TYPE_LEVEL_HIGH>;
			dmas = <&edma_xbar 114 0>, <&edma_xbar 113 0>;
			dma-names = "tx", "rx";
			clocks = <&l3_iclk_div>;
			clock-names = "fck";
		};

		des: des@480a5000 {
			compatible = "ti,omap4-des";
			ti,hwmods = "des";
			reg = <0x480a5000 0xa0>;
			interrupts = <GIC_SPI 77 IRQ_TYPE_LEVEL_HIGH>;
			dmas = <&sdma_xbar 117>, <&sdma_xbar 116>;
			dma-names = "tx", "rx";
			clocks = <&l3_iclk_div>;
			clock-names = "fck";
		};

		sham: sham@53100000 {
			compatible = "ti,omap5-sham";
			ti,hwmods = "sham";
			reg = <0x4b101000 0x300>;
			interrupts = <GIC_SPI 46 IRQ_TYPE_LEVEL_HIGH>;
			dmas = <&edma_xbar 119 0>;
			dma-names = "rx";
			clocks = <&l3_iclk_div>;
			clock-names = "fck";
		};

		rng: rng@48090000 {
			compatible = "ti,omap4-rng";
			ti,hwmods = "rng";
			reg = <0x48090000 0x2000>;
			interrupts = <GIC_SPI 47 IRQ_TYPE_LEVEL_HIGH>;
			clocks = <&l3_iclk_div>;
			clock-names = "fck";
		};

		opp_supply_mpu: opp-supply@4a003b20 {
			compatible = "ti,omap5-opp-supply";
			reg = <0x4a003b20 0xc>;
			ti,efuse-settings = <
			/* uV   offset */
			1060000 0x0
			1160000 0x4
			1210000 0x8
			>;
			ti,absolute-max-voltage-uv = <1500000>;
		};

		vpe {
			compatible = "ti,vpe";
			ti,hwmods = "vpe";
			clocks = <&dpll_core_h23x2_ck>;
			clock-names = "fck";
			reg = <0x489d0000 0x120>,
			      <0x489d0300 0x20>,
			      <0x489d0400 0x20>,
			      <0x489d0500 0x20>,
			      <0x489d0600 0x3c>,
			      <0x489d0700 0x80>,
			      <0x489d5700 0x18>,
			      <0x489dd000 0x400>;
			reg-names = "vpe_top",
				    "vpe_chr_us0",
				    "vpe_chr_us1",
				    "vpe_chr_us2",
				    "vpe_dei",
				    "sc",
				    "csc",
				    "vpdma";
			interrupts = <GIC_SPI 354 IRQ_TYPE_LEVEL_HIGH>;
			#address-cells = <1>;
			#size-cells = <0>;
		};

		vip1: vip@0x48970000 {
			compatible = "ti,vip1";
			reg = <0x48970000 0x114>,
			      <0x48975500 0xD8>,
			      <0x48975700 0x18>,
			      <0x48975800 0x80>,
			      <0x48975a00 0xD8>,
			      <0x48975c00 0x18>,
			      <0x48975d00 0x80>,
			      <0x4897d000 0x400>;
			reg-names = "vip",
				    "parser0",
				    "csc0",
				    "sc0",
				    "parser1",
				    "csc1",
				    "sc1",
				    "vpdma";
			ti,hwmods = "vip1";
			interrupts = <GIC_SPI 351 IRQ_TYPE_LEVEL_HIGH>,
				     <GIC_SPI 392 IRQ_TYPE_LEVEL_HIGH>;
			/* CTRL_CORE_SMA_SW_1 */
			syscon-pol = <&scm_conf 0x534>;
			#address-cells = <1>;
			#size-cells = <0>;
			status = "disabled";
			vin1a: port@0 {
				#address-cells = <1>;
				#size-cells = <0>;
				reg = <0>;
				status = "disabled";
			};
			vin2a: port@1 {
				#address-cells = <1>;
				#size-cells = <0>;
				reg = <1>;
				status = "disabled";
			};
			vin1b: port@2 {
				#address-cells = <1>;
				#size-cells = <0>;
				reg = <2>;
				status = "disabled";
			};
			vin2b: port@3 {
				#address-cells = <1>;
				#size-cells = <0>;
				reg = <3>;
				status = "disabled";
			};
		};

		dsp2_system: dsp_system@41500000 {
			compatible = "syscon";
			reg = <0x41500000 0x100>;
		};

		omap_dwc3_4: omap_dwc3_4@48940000 {
			compatible = "ti,dwc3";
			ti,hwmods = "usb_otg_ss4";
			reg = <0x48940000 0x10000>;
			interrupts = <GIC_SPI 346 IRQ_TYPE_LEVEL_HIGH>;
			#address-cells = <1>;
			#size-cells = <1>;
			utmi-mode = <2>;
			ranges;
			status = "disabled";
			usb4: usb@48950000 {
				compatible = "snps,dwc3";
				reg = <0x48950000 0x17000>;
				interrupts = <GIC_SPI 345 IRQ_TYPE_LEVEL_HIGH>,
					     <GIC_SPI 345 IRQ_TYPE_LEVEL_HIGH>,
					     <GIC_SPI 346 IRQ_TYPE_LEVEL_HIGH>;
				interrupt-names = "peripheral",
						  "host",
						  "otg";
				maximum-speed = "high-speed";
				dr_mode = "otg";
			};
		};

		mmu0_dsp2: mmu@41501000 {
			compatible = "ti,dra7-dsp-iommu";
			reg = <0x41501000 0x100>;
			interrupts = <GIC_SPI 146 IRQ_TYPE_LEVEL_HIGH>;
			ti,hwmods = "mmu0_dsp2";
			#iommu-cells = <0>;
			ti,syscon-mmuconfig = <&dsp2_system 0x0>;
		};

		mmu1_dsp2: mmu@41502000 {
			compatible = "ti,dra7-dsp-iommu";
			reg = <0x41502000 0x100>;
			interrupts = <GIC_SPI 147 IRQ_TYPE_LEVEL_HIGH>;
			ti,hwmods = "mmu1_dsp2";
			#iommu-cells = <0>;
			ti,syscon-mmuconfig = <&dsp2_system 0x1>;
		};

		dsp2: dsp@41000000 {
			compatible = "ti,dra7-dsp";
			reg = <0x41000000 0x48000>,
			      <0x41600000 0x8000>,
			      <0x41700000 0x8000>;
			reg-names = "l2ram", "l1pram", "l1dram";
			ti,hwmods = "dsp2";
			syscon-bootreg = <&scm_conf 0x560>;
			iommus = <&mmu0_dsp2>, <&mmu1_dsp2>;
			ti,rproc-standby-info = <0x4a005620>;
			status = "disabled";
		};

		vip2: vip@0x48990000 {
			compatible = "ti,vip2";
			reg = <0x48990000 0x114>,
			      <0x48995500 0xD8>,
			      <0x48995700 0x18>,
			      <0x48995800 0x80>,
			      <0x48995a00 0xD8>,
			      <0x48995c00 0x18>,
			      <0x48995d00 0x80>,
			      <0x4899d000 0x400>;
			reg-names = "vip",
				    "parser0",
				    "csc0",
				    "sc0",
				    "parser1",
				    "csc1",
				    "sc1",
				    "vpdma";
			ti,hwmods = "vip2";
			interrupts = <GIC_SPI 352 IRQ_TYPE_LEVEL_HIGH>,
				     <GIC_SPI 393 IRQ_TYPE_LEVEL_HIGH>;
			/* CTRL_CORE_SMA_SW_1 */
			syscon-pol = <&scm_conf 0x534>;
			#address-cells = <1>;
			#size-cells = <0>;
			status = "disabled";
			vin3a: port@0 {
				#address-cells = <1>;
				#size-cells = <0>;
				reg = <0>;
				status = "disabled";
			};
			vin4a: port@1 {
				#address-cells = <1>;
				#size-cells = <0>;
				reg = <1>;
				status = "disabled";
			};
			vin3b: port@2 {
				#address-cells = <1>;
				#size-cells = <0>;
				reg = <2>;
				status = "disabled";
			};
			vin4b: port@3 {
				#address-cells = <1>;
				#size-cells = <0>;
				reg = <3>;
				status = "disabled";
			};
		};

		vip3: vip@0x489b0000 {
			compatible = "ti,vip3";
			reg = <0x489b0000 0x114>,
			      <0x489b5500 0xD8>,
			      <0x489b5700 0x18>,
			      <0x489b5800 0x80>,
			      <0x489b5a00 0xD8>,
			      <0x489b5c00 0x18>,
			      <0x489b5d00 0x80>,
			      <0x489bd000 0x400>;
			reg-names = "vip",
				    "parser0",
				    "csc0",
				    "sc0",
				    "parser1",
				    "csc1",
				    "sc1",
				    "vpdma";
			ti,hwmods = "vip3";
			interrupts = <GIC_SPI 353 IRQ_TYPE_LEVEL_HIGH>,
				     <GIC_SPI 394 IRQ_TYPE_LEVEL_HIGH>;
			/* CTRL_CORE_SMA_SW_1 */
			syscon-pol = <&scm_conf 0x534>;
			#address-cells = <1>;
			#size-cells = <0>;
			status = "disabled";
			vin5a: port@0 {
				#address-cells = <1>;
				#size-cells = <0>;
				reg = <0>;
				status = "disabled";
			};
			vin6a: port@1 {
				#address-cells = <1>;
				#size-cells = <0>;
				reg = <1>;
				status = "disabled";
			};
		};
	};

	gpu-subsystem {
		compatible = "vivante,gc-gpu-subsystem";
		cores = <&bb2d>;
		status = "okay";
	};

	thermal_zones: thermal-zones {
		#include "omap4-cpu-thermal.dtsi"
		#include "omap5-gpu-thermal.dtsi"
		#include "omap5-core-thermal.dtsi"
		#include "dra7-dspeve-thermal.dtsi"
		#include "dra7-iva-thermal.dtsi"
	};

};

&cpu_thermal {
	polling-delay = <500>; /* milliseconds */
	coefficients = <0 2000>;
};

&gpu_thermal {
	coefficients = <0 2000>;
};

&core_thermal {
	coefficients = <0 2000>;
};

&dspeve_thermal {
	coefficients = <0 2000>;
};

&iva_thermal {
	coefficients = <0 2000>;
};

&dss {
	reg = <0x58000000 0x80>,
	      <0x58004054 0x4>,
	      <0x58004300 0x20>,
	      <0x58009054 0x4>,
	      <0x58009300 0x20>;
	reg-names = "dss", "pll1_clkctrl", "pll1",
		    "pll2_clkctrl", "pll2";

	clocks = <&dss_dss_clk>,
		 <&dss_video1_clk>,
		 <&dss_video2_clk>;
	clock-names = "fck", "video1_clk", "video2_clk";
};

&mailbox5 {
	mbox_ipu1_ipc3x: mbox_ipu1_ipc3x {
		ti,mbox-tx = <6 2 2>;
		ti,mbox-rx = <4 2 2>;
		status = "disabled";
	};
	mbox_dsp1_ipc3x: mbox_dsp1_ipc3x {
		ti,mbox-tx = <5 2 2>;
		ti,mbox-rx = <1 2 2>;
		status = "disabled";
	};
};

&mailbox6 {
	mbox_ipu2_ipc3x: mbox_ipu2_ipc3x {
		ti,mbox-tx = <6 2 2>;
		ti,mbox-rx = <4 2 2>;
		status = "disabled";
	};
	mbox_dsp2_ipc3x: mbox_dsp2_ipc3x {
		ti,mbox-tx = <5 2 2>;
		ti,mbox-rx = <1 2 2>;
		status = "disabled";
	};
};

&pcie1_rc {
	compatible = "ti,dra746-pcie-rc", "ti,dra7-pcie";
};

&pcie1_ep {
	compatible = "ti,dra746-pcie-ep", "ti,dra7-pcie-ep";
};

&pcie2_rc {
	compatible = "ti,dra746-pcie-rc", "ti,dra7-pcie";
};

&dra7_pmx_core {
	extcon_usb1_pins_default: extcon_usb1_pins_default {
		pinctrl-single,pins = <
			DRA7XX_CORE_IOPAD(0x3518, PIN_INPUT | MUX_MODE14) /* AG2: vin1a_d9.gpio3_13  - USR0 */
		>;
	};

	led_pins_default: led_pins_default {
		pinctrl-single,pins = <
			DRA7XX_CORE_IOPAD(0x3528, PIN_OUTPUT | MUX_MODE14) /* AF6: vin1a_d13.gpio3_17  - USR0 */
			DRA7XX_CORE_IOPAD(0x36c0, PIN_OUTPUT | MUX_MODE14) /* J11: mcasp1_axr3.gpio5_5 - USR1 */
			DRA7XX_CORE_IOPAD(0x3520, PIN_OUTPUT | MUX_MODE14) /* AG5: vin1a_d12.gpio3_15  - USR2 */
			DRA7XX_CORE_IOPAD(0x351c, PIN_OUTPUT | MUX_MODE14) /* AG3: vin1a_d10.gpio3_14  - USR3 */
			DRA7XX_CORE_IOPAD(0x3500, PIN_OUTPUT | MUX_MODE14) /* AH6: vin1a_d3.gpio3_7    - USR4 */
		>;
	};

	microsd_extra_pins_default: microsd_extra_pins_default {
		pinctrl-single,pins = <
			DRA7XX_CORE_IOPAD(0x376c, PIN_INPUT_PULLUP | MUX_MODE14) /* W7: mmc1_sdcd.gpio6_27 - MMC1_SDCD */
		>;
	};

	ethphy_extra_pins_default: ethphy_extra_pins_default {
		pinctrl-single,pins = <
			DRA7XX_CORE_IOPAD(0x34c4, PIN_OUTPUT_PULLUP | MUX_MODE14) /* N1: gpmc_advn_ale.gpio2_23 - RGMII_RST */
			DRA7XX_CORE_IOPAD(0x364c, PIN_INPUT | MUX_MODE14) /* Y1: uart3_txd.gpio5_19 - MII0_INT */
		>;
	};

	emmc_pwrseq_pins_default: emmc_pwrseq_pins_default {
		pinctrl-single,pins = <
			DRA7XX_CORE_IOPAD(0x36c8, PIN_OUTPUT_PULLUP | MUX_MODE14) /* F13: mcasp1_axr5.gpio5_7 - eMMC_RSTn */
		>;
	};

	brcmf_pwrseq_pins_default: brcmf_pwrseq_pins_default {
		pinctrl-single,pins = <
			DRA7XX_CORE_IOPAD(0x352c, PIN_OUTPUT_PULLUP | MUX_MODE14) /* AF3: vin1a_d14.gpio3_18 - WL_REG_ON */
			DRA7XX_CORE_IOPAD(0x353c, PIN_OUTPUT_PULLUP | MUX_MODE14) /* AE5: vin1a_d18.gpio3_22 - BT_REG_ON */
		>;
	};

	wifibt_extra_pins_default: wifibt_extra_pins_default {
		pinctrl-single,pins = <
			DRA7XX_CORE_IOPAD(0x3540, PIN_INPUT | MUX_MODE14) /* AE1: vin1a_d19.gpio3_23 - WL_HOST_WAKE */
			DRA7XX_CORE_IOPAD(0x3450, PIN_INPUT | MUX_MODE8) /* P6: vin1a_d20.uart6_rxd - UART6_RXD */
			DRA7XX_CORE_IOPAD(0x3454, PIN_INPUT | MUX_MODE8) /* R9: vin1a_d21.uart6_txd - UART6_TXD */
			DRA7XX_CORE_IOPAD(0x3458, PIN_INPUT | MUX_MODE8) /* R5: vin1a_d22.uart6_ctsn - UART6_CTSN */
			DRA7XX_CORE_IOPAD(0x345c, PIN_INPUT | MUX_MODE8) /* P5: vin1a_d23.uart6_rtsn - UART6_RTSN */
			DRA7XX_CORE_IOPAD(0x3534, PIN_INPUT_PULLDOWN | MUX_MODE14) /* AF1: vin1a_d16.gpio3_20 - BT_HOST_WAKE */
			DRA7XX_CORE_IOPAD(0x3538, PIN_OUTPUT_PULLDOWN | MUX_MODE14) /* AE3: vin1a_d6.gpio3_21 - BT_WAKE */
		>;
	};

	adc_pins_default: adc_pins_default {
		pinctrl-single,pins = <
			DRA7XX_CORE_IOPAD(0x3550, PIN_OUTPUT | MUX_MODE14) /* AD3: vin1a_d23.gpio3_27 - VDD_ADC_SEL */
			DRA7XX_CORE_IOPAD(0x34DC, PIN_INPUT_PULLUP | MUX_MODE14) /* AG8: vin1a_clk0.gpio2_30 - INT_ADC */
		>;
	};

	pmic_pins_default: pmic_pins_default {
		pinctrl-single,pins = <
			DRA7XX_CORE_IOPAD(0x3690, PIN_INPUT_PULLUP | MUX_MODE14) /* F21: gpio6_16.gpio6_16 - PMIC_INT */
		>;
	};

	hdmi_pins_default: hdmi_pins_default {
		pinctrl-single,pins = <
			DRA7XX_CORE_IOPAD(0x3808, PIN_INPUT | MUX_MODE1) /* C25: i2c2_sda.hdmi1_ddc_scl - HDMI_DDC_SCL */
			DRA7XX_CORE_IOPAD(0x380C, PIN_INPUT | MUX_MODE1) /* F17: i2c2_scl.hdmi1_ddc_sda - HDMI_DDC_SDA */
			DRA7XX_CORE_IOPAD(0x37BC, PIN_INPUT | MUX_MODE6) /* B20: spi1_cs3.hdmi1_cec - HDMI_DDC_CEC */
#if 0
			DRA7XX_CORE_IOPAD(0x37B8, PIN_INPUT | MUX_MODE6) /* B21: spi1_cs2.hdmi1_hpd - HDMI_DDC_HPD */
#else
			DRA7XX_CORE_IOPAD(0x37B8, PIN_INPUT | MUX_MODE14) /* B21: spi1_cs2.gpio7_12 - HDMI_DDC_HPD */
#endif
		>;
	};

	unused_pins_default: unused_pins_default {
		pinctrl-single,pins = <
			DRA7XX_CORE_IOPAD(0x3400, MUX_MODE15) /* M6: sysboot0 */
			DRA7XX_CORE_IOPAD(0x3404, MUX_MODE15) /* M2: sysboot1 */
			DRA7XX_CORE_IOPAD(0x3408, MUX_MODE15) /* L5: sysboot2 */
			DRA7XX_CORE_IOPAD(0x340C, MUX_MODE15) /* M1: sysboot3 */
			DRA7XX_CORE_IOPAD(0x3410, MUX_MODE15) /* L6: sysboot4 */
			DRA7XX_CORE_IOPAD(0x3414, MUX_MODE15) /* L4: sysboot5 */
			DRA7XX_CORE_IOPAD(0x3418, MUX_MODE15) /* L3: sysboot6 */
			DRA7XX_CORE_IOPAD(0x341C, MUX_MODE15) /* L2: sysboot7 */
			DRA7XX_CORE_IOPAD(0x3420, MUX_MODE15) /* L1: sysboot8 */
			DRA7XX_CORE_IOPAD(0x3424, MUX_MODE15) /* K2: sysboot9 */
			DRA7XX_CORE_IOPAD(0x3428, MUX_MODE15) /* J1: sysboot10 */
			DRA7XX_CORE_IOPAD(0x342C, MUX_MODE15) /* J2: sysboot11 */
			DRA7XX_CORE_IOPAD(0x3430, MUX_MODE15) /* H1: sysboot12 */
			DRA7XX_CORE_IOPAD(0x3434, MUX_MODE15) /* J3: sysboot13 */
			DRA7XX_CORE_IOPAD(0x3438, MUX_MODE15) /* H2: sysboot14 */
			DRA7XX_CORE_IOPAD(0x343C, MUX_MODE15) /* H3: sysboot15 */

			DRA7XX_CORE_IOPAD(0x3448, MUX_MODE15) /* T6: N/C */
			DRA7XX_CORE_IOPAD(0x344C, MUX_MODE15) /* T7: N/C */

			DRA7XX_CORE_IOPAD(0x3460, MUX_MODE15) /* N7: N/C */
			DRA7XX_CORE_IOPAD(0x3464, MUX_MODE15) /* R4: N/C */
			DRA7XX_CORE_IOPAD(0x3468, MUX_MODE15) /* N9: N/C */
			DRA7XX_CORE_IOPAD(0x346C, MUX_MODE15) /* P9: N/C */
			DRA7XX_CORE_IOPAD(0x3470, MUX_MODE15) /* P4: N/C */
			DRA7XX_CORE_IOPAD(0x3474, MUX_MODE15) /* R3: N/C */
			DRA7XX_CORE_IOPAD(0x3478, MUX_MODE15) /* T2: N/C */
			DRA7XX_CORE_IOPAD(0x347C, MUX_MODE15) /* U2: N/C */
			DRA7XX_CORE_IOPAD(0x3480, MUX_MODE15) /* U1: N/C */
			DRA7XX_CORE_IOPAD(0x3484, MUX_MODE15) /* P3: N/C */
			DRA7XX_CORE_IOPAD(0x3488, MUX_MODE15) /* R2: N/C */

			DRA7XX_CORE_IOPAD(0x34B4, MUX_MODE15) /* T1: N/C */
			DRA7XX_CORE_IOPAD(0x34B8, MUX_MODE15) /* P2: N/C */
			DRA7XX_CORE_IOPAD(0x34BC, MUX_MODE15) /* P1: N/C */
			DRA7XX_CORE_IOPAD(0x34C0, MUX_MODE15) /* P7: N/C */
			DRA7XX_CORE_IOPAD(0x34C4, MUX_MODE15) /* N1: N/C */
			DRA7XX_CORE_IOPAD(0x34C8, MUX_MODE15) /* M5: N/C */
			DRA7XX_CORE_IOPAD(0x34CC, MUX_MODE15) /* M3: N/C */
			DRA7XX_CORE_IOPAD(0x34D0, MUX_MODE15) /* N6: N/C */
			DRA7XX_CORE_IOPAD(0x34D4, MUX_MODE15) /* M4: N/C */
			DRA7XX_CORE_IOPAD(0x34D8, MUX_MODE15) /* N2: N/C */

			DRA7XX_CORE_IOPAD(0x34E0, MUX_MODE15) /* AH7: N/C */

			DRA7XX_CORE_IOPAD(0x34EC, MUX_MODE15) /* AE9: N/C */

			DRA7XX_CORE_IOPAD(0x34F4, MUX_MODE15) /* AE8: N/C */
			DRA7XX_CORE_IOPAD(0x34F8, MUX_MODE15) /* AD8: N/C */
			DRA7XX_CORE_IOPAD(0x34FC, MUX_MODE15) /* AG7: N/C */

			DRA7XX_CORE_IOPAD(0x3504, MUX_MODE15) /* AH3: N/C */
			DRA7XX_CORE_IOPAD(0x3508, MUX_MODE15) /* AH5: N/C */

			DRA7XX_CORE_IOPAD(0x3524, MUX_MODE15) /* AF2: N/C */

			DRA7XX_CORE_IOPAD(0x3530, MUX_MODE15) /* AF4: N/C */

			DRA7XX_CORE_IOPAD(0x354C, MUX_MODE15) /* AD2: N/C */

			DRA7XX_CORE_IOPAD(0x3554, MUX_MODE15) /* E1: N/C */
			DRA7XX_CORE_IOPAD(0x3558, MUX_MODE15) /* G2: N/C */
			DRA7XX_CORE_IOPAD(0x355C, MUX_MODE15) /* H7: N/C */
			DRA7XX_CORE_IOPAD(0x3560, MUX_MODE15) /* G1: N/C */

			DRA7XX_CORE_IOPAD(0x356C, MUX_MODE15) /* F3: N/C */

			DRA7XX_CORE_IOPAD(0x3574, MUX_MODE15) /* E2: N/C */

			DRA7XX_CORE_IOPAD(0x3584, MUX_MODE15) /* E4: N/C */

			DRA7XX_CORE_IOPAD(0x3594, MUX_MODE15) /* F6: N/C */

			DRA7XX_CORE_IOPAD(0x35A4, MUX_MODE15) /* C4: N/C */
			DRA7XX_CORE_IOPAD(0x35A8, MUX_MODE15) /* B2: N/C */

			DRA7XX_CORE_IOPAD(0x35C0, MUX_MODE15) /* B5: N/C */
			DRA7XX_CORE_IOPAD(0x35C4, MUX_MODE15) /* A4: N/C */

			DRA7XX_CORE_IOPAD(0x35D0, MUX_MODE15) /* B11: N/C */

			DRA7XX_CORE_IOPAD(0x3644, MUX_MODE15) /* U3: N/C */

			DRA7XX_CORE_IOPAD(0x3680, MUX_MODE15) /* AB10: N/C */

			DRA7XX_CORE_IOPAD(0x36BC, MUX_MODE15) /* G13: N/C */

			DRA7XX_CORE_IOPAD(0x36C4, MUX_MODE15) /* E12: N/C */

			DRA7XX_CORE_IOPAD(0x36CC, MUX_MODE15) /* C12: N/C */
			DRA7XX_CORE_IOPAD(0x36D0, MUX_MODE15) /* D12: N/C */

			DRA7XX_CORE_IOPAD(0x36FC, MUX_MODE15) /* E15: N/C */
			DRA7XX_CORE_IOPAD(0x3700, MUX_MODE15) /* A20: N/C */

			DRA7XX_CORE_IOPAD(0x370C, MUX_MODE15) /* C15: N/C */
			DRA7XX_CORE_IOPAD(0x3710, MUX_MODE15) /* A16: N/C */
			DRA7XX_CORE_IOPAD(0x3714, MUX_MODE15) /* D15: N/C */
			DRA7XX_CORE_IOPAD(0x3718, MUX_MODE15) /* B16: N/C */
			DRA7XX_CORE_IOPAD(0x371C, MUX_MODE15) /* B17: N/C */
			DRA7XX_CORE_IOPAD(0x3720, MUX_MODE15) /* A17: N/C */
			DRA7XX_CORE_IOPAD(0x3724, MUX_MODE15) /* B18: N/C */
			DRA7XX_CORE_IOPAD(0x3728, MUX_MODE15) /* F15: N/C */

			DRA7XX_CORE_IOPAD(0x3744, MUX_MODE15) /* AA3: N/C */
			DRA7XX_CORE_IOPAD(0x3748, MUX_MODE15) /* AB9: N/C */
			DRA7XX_CORE_IOPAD(0x374C, MUX_MODE15) /* AB3: N/C */
			DRA7XX_CORE_IOPAD(0x3750, MUX_MODE15) /* AA4: N/C */

			DRA7XX_CORE_IOPAD(0x3770, MUX_MODE15) /* Y9: N/C */
			DRA7XX_CORE_IOPAD(0x3774, MUX_MODE15) /* AC5: N/C */
			DRA7XX_CORE_IOPAD(0x3778, MUX_MODE15) /* AB4: N/C */

			DRA7XX_CORE_IOPAD(0x37A4, MUX_MODE15) /* A25: N/C */
			DRA7XX_CORE_IOPAD(0x37A8, MUX_MODE15) /* F16: N/C */
			DRA7XX_CORE_IOPAD(0x37AC, MUX_MODE15) /* B25: N/C */
			DRA7XX_CORE_IOPAD(0x37B0, MUX_MODE15) /* A24: N/C */

			DRA7XX_CORE_IOPAD(0x37D0, MUX_MODE15) /* G20: N/C */
			DRA7XX_CORE_IOPAD(0x37D4, MUX_MODE15) /* G19: N/C */

			DRA7XX_CORE_IOPAD(0x3818, MUX_MODE15) /* AD17: N/C */
			DRA7XX_CORE_IOPAD(0x381C, MUX_MODE15) /* AC17: N/C */
			DRA7XX_CORE_IOPAD(0x3820, MUX_MODE15) /* AB16: N/C */
			DRA7XX_CORE_IOPAD(0x3824, MUX_MODE15) /* AC16: N/C */
		>;
	};

	cape_pins_default: cape_pins_default {
		pinctrl-single,pins = <
			DRA7XX_CORE_IOPAD(0x379C, MUX_MODE15) /* AB8: P8.3: mmc3_dat6.off */
			DRA7XX_CORE_IOPAD(0x37A0, MUX_MODE15) /* AB5: P8.4: mmc3_dat7.off */
			DRA7XX_CORE_IOPAD(0x378C, MUX_MODE15) /* AC9: P8.5: mmc3_dat2.off */
			DRA7XX_CORE_IOPAD(0x3790, MUX_MODE15) /* AC3: P8.6: mmc3_dat3.off */
			DRA7XX_CORE_IOPAD(0x36EC, MUX_MODE15) /* G14: P8.7: mcasp1_axr14.off */
			DRA7XX_CORE_IOPAD(0x36F0, MUX_MODE15) /* F14: P8.8: mcasp1_axr15.off */
			DRA7XX_CORE_IOPAD(0x3698, MUX_MODE15) /* E17: P8.9: xref_clk1.off */
			DRA7XX_CORE_IOPAD(0x36E8, MUX_MODE15) /* A13: P8.10: mcasp1_axr13.off */
			DRA7XX_CORE_IOPAD(0x3510, MUX_MODE15) /* AH4: P8.11: vin1a_d7.off */
			DRA7XX_CORE_IOPAD(0x350C, MUX_MODE15) /* AG6: P8.12: vin1a_d6.off */
			DRA7XX_CORE_IOPAD(0x3590, MUX_MODE15) /* D3: P8.13: vin2a_d10.off */
			DRA7XX_CORE_IOPAD(0x3598, MUX_MODE15) /* D5: P8.14: vin2a_d12.off */
			DRA7XX_CORE_IOPAD(0x3570, MUX_MODE15) /* D1: P8.15a: vin2a_d2.off */
			DRA7XX_CORE_IOPAD(0x35B4, MUX_MODE15) /* A3: P8.15b: vin2a_d19.off */
			DRA7XX_CORE_IOPAD(0x35BC, MUX_MODE15) /* B4: P8.16: vin2a_d21.off */
			DRA7XX_CORE_IOPAD(0x3624, MUX_MODE15) /* A7: P8.17: vout1_d18.off */
			DRA7XX_CORE_IOPAD(0x3588, MUX_MODE15) /* F5: P8.18: vin2a_d8.off */
			DRA7XX_CORE_IOPAD(0x358C, MUX_MODE15) /* E6: P8.19: vin2a_d9.off */
			DRA7XX_CORE_IOPAD(0x3780, MUX_MODE15) /* AC4: P8.20: mmc3_cmd.off */
			DRA7XX_CORE_IOPAD(0x377C, MUX_MODE15) /* AD4: P8.21: mmc3_clk.off */
			DRA7XX_CORE_IOPAD(0x3798, MUX_MODE15) /* AD6: P8.22: mmc3_dat5.off */
			DRA7XX_CORE_IOPAD(0x3794, MUX_MODE15) /* AC8: P8.23: mmc3_dat4.off */
			DRA7XX_CORE_IOPAD(0x3788, MUX_MODE15) /* AC6: P8.24: mmc3_dat1.off */
			DRA7XX_CORE_IOPAD(0x3784, MUX_MODE15) /* AC7: P8.25: mmc3_dat0.off */
			DRA7XX_CORE_IOPAD(0x35B8, MUX_MODE15) /* B3: P8.26: vin2a_d20.off */
			DRA7XX_CORE_IOPAD(0x35D8, MUX_MODE15) /* E11: P8.27a: vout1_vsync.off */
			DRA7XX_CORE_IOPAD(0x3628, MUX_MODE15) /* A8: P8.27b: vout1_d19.off */
			DRA7XX_CORE_IOPAD(0x35C8, MUX_MODE15) /* D11: P8.28a: vout1_clk.off */
			DRA7XX_CORE_IOPAD(0x362C, MUX_MODE15) /* C9: P8.28b: vout1_d20.off */
			DRA7XX_CORE_IOPAD(0x35D4, MUX_MODE15) /* C11: P8.29a: vout1_hsync.off */
			DRA7XX_CORE_IOPAD(0x3630, MUX_MODE15) /* A9: P8.29b: vout1_d21.off */
			DRA7XX_CORE_IOPAD(0x35CC, MUX_MODE15) /* B10: P8.30a: vout1_de.off */
			DRA7XX_CORE_IOPAD(0x3634, MUX_MODE15) /* B9: P8.30b: vout1_d22.off */
			DRA7XX_CORE_IOPAD(0x3614, MUX_MODE15) /* C8: P8.31a: vout1_d14.off */
			DRA7XX_CORE_IOPAD(0x373C, MUX_MODE15) /* G16: P8.31b: mcasp4_axr0.off */
			DRA7XX_CORE_IOPAD(0x3618, MUX_MODE15) /* C7: P8.32a: vout1_d15.off */
			DRA7XX_CORE_IOPAD(0x3740, MUX_MODE15) /* D17: P8.32b: mcasp4_axr1.off */
			DRA7XX_CORE_IOPAD(0x3610, MUX_MODE15) /* C6: P8.33a: vout1_d13.off */
			DRA7XX_CORE_IOPAD(0x34E8, MUX_MODE15) /* AF9: P8.33b: vin1a_fld0.off */
			DRA7XX_CORE_IOPAD(0x3608, MUX_MODE15) /* D8: P8.34a: vout1_d11.off */
			DRA7XX_CORE_IOPAD(0x3564, MUX_MODE15) /* G6: P8.34b: vin2a_vsync0.off */
			DRA7XX_CORE_IOPAD(0x360C, MUX_MODE15) /* A5: P8.35a: vout1_d12.off */
			DRA7XX_CORE_IOPAD(0x34E4, MUX_MODE15) /* AD9: P8.35b: vin1a_de0.off */
			DRA7XX_CORE_IOPAD(0x3604, MUX_MODE15) /* D7: P8.36a: vout1_d10.off */
			DRA7XX_CORE_IOPAD(0x3568, MUX_MODE15) /* F2: P8.36b: vin2a_d0.off */
			DRA7XX_CORE_IOPAD(0x35FC, MUX_MODE15) /* E8: P8.37a: vout1_d8.off */
			DRA7XX_CORE_IOPAD(0x3738, MUX_MODE15) /* A21: P8.37b: mcasp4_fsx.off */
			DRA7XX_CORE_IOPAD(0x3600, MUX_MODE15) /* D9: P8.38a: vout1_d9.off */
			DRA7XX_CORE_IOPAD(0x3734, MUX_MODE15) /* C18: P8.38b: mcasp4_aclkx.off */
			DRA7XX_CORE_IOPAD(0x35F4, MUX_MODE15) /* F8: P8.39: vout1_d6.off */
			DRA7XX_CORE_IOPAD(0x35F8, MUX_MODE15) /* E7: P8.40: vout1_d7.off */
			DRA7XX_CORE_IOPAD(0x35EC, MUX_MODE15) /* E9: P8.41: vout1_d4.off */
			DRA7XX_CORE_IOPAD(0x35F0, MUX_MODE15) /* F9: P8.42: vout1_d5.off */
			DRA7XX_CORE_IOPAD(0x35E4, MUX_MODE15) /* F10: P8.43: vout1_d2.off */
			DRA7XX_CORE_IOPAD(0x35E8, MUX_MODE15) /* G11: P8.44: vout1_d3.off */
			DRA7XX_CORE_IOPAD(0x35DC, MUX_MODE15) /* F11: P8.45a: vout1_d0.off */
			DRA7XX_CORE_IOPAD(0x361C, MUX_MODE15) /* B7: P8.45b: vout1_d16.off */
			DRA7XX_CORE_IOPAD(0x35E0, MUX_MODE15) /* G10: P8.46a: vout1_d1.off */
			DRA7XX_CORE_IOPAD(0x3638, MUX_MODE15) /* A10: P8.46b: vout1_d23.off */
			DRA7XX_CORE_IOPAD(0x3620, MUX_MODE15) /* B8: P9.11a: vout1_d17.off */
			DRA7XX_CORE_IOPAD(0x372C, MUX_MODE15) /* B19: P9.11b: mcasp3_axr0.off */
			DRA7XX_CORE_IOPAD(0x36AC, MUX_MODE15) /* B14: P9.12: mcasp1_aclkr.off */
			DRA7XX_CORE_IOPAD(0x3680, MUX_MODE15) /* AB10: P9.13a: usb1_drvvbus.off */
			DRA7XX_CORE_IOPAD(0x3730, MUX_MODE15) /* C17: P9.13b: mcasp3_axr1.off */
			DRA7XX_CORE_IOPAD(0x35AC, MUX_MODE15) /* D6: P9.14: vin2a_d17.off */
			DRA7XX_CORE_IOPAD(0x3514, MUX_MODE15) /* AG4: P9.15: vin1a_d8.off */
			DRA7XX_CORE_IOPAD(0x35B0, MUX_MODE15) /* C5: P9.16: vin2a_d18.off */
			DRA7XX_CORE_IOPAD(0x37CC, MUX_MODE15) /* B24: P9.17a: spi2_cs0.off */
			DRA7XX_CORE_IOPAD(0x36B8, MUX_MODE15) /* F12: P9.17b: mcasp1_axr1.off */
			DRA7XX_CORE_IOPAD(0x37C8, MUX_MODE15) /* G17: P9.18a: spi2_d0.off */
			DRA7XX_CORE_IOPAD(0x36B4, MUX_MODE15) /* G12: P9.18b: mcasp1_axr0.off */
			DRA7XX_CORE_IOPAD(0x3440, PIN_INPUT_PULLUP | MUX_MODE7) /* R6: P9.19a: gpmc_a0.i2c4_scl */
			DRA7XX_CORE_IOPAD(0x357C, PIN_INPUT_PULLUP | MUX_MODE12 ) /* F4: P9.19b: vin2a_d5.pr1_pru1_gpi2 */
			DRA7XX_CORE_IOPAD(0x3444, PIN_INPUT_PULLUP | MUX_MODE7) /* T9: P9.20a: gpmc_a1.i2c4_sda */
			DRA7XX_CORE_IOPAD(0x3578, PIN_INPUT_PULLUP | MUX_MODE12) /* D2: P9.20b: vin2a_d4.pr1_pru1_gpi1 */
			DRA7XX_CORE_IOPAD(0x34F0, MUX_MODE15) /* AF8: P9.21a: vin1a_vsync0.off */
			DRA7XX_CORE_IOPAD(0x37C4, MUX_MODE15) /* B22: P9.21b: spi2_d1.off */
			DRA7XX_CORE_IOPAD(0x369C, MUX_MODE15) /* B26: P9.22a: xref_clk2.off */
			DRA7XX_CORE_IOPAD(0x37C0, MUX_MODE15) /* A26: P9.22b: spi2_sclk.off */
			DRA7XX_CORE_IOPAD(0x37B4, MUX_MODE15) /* A22: P9.23: spi1_cs1.off */
			DRA7XX_CORE_IOPAD(0x368C, MUX_MODE15) /* F20: P9.24: gpio6_15.off */
			//DRA7XX_CORE_IOPAD(0x3694, MUX_MODE15) /* D18: P9.25: xref_clk0.off */
			DRA7XX_CORE_IOPAD(0x3688, MUX_MODE15) /* E21: P9.26a: gpio6_14.off */
			DRA7XX_CORE_IOPAD(0x3544, MUX_MODE15) /* AE2: P9.26b: vin1a_d20.off */
			DRA7XX_CORE_IOPAD(0x35A0, MUX_MODE15) /* C3: P9.27a: vin2a_d14.off */
			DRA7XX_CORE_IOPAD(0x36B0, MUX_MODE15) /* J14: P9.27b: mcasp1_fsr.off */
			//DRA7XX_CORE_IOPAD(0x36E0, MUX_MODE15) /* A12: P9.28: mcasp1_axr11.off */
			//DRA7XX_CORE_IOPAD(0x36D8, MUX_MODE15) /* A11: P9.29a: mcasp1_axr9.off */
			//DRA7XX_CORE_IOPAD(0x36A8, MUX_MODE15) /* D14: P9.29b: mcasp1_fsx.off */
			//DRA7XX_CORE_IOPAD(0x36DC, MUX_MODE15) /* B13: P9.30: mcasp1_axr10.off */
			//DRA7XX_CORE_IOPAD(0x36D4, MUX_MODE15) /* B12: P9.31a: mcasp1_axr8.off */
			//DRA7XX_CORE_IOPAD(0x36A4, MUX_MODE15) /* C14: P9.31b: mcasp1_aclkx.off */
			DRA7XX_CORE_IOPAD(0x36A0, MUX_MODE15) /* C23: P9.41a: xref_clk3.off */
			DRA7XX_CORE_IOPAD(0x3580, MUX_MODE15) /* C1: P9.41b: vin2a_d6.off */
			DRA7XX_CORE_IOPAD(0x36E4, MUX_MODE15) /* E14: P9.42a: mcasp1_axr12.off */
			DRA7XX_CORE_IOPAD(0x359C, MUX_MODE15) /* C2: P9.42b: vin2a_d13.off */

#ifdef BELA
// bela pins
/* BELA0 */ DRA7XX_CORE_IOPAD(0x3694, PIN_OUTPUT_PULLDOWN | MUX_MODE3) /* D18: P9.25: xref_clk0.off */  //mcasp0_ahclkx mcasp1_ahclkx MODE3
/* BELA1 */ DRA7XX_CORE_IOPAD(0x36E0, PIN_INPUT_PULLDOWN | MUX_MODE0) /* A12: P9.28: mcasp1_axr11.off */ //mcasp0_axr2 mcasp1_axr11 MODE0
/* BELA2 */ DRA7XX_CORE_IOPAD(0x36D8, PIN_INPUT | MUX_MODE15) /* A11: P9.29a: mcasp1_axr9.off */ //mcasp0_fsx off MODE15

/* BELA3 */ DRA7XX_CORE_IOPAD(0x36A8, PIN_INPUT_PULLDOWN | MUX_MODE0) /* D14: P9.29b: mcasp1_fsx.off */ //mcasp0_fsx mcasp1_fsx MODE0
/* BELA4 */ DRA7XX_CORE_IOPAD(0x36DC, PIN_INPUT_PULLDOWN | MUX_MODE0) /* B13: P9.30: mcasp1_axr10.off */ //mcasp0_axr0 mcasp1_axr10 MODE0
/* BELA5 */ DRA7XX_CORE_IOPAD(0x36D4, PIN_INPUT | MUX_MODE15) /* B12: P9.31a: mcasp1_axr8.off */ // mcasp0_aclkx off MODE15
/* BELA6 */ DRA7XX_CORE_IOPAD(0x36A4, PIN_INPUT_PULLDOWN | MUX_MODE0) /* C14: P9.31b: mcasp1_aclkx.off */ // mcasp0_aclkx mcasp1_aclkx MODE0
#endif /* BELA */
		>;
	};
};

&i2c1 {
	status = "okay";
	clock-frequency = <400000>;

	tps659038: tps659038@58 {
		compatible = "ti,tps659038";
		reg = <0x58>;
		interrupt-parent = <&gpio6>;
		interrupts = <16 IRQ_TYPE_LEVEL_LOW>;

		pinctrl-names = "default";
		pinctrl-0 = <&pmic_pins_default>;

		#interrupt-cells = <2>;
		interrupt-controller;

		ti,system-power-controller;
		ti,palmas-override-powerhold;

		tps659038_pmic {
			compatible = "ti,tps659038-pmic";

			smps12-in-supply = <&vdd_5v>;
			smps3-in-supply = <&vdd_5v>;
			smps45-in-supply = <&vdd_5v>;
			smps6-in-supply = <&vdd_5v>;
			smps7-in-supply = <&vdd_5v>;
			mps3-in-supply = <&vdd_5v>;
			smps8-in-supply = <&vdd_5v>;
			smps9-in-supply = <&vdd_5v>;
			ldo1-in-supply = <&vdd_5v>;
			ldo2-in-supply = <&vdd_5v>;
			ldo3-in-supply = <&vdd_5v>;
			ldo4-in-supply = <&vdd_5v>;
			ldo9-in-supply = <&vdd_5v>;
			ldoln-in-supply = <&vdd_5v>;
			ldousb-in-supply = <&vdd_5v>;
			ldortc-in-supply = <&vdd_5v>;

			regulators {
				vdd_mpu: smps12 {
					/* VDD_MPU */
					regulator-name = "smps12";
					regulator-min-microvolt = <850000>;
					regulator-max-microvolt = <1250000>;
					regulator-always-on;
					regulator-boot-on;
				};

				vdd_ddr: smps3 {
					/* VDD_DDR EMIF1 EMIF2 */
					regulator-name = "smps3";
					regulator-min-microvolt = <1350000>;
					regulator-max-microvolt = <1350000>;
					regulator-always-on;
					regulator-boot-on;
				};

				vdd_dspeve: smps45 {
					/* VDD_DSPEVE on AM572 */
					regulator-name = "smps45";
					regulator-min-microvolt = < 850000>;
					regulator-max-microvolt = <1250000>;
					regulator-always-on;
					regulator-boot-on;
				};

				vdd_gpu: smps6 {
					/* VDD_GPU */
					regulator-name = "smps6";
					regulator-min-microvolt = < 850000>;
					regulator-max-microvolt = <1250000>;
					regulator-always-on;
					regulator-boot-on;
				};

				vdd_core: smps7 {
					/* VDD_CORE */
					regulator-name = "smps7";
					regulator-min-microvolt = < 850000>;	/*** 1.15V */
					regulator-max-microvolt = <1150000>;
					regulator-always-on;
					regulator-boot-on;
				};

				vdd_iva: smps8 {
					/* VDD_IVAHD */				/*** 1.06V */
					regulator-name = "smps8";
				};

				vdd_3v3: smps9 {
					/* VDD_3V3 */
					regulator-name = "smps9";
					regulator-min-microvolt = <3300000>;
					regulator-max-microvolt = <3300000>;
					regulator-always-on;
					regulator-boot-on;
				};

				vdd_sd: ldo1 {
					/* VDDSHV8 - VSDMMC  */
					regulator-name = "ldo1";
					regulator-min-microvolt = <1800000>;
					regulator-max-microvolt = <3300000>;
					regulator-boot-on;
					regulator-always-on;
				};

				vdd_1v8: ldo2 {
					/* VDDSH18V */
					regulator-name = "ldo2";
					regulator-min-microvolt = <1800000>;
					regulator-max-microvolt = <1800000>;
					regulator-always-on;
					regulator-boot-on;
				};

				vdd_1v8_phy_ldo3: ldo3 {
					/* R1.3a 572x V1_8PHY_LDO3: USB, SATA */
					regulator-name = "ldo3";
					regulator-min-microvolt = <1800000>;
					regulator-max-microvolt = <1800000>;
					regulator-always-on;
					regulator-boot-on;
				};

				vdd_1v8_phy_ldo4: ldo4 {
					/* R1.3a 572x V1_8PHY_LDO4: PCIE, HDMI*/
					regulator-name = "ldo4";
					regulator-min-microvolt = <1800000>;
					regulator-max-microvolt = <1800000>;
					regulator-always-on;
					regulator-boot-on;
				};

				/* LDO5-8 unused */

				vdd_rtc: ldo9 {
					/* VDD_RTC  */
					regulator-name = "ldo9";
					regulator-min-microvolt = < 840000>;
					regulator-max-microvolt = <1160000>;
					regulator-always-on;
					regulator-boot-on;
				};

				vdd_1v8_pll: ldoln {
					/* VDDA_1V8_PLL */
					regulator-name = "ldoln";
					regulator-min-microvolt = <1800000>;
					regulator-max-microvolt = <1800000>;
					regulator-always-on;
					regulator-boot-on;
				};

				ldousb_reg: ldousb {
					/* VDDA_3V_USB: VDDA_USBHS33 */
					regulator-name = "ldousb";
					regulator-min-microvolt = <3300000>;
					regulator-max-microvolt = <3300000>;
					regulator-always-on;
					regulator-boot-on;
				};

				ldortc_reg: ldortc {
					/* VDDA_RTC  */
					regulator-name = "ldortc";
					regulator-min-microvolt = <1800000>;
					regulator-max-microvolt = <1800000>;
					regulator-always-on;
					regulator-boot-on;
				};

				regen1: regen1 {
					/* VDD_3V3_ON */
					regulator-name = "regen1";
					regulator-boot-on;
					regulator-always-on;
				};

				regen2: regen2 {
					/* Needed for PMIC internal resource */
					regulator-name = "regen2";
					regulator-boot-on;
					regulator-always-on;
				};
			};
		};

		tps659038_rtc: tps659038_rtc {
			compatible = "ti,palmas-rtc";
			interrupt-parent = <&tps659038>;
			interrupts = <8 IRQ_TYPE_EDGE_FALLING>;
			wakeup-source;
		};

		tps659038_pwr_button: tps659038_pwr_button {
			compatible = "ti,palmas-pwrbutton";
			interrupt-parent = <&tps659038>;
			interrupts = <1 IRQ_TYPE_EDGE_FALLING>;
			wakeup-source;
			ti,palmas-long-press-seconds = <12>;
		};

		tps659038_gpio: tps659038_gpio {
			compatible = "ti,palmas-gpio";
			gpio-controller;
			#gpio-cells = <2>;
		};
	};

	/* STMPE811 touch screen controller */
	stmpe811@41 {
		compatible = "st,stmpe811";
		reg = <0x41>;
		interrupts = <30 IRQ_TYPE_LEVEL_LOW>;
		interrupt-parent = <&gpio2>;
		interrupt-controller;
		id = <0>;
		blocks = <0x5>;
		irq-trigger = <0x1>;
		st,mod-12b = <1>; /* 12-bit ADC */
		st,ref-sel = <0>; /* internal ADC reference */
		st,adc-freq = <1>; /* 3.25 MHz ADC clock speed */
		st,sample-time = <4>; /* ADC converstion time: 80 clocks */

		pinctrl-names = "default";
		pinctrl-0 = <&adc_pins_default>;

		stmpe_adc {
			compatible = "st,stmpe-adc";
			st,norequest-mask = <0x00>; /* mask any channels to be used by touchscreen */
		};

		stmpe_touchscreen {
			status = "disabled";
			compatible = "st,stmpe-ts";
			/* 8 sample average control */
			st,ave-ctrl = <3>;
			/* 7 length fractional part in z */
			st,fraction-z = <7>;
			/*
			 * 50 mA typical 80 mA max touchscreen drivers
			 * current limit value
			 */
			st,i-drive = <1>;
			/* 1 ms panel driver settling time */
			st,settling = <3>;
			/* 5 ms touch detect interrupt delay */
			st,touch-det-delay = <5>;
		};

		stmpe_gpio {
			compatible = "st,stmpe-gpio";
		};

		stmpe_pwm {
			compatible = "st,stmpe-pwm";
			#pwm-cells = <2>;
		};
	};
};

&cpu0 {
	vdd-supply = <&vdd_mpu>;
	voltage-tolerance = <1>;
};

&uart1 {
	status = "okay";
};

&davinci_mdio {
	reset-gpios = <&gpio2 23 GPIO_ACTIVE_LOW>;
	reset-delay-us = <2>;

	phy0: ethernet-phy@1 {
		reg = <4>;
		compatible = "ethernet-phy-id004d.d072",
			"ethernet-phy-ieee802.3-c22";
		eee-broken-100tx;
		eee-broken-1000t;
		//interrupt-parent = <&gpio5>;
		//interrupts = <19 IRQ_TYPE_EDGE_RISING>;
	};
};

&mac {
	slaves = <1>;
	status = "okay";
	//dual_emac;
};

&cpsw_emac0 {
	phy-handle = <&phy0>;
	phy-mode = "rgmii";
	//dual_emac_res_vlan = <1>;
};

&mmc1 {
	status = "okay";
	vmmc-supply = <&vdd_3v3>;
	vqmmc-supply = <&vdd_sd>; /* 4.14 */
	vmmc_aux-supply = <&vdd_sd>; /* 4.9 */
	bus-width = <4>;
	cd-gpios = <&gpio6 27 GPIO_ACTIVE_LOW>; /* gpio 219 */

	ti,needs-special-reset;
	ti,dual-volt;
	sd-uhs-sdr12;
	sd-uhs-sdr25;
	sd-uhs-sdr50;
	sd-uhs-ddr50;
	sd-uhs-sdr104;
	mmc-hs200-1_8v;
	cap-sd-highspeed;
	cap-mmc-highspeed;
	dmas = <&sdma_xbar 61>, <&sdma_xbar 62>;
	dma-names = "tx", "rx";

	pinctrl-names = "default", "hs", "sdr12", "sdr25", "sdr50", "ddr50", "sdr104";
	pinctrl-0 = <&mmc1_pins_default &microsd_extra_pins_default>;
	pinctrl-1 = <&mmc1_pins_hs &microsd_extra_pins_default>;
	pinctrl-2 = <&mmc1_pins_sdr12 &microsd_extra_pins_default>;
	pinctrl-3 = <&mmc1_pins_sdr25 &microsd_extra_pins_default>;
	pinctrl-4 = <&mmc1_pins_sdr50 &microsd_extra_pins_default>;
	pinctrl-5 = <&mmc1_pins_ddr50 &mmc1_iodelay_ddr_rev20_conf &microsd_extra_pins_default>;
	pinctrl-6 = <&mmc1_pins_sdr104 &mmc1_iodelay_sdr104_rev20_conf &microsd_extra_pins_default>;
};

&mmc2 {
	status = "okay";
	vmmc-supply = <&vdd_1v8>;
	vqmmc-supply = <&vdd_1v8>; /* 4.14 */
	vmmc_aux-supply = <&vdd_1v8>; /* 4.9 */
	bus-width = <8>;
	ti,non-removable;
	non-removable;
	mmc-pwrseq = <&emmc_pwrseq>;

	ti,needs-special-reset;
	dmas = <&sdma_xbar 47>, <&sdma_xbar 48>;
	dma-names = "tx", "rx";

	pinctrl-names = "default", "hs", "ddr_1_8v", "hs200_1_8v";
	pinctrl-0 = <&mmc2_pins_default>;
	pinctrl-1 = <&mmc2_pins_hs>;
	pinctrl-2 = <&mmc2_pins_ddr_rev20>;
	pinctrl-3 = <&mmc2_pins_hs200>;
};

&mmc4 {
	/* DS: Default speed (DS) up to 25 MHz, including 1- and 4-bit modes (3.3 V signaling). */
	/* HS: High speed up to 50 MHz (3.3 V signaling). */
	/* SDR12: SDR up to 25 MHz (1.8 V signaling). */
	/* SDR25: SDR up to 50 MHz (1.8 V signaling). */
	/* SDR50: SDR up to 100 MHz (1.8 V signaling). */
	/* SDR104: SDR up to 208 MHz (1.8 V signaling) */
	/* DDR50: DDR up to 50 MHz (1.8 V signaling). */
	status = "okay";

	pinctrl-names = "default", "hs";
	pinctrl-0 = <&mmc4_pins_default &wifibt_extra_pins_default>;
	pinctrl-1 = <&mmc4_pins_hs &wifibt_extra_pins_default>;

	ti,needs-special-reset;
	vmmc-supply = <&vdd_3v3>;
	cap-power-off-card;
	keep-power-in-suspend;
	bus-width = <4>;
	ti,non-removable;
	non-removable;
	no-1-8-v;
	max-frequency = <24000000>;

	#address-cells = <1>;
	#size-cells = <0>;
	mmc-pwrseq = <&brcmf_pwrseq>;

#if 0
	brcmf: wifi@1 {
		status = "disabled";
		reg = <1>;
		compatible = "brcm,bcm4329-fmac";

		//brcm,drive-strength = <10>;
		//brcm,broken-sg-support;
		brcm,sd-head-align = <4>;
		brcm,sd_sgentry_align = <512>;

		interrupt-parent = <&gpio3>;
		interrupts = <23 IRQ_TYPE_EDGE_FALLING>;
		interrupt-names = "host-wake";
	};
#endif
};

&usb2_phy1 {
	phy-supply = <&ldousb_reg>;
};

&usb2_phy2 {
	phy-supply = <&ldousb_reg>;
};

&usb1 {
	status = "okay";
	dr_mode = "otg";
};

&omap_dwc3_1 {
	extcon = <&extcon_usb1>;
};

&usb2 {
	status = "okay";
	dr_mode = "host";
};

&gpu {
	status = "okay";
};

&bb2d {
	status = "okay";
};

&dss {
	status = "okay";
	vdda_video-supply = <&vdd_1v8_pll>;
};

&hdmi {
#ifdef BELA
	status = "disabled";
#else
	status = "okay";
#endif /* BELA */
	vdda-supply = <&vdd_1v8_phy_ldo4>;
	pinctrl-names = "default";
	pinctrl-0 = <&hdmi_pins_default>;

	port {
		hdmi_out: endpoint {
			remote-endpoint = <&hdmi_encoder_in>;
			//lanes = <1 0 3 2 5 4 7 6>;
		};
	};
};

&bandgap {
	status = "okay";
};

&mailbox1 {
	status = "okay";
};

&mailbox2 {
	status = "okay";
};

&mailbox3 {
	status = "okay";
};

&mailbox4 {
	status = "okay";
};

&mailbox5 {
	status = "okay";
};

&mailbox6 {
	status = "okay";
};

&mailbox7 {
	status = "okay";
};

&mailbox8 {
	status = "okay";
};

&mailbox9 {
	status = "okay";
};

&mailbox10 {
	status = "okay";
};

&mailbox11 {
	status = "okay";
};

&mailbox12 {
	status = "okay";
};

&mailbox13 {
	status = "okay";
};

&ipu1 {
	status = "okay";
	memory-region = <&ipu1_memory_region>;
};

&ipu2 {
	status = "okay";
	memory-region = <&ipu2_memory_region>;
};

&dsp2 {
	status = "okay";
	memory-region = <&dsp2_memory_region>;
};

&pruss_soc_bus1 {
	status = "okay";
};

&pruss1 {
	status = "okay";
};

&pruss_soc_bus2 {
	status = "okay";
};

&pruss2 {
	status = "okay";
};

&cpu_alert0 {
	temperature = <80000>; /* milliCelsius */
};

&cpu_crit {
	temperature = <95000>; /* milliCelsius */
};

&gpu_crit {
	temperature = <95000>; /* milliCelsius */
};

&core_crit {
	temperature = <95000>; /* milliCelsius */
};

&dspeve_crit {
	temperature = <95000>; /* milliCelsius */
};

&iva_crit {
	temperature = <95000>; /* milliCelsius */
};

&sata {
	status = "disabled";
};

&sata_phy {
	status = "disabled";
};

/* bluetooth */
&uart6 {
	status = "okay";
};

/* cape header stuff */
/ {
	cape_universal: cape-universal {
		compatible = "gpio-of-helper";
		status = "okay";
		pinctrl-names = "default";
		pinctrl-0 = <>;

		P8_03 {
			gpio-name = "P8_03";
			gpio = <&gpio1 24 0>;
			input;
			dir-changeable;
		};

		P8_04 {
			gpio-name = "P8_04";
			gpio = <&gpio1 25 0>;
			input;
			dir-changeable;
		};

		P8_05 {
			gpio-name = "P8_05";
			gpio = <&gpio7 1 0>;
			input;
			dir-changeable;
		};

		P8_06 {
			gpio-name = "P8_06";
			gpio = <&gpio7 2 0>;
			input;
			dir-changeable;
		};

		P8_07 {
			gpio-name = "P8_07";
			gpio = <&gpio6 5 0>;
			input;
			dir-changeable;
		};

		P8_08 {
			gpio-name = "P8_08";
			gpio = <&gpio6 6 0>;
			input;
			dir-changeable;
		};

		P8_09 {
			gpio-name = "P8_09";
			gpio = <&gpio6 18 0>;
			input;
			dir-changeable;
		};

		P8_10 {
			gpio-name = "P8_10";
			gpio = <&gpio6 4 0>;
			input;
			dir-changeable;
		};

		P8_11 {
			gpio-name = "P8_11";
			gpio = <&gpio3 11 0>;
			input;
			dir-changeable;
		};

		P8_12 {
			gpio-name = "P8_12";
			gpio = <&gpio3 10 0>;
			input;
			dir-changeable;
		};

		P8_13 {
			gpio-name = "P8_13";
			gpio = <&gpio4 11 0>;
			input;
			dir-changeable;
		};

		P8_14 {
			gpio-name = "P8_14";
			gpio = <&gpio4 13 0>;
			input;
			dir-changeable;
		};

		P8_15 {
			gpio-name = "P8_15";
			gpio = <&gpio4 3 0>;
			input;
			dir-changeable;
		};

		P8_15b {
			gpio-name = "P8_15b";
			gpio = <&gpio4 27 0>;
			input;
			dir-changeable;
		};

		P8_16 {
			gpio-name = "P8_16";
			gpio = <&gpio4 29 0>;
			input;
			dir-changeable;
		};

		P8_17 {
			gpio-name = "P8_17";
			gpio = <&gpio8 18 0>;
			input;
			dir-changeable;
		};

		P8_18 {
			gpio-name = "P8_18";
			gpio = <&gpio4 9 0>;
			input;
			dir-changeable;
		};

		P8_19 {
			gpio-name = "P8_19";
			gpio = <&gpio4 10 0>;
			input;
			dir-changeable;
		};

		P8_20 {
			gpio-name = "P8_20";
			gpio = <&gpio6 30 0>;
			input;
			dir-changeable;
		};

		P8_21 {
			gpio-name = "P8_21";
			gpio = <&gpio6 29 0>;
			input;
			dir-changeable;
		};

		P8_22 {
			gpio-name = "P8_22";
			gpio = <&gpio1 23 0>;
			input;
			dir-changeable;
		};

		P8_23 {
			gpio-name = "P8_23";
			gpio = <&gpio1 22 0>;
			input;
			dir-changeable;
		};

		P8_24 {
			gpio-name = "P8_24";
			gpio = <&gpio7 0 0>;
			input;
			dir-changeable;
		};

		P8_25 {
			gpio-name = "P8_25";
			gpio = <&gpio6 31 0>;
			input;
			dir-changeable;
		};

		P8_26 {
			gpio-name = "P8_26";
			gpio = <&gpio4 28 0>;
			input;
			dir-changeable;
		};

		P8_27 {
			gpio-name = "P8_27";
			gpio = <&gpio4 23 0>;
			input;
			dir-changeable;
		};

		P8_27b {
			gpio-name = "P8_27b";
			gpio = <&gpio8 19 0>;
			input;
			dir-changeable;
		};

		P8_28 {
			gpio-name = "P8_28";
			gpio = <&gpio4 19 0>;
			input;
			dir-changeable;
		};

		P8_28b {
			gpio-name = "P8_28b";
			gpio = <&gpio8 20 0>;
			input;
			dir-changeable;
		};

		P8_29 {
			gpio-name = "P8_29";
			gpio = <&gpio4 22 0>;
			input;
			dir-changeable;
		};

		P8_29b {
			gpio-name = "P8_29b";
			gpio = <&gpio8 21 0>;
			input;
			dir-changeable;
		};

		P8_30 {
			gpio-name = "P8_30";
			gpio = <&gpio4 20 0>;
			input;
			dir-changeable;
		};

		P8_30b {
			gpio-name = "P8_30b";
			gpio = <&gpio8 22 0>;
			input;
			dir-changeable;
		};

		P8_31 {
			gpio-name = "P8_31";
			gpio = <&gpio8 14 0>;
			input;
			dir-changeable;
		};

		P8_32 {
			gpio-name = "P8_32";
			gpio = <&gpio8 15 0>;
			input;
			dir-changeable;
		};

		P8_33 {
			gpio-name = "P8_33";
			gpio = <&gpio8 13 0>;
			input;
			dir-changeable;
		};

		P8_33b {
			gpio-name = "P8_33b";
			gpio = <&gpio3 1 0>;
			input;
			dir-changeable;
		};

		P8_34 {
			gpio-name = "P8_34";
			gpio = <&gpio8 11 0>;
			input;
			dir-changeable;
		};

		P8_34b {
			gpio-name = "P8_34b";
			gpio = <&gpio4 0 0>;
			input;
			dir-changeable;
		};

		P8_35 {
			gpio-name = "P8_35";
			gpio = <&gpio8 12 0>;
			input;
			dir-changeable;
		};

		P8_35b {
			gpio-name = "P8_35b";
			gpio = <&gpio3 0 0>;
			input;
			dir-changeable;
		};

		P8_36 {
			gpio-name = "P8_36";
			gpio = <&gpio8 10 0>;
			input;
			dir-changeable;
		};

		P8_36b {
			gpio-name = "P8_36b";
			gpio = <&gpio4 1 0>;
			input;
			dir-changeable;
		};

		P8_37 {
			gpio-name = "P8_37";
			gpio = <&gpio8 8 0>;
			input;
			dir-changeable;
		};

		P8_38 {
			gpio-name = "P8_38";
			gpio = <&gpio8 9 0>;
			input;
			dir-changeable;
		};

		P8_39 {
			gpio-name = "P8_39";
			gpio = <&gpio8 6 0>;
			input;
			dir-changeable;
		};

		P8_40 {
			gpio-name = "P8_40";
			gpio = <&gpio8 7 0>;
			input;
			dir-changeable;
		};

		P8_41 {
			gpio-name = "P8_41";
			gpio = <&gpio8 4 0>;
			input;
			dir-changeable;
		};

		P8_42 {
			gpio-name = "P8_42";
			gpio = <&gpio8 5 0>;
			input;
			dir-changeable;
		};

		P8_43 {
			gpio-name = "P8_43";
			gpio = <&gpio8 2 0>;
			input;
			dir-changeable;
		};

		P8_44 {
			gpio-name = "P8_44";
			gpio = <&gpio8 3 0>;
			input;
			dir-changeable;
		};

		P8_45 {
			gpio-name = "P8_45";
			gpio = <&gpio8 0 0>;
			input;
			dir-changeable;
		};

		P8_45b {
			gpio-name = "P8_45b";
			gpio = <&gpio8 16 0>;
			input;
			dir-changeable;
		};

		P8_46 {
			gpio-name = "P8_46";
			gpio = <&gpio8 1 0>;
			input;
			dir-changeable;
		};

		P8_46b {
			gpio-name = "P8_46b";
			gpio = <&gpio8 23 0>;
			input;
			dir-changeable;
		};

		P9_11 {
			gpio-name = "P9_11";
			gpio = <&gpio8 17 0>;
			input;
			dir-changeable;
		};

		P9_12 {
			gpio-name = "P9_12";
			gpio = <&gpio5 0 0>;
			input;
			dir-changeable;
		};

		P9_13 {
			gpio-name = "P9_13";
			gpio = <&gpio6 12 0>;
			input;
			dir-changeable;
		};

		P9_14 {
			gpio-name = "P9_14";
			gpio = <&gpio4 25 0>;
			input;
			dir-changeable;
		};

		P9_15 {
			gpio-name = "P9_15";
			gpio = <&gpio3 12 0>;
			input;
			dir-changeable;
		};

		P9_16 {
			gpio-name = "P9_16";
			gpio = <&gpio4 26 0>;
			input;
			dir-changeable;
		};

		P9_17 {
			gpio-name = "P9_17";
			gpio = <&gpio7 17 0>;
			input;
			dir-changeable;
		};

		P9_17b {
			gpio-name = "P9_17b";
			gpio = <&gpio5 3 0>;
			input;
			dir-changeable;
		};

		P9_18 {
			gpio-name = "P9_18";
			gpio = <&gpio7 16 0>;
			input;
			dir-changeable;
		};

		P9_18b {
			gpio-name = "P9_18b";
			gpio = <&gpio5 2 0>;
			input;
			dir-changeable;
		};

		P9_19 {
			gpio-name = "P9_19";
			gpio = <&gpio7 3 0>;
			input;
			dir-changeable;
		};

		P9_19b {
			gpio-name = "P9_19b";
			gpio = <&gpio4 6 0>;
			input;
			dir-changeable;
		};

		P9_20 {
			gpio-name = "P9_20";
			gpio = <&gpio7 4 0>;
			input;
			dir-changeable;
		};

		P9_20b {
			gpio-name = "P9_20b";
			gpio = <&gpio4 5 0>;
			input;
			dir-changeable;
		};

		P9_21 {
			gpio-name = "P9_21";
			gpio = <&gpio3 3 0>;
			input;
			dir-changeable;
		};

		P9_21b {
			gpio-name = "P9_21b";
			gpio = <&gpio7 15 0>;
			input;
			dir-changeable;
		};

		P9_22 {
			gpio-name = "P9_22";
			gpio = <&gpio6 19 0>;
			input;
			dir-changeable;
		};

		P9_22b {
			gpio-name = "P9_22b";
			gpio = <&gpio7 14 0>;
			input;
			dir-changeable;
		};

		P9_23 {
			gpio-name = "P9_23";
			gpio = <&gpio7 11 0>;
			input;
			dir-changeable;
		};

		P9_24 {
			gpio-name = "P9_24";
			gpio = <&gpio6 15 0>;
			input;
			dir-changeable;
		};

		P9_25 {
			gpio-name = "P9_25";
			gpio = <&gpio6 17 0>;
			input;
			dir-changeable;
		};

		P9_26 {
			gpio-name = "P9_26";
			gpio = <&gpio6 14 0>;
			input;
			dir-changeable;
		};

		P9_26b {
			gpio-name = "P9_26b";
			gpio = <&gpio3 24 0>;
			input;
			dir-changeable;
		};

		P9_27 {
			gpio-name = "P9_27";
			gpio = <&gpio4 15 0>;
			input;
			dir-changeable;
		};

		P9_27b {
			gpio-name = "P9_27b";
			gpio = <&gpio5 1 0>;
			input;
			dir-changeable;
		};

		P9_28 {
			gpio-name = "P9_28";
			gpio = <&gpio4 17 0>;
			input;
			dir-changeable;
		};

		P9_29 {
			gpio-name = "P9_29";
			gpio = <&gpio5 11 0>;
			input;
			dir-changeable;
		};

		P9_29b {
			gpio-name = "P9_29b";
			gpio = <&gpio7 30 0>;
			input;
			dir-changeable;
		};

		P9_30 {
			gpio-name = "P9_30";
			gpio = <&gpio5 12 0>;
			input;
			dir-changeable;
		};

		P9_31 {
			gpio-name = "P9_31";
			gpio = <&gpio5 10 0>;
			input;
			dir-changeable;
		};

		P9_31b {
			gpio-name = "P9_31b";
			gpio = <&gpio7 31 0>;
			input;
			dir-changeable;
		};

		P9_41 {
			gpio-name = "P9_41";
			gpio = <&gpio6 20 0>;
			input;
			dir-changeable;
		};

		P9_41b {
			gpio-name = "P9_41b";
			gpio = <&gpio4 7 0>;
			input;
			dir-changeable;
		};

		P9_42 {
			gpio-name = "P9_42";
			gpio = <&gpio4 18 0>;
			input;
			dir-changeable;
		};

		P9_42b {
			gpio-name = "P9_42b";
			gpio = <&gpio4 14 0>;
			input;
			dir-changeable;
		};
	};
};

&i2c4 {
	status = "okay";
	clock-frequency = <400000>;
	symlink = "bone/i2c/2";
};

&dra7_pmx_core {
	mmc1_pins_default: mmc1_pins_default {
		pinctrl-single,pins = <
			DRA7XX_CORE_IOPAD(0x3754, PIN_INPUT_PULLUP | MUX_MODE0) /* mmc1_clk.clk */
			DRA7XX_CORE_IOPAD(0x3758, PIN_INPUT_PULLUP | MUX_MODE0) /* mmc1_cmd.cmd */
			DRA7XX_CORE_IOPAD(0x375c, PIN_INPUT_PULLUP | MUX_MODE0) /* mmc1_dat0.dat0 */
			DRA7XX_CORE_IOPAD(0x3760, PIN_INPUT_PULLUP | MUX_MODE0) /* mmc1_dat1.dat1 */
			DRA7XX_CORE_IOPAD(0x3764, PIN_INPUT_PULLUP | MUX_MODE0) /* mmc1_dat2.dat2 */
			DRA7XX_CORE_IOPAD(0x3768, PIN_INPUT_PULLUP | MUX_MODE0) /* mmc1_dat3.dat3 */
		>;
	};

	mmc1_pins_default_no_clk_pu: mmc1_pins_default_no_clk_pu {
		pinctrl-single,pins = <
			DRA7XX_CORE_IOPAD(0x3754, PIN_INPUT_PULLDOWN | MUX_MODE0) /* mmc1_clk.clk */
			DRA7XX_CORE_IOPAD(0x3758, PIN_INPUT_PULLUP | MUX_MODE0) /* mmc1_cmd.cmd */
			DRA7XX_CORE_IOPAD(0x375c, PIN_INPUT_PULLUP | MUX_MODE0) /* mmc1_dat0.dat0 */
			DRA7XX_CORE_IOPAD(0x3760, PIN_INPUT_PULLUP | MUX_MODE0) /* mmc1_dat1.dat1 */
			DRA7XX_CORE_IOPAD(0x3764, PIN_INPUT_PULLUP | MUX_MODE0) /* mmc1_dat2.dat2 */
			DRA7XX_CORE_IOPAD(0x3768, PIN_INPUT_PULLUP | MUX_MODE0) /* mmc1_dat3.dat3 */
		>;
	};

	mmc1_pins_sdr12: mmc1_pins_sdr12 {
		pinctrl-single,pins = <
			DRA7XX_CORE_IOPAD(0x3754, PIN_INPUT_PULLUP | MUX_MODE0)	/* mmc1_clk.clk */
			DRA7XX_CORE_IOPAD(0x3758, PIN_INPUT_PULLUP | MUX_MODE0)	/* mmc1_cmd.cmd */
			DRA7XX_CORE_IOPAD(0x375c, PIN_INPUT_PULLUP | MUX_MODE0)	/* mmc1_dat0.dat0 */
			DRA7XX_CORE_IOPAD(0x3760, PIN_INPUT_PULLUP | MUX_MODE0)	/* mmc1_dat1.dat1 */
			DRA7XX_CORE_IOPAD(0x3764, PIN_INPUT_PULLUP | MUX_MODE0)	/* mmc1_dat2.dat2 */
			DRA7XX_CORE_IOPAD(0x3768, PIN_INPUT_PULLUP | MUX_MODE0)	/* mmc1_dat3.dat3 */
		>;
	};

	mmc1_pins_hs: mmc1_pins_hs {
		pinctrl-single,pins = <
			DRA7XX_CORE_IOPAD(0x3754, PIN_INPUT_PULLUP | MUX_VIRTUAL_MODE11 | MUX_MODE0) /* mmc1_clk.clk */
			DRA7XX_CORE_IOPAD(0x3758, PIN_INPUT_PULLUP | MUX_VIRTUAL_MODE11 | MUX_MODE0) /* mmc1_cmd.cmd */
			DRA7XX_CORE_IOPAD(0x375c, PIN_INPUT_PULLUP | MUX_VIRTUAL_MODE11 | MUX_MODE0) /* mmc1_dat0.dat0 */
			DRA7XX_CORE_IOPAD(0x3760, PIN_INPUT_PULLUP | MUX_VIRTUAL_MODE11 | MUX_MODE0) /* mmc1_dat1.dat1 */
			DRA7XX_CORE_IOPAD(0x3764, PIN_INPUT_PULLUP | MUX_VIRTUAL_MODE11 | MUX_MODE0) /* mmc1_dat2.dat2 */
			DRA7XX_CORE_IOPAD(0x3768, PIN_INPUT_PULLUP | MUX_VIRTUAL_MODE11 | MUX_MODE0) /* mmc1_dat3.dat3 */
		>;
	};

	mmc1_pins_sdr25: mmc1_pins_sdr25 {
		pinctrl-single,pins = <
			DRA7XX_CORE_IOPAD(0x3754, PIN_INPUT_PULLUP | MUX_VIRTUAL_MODE11 | MUX_MODE0)	/* mmc1_clk.clk */
			DRA7XX_CORE_IOPAD(0x3758, PIN_INPUT_PULLUP | MUX_VIRTUAL_MODE11 | MUX_MODE0)	/* mmc1_cmd.cmd */
			DRA7XX_CORE_IOPAD(0x375c, PIN_INPUT_PULLUP | MUX_VIRTUAL_MODE11 | MUX_MODE0)	/* mmc1_dat0.dat0 */
			DRA7XX_CORE_IOPAD(0x3760, PIN_INPUT_PULLUP | MUX_VIRTUAL_MODE11 | MUX_MODE0)	/* mmc1_dat1.dat1 */
			DRA7XX_CORE_IOPAD(0x3764, PIN_INPUT_PULLUP | MUX_VIRTUAL_MODE11 | MUX_MODE0)	/* mmc1_dat2.dat2 */
			DRA7XX_CORE_IOPAD(0x3768, PIN_INPUT_PULLUP | MUX_VIRTUAL_MODE11 | MUX_MODE0)	/* mmc1_dat3.dat3 */
		>;
	};

	mmc1_pins_sdr50: mmc1_pins_sdr50 {
		pinctrl-single,pins = <
			DRA7XX_CORE_IOPAD(0x3754, PIN_INPUT_PULLUP | MUX_VIRTUAL_MODE10 | MUX_MODE0)	/* mmc1_clk.clk */
			DRA7XX_CORE_IOPAD(0x3758, PIN_INPUT_PULLUP | MUX_VIRTUAL_MODE10 | MUX_MODE0)	/* mmc1_cmd.cmd */
			DRA7XX_CORE_IOPAD(0x375c, PIN_INPUT_PULLUP | MUX_VIRTUAL_MODE10 | MUX_MODE0)	/* mmc1_dat0.dat0 */
			DRA7XX_CORE_IOPAD(0x3760, PIN_INPUT_PULLUP | MUX_VIRTUAL_MODE10 | MUX_MODE0)	/* mmc1_dat1.dat1 */
			DRA7XX_CORE_IOPAD(0x3764, PIN_INPUT_PULLUP | MUX_VIRTUAL_MODE10 | MUX_MODE0)	/* mmc1_dat2.dat2 */
			DRA7XX_CORE_IOPAD(0x3768, PIN_INPUT_PULLUP | MUX_VIRTUAL_MODE10 | MUX_MODE0)	/* mmc1_dat3.dat3 */
		>;
	};

	mmc1_pins_ddr50: mmc1_pins_ddr50 {
		pinctrl-single,pins = <
			DRA7XX_CORE_IOPAD(0x3754, PIN_INPUT_PULLUP | MODE_SELECT | MUX_MODE0)	/* mmc1_clk.clk */
			DRA7XX_CORE_IOPAD(0x3758, PIN_INPUT_PULLUP | MODE_SELECT | MUX_MODE0)	/* mmc1_cmd.cmd */
			DRA7XX_CORE_IOPAD(0x375c, PIN_INPUT_PULLUP | MODE_SELECT | MUX_MODE0)	/* mmc1_dat0.dat0 */
			DRA7XX_CORE_IOPAD(0x3760, PIN_INPUT_PULLUP | MODE_SELECT | MUX_MODE0)	/* mmc1_dat1.dat1 */
			DRA7XX_CORE_IOPAD(0x3764, PIN_INPUT_PULLUP | MODE_SELECT | MUX_MODE0)	/* mmc1_dat2.dat2 */
			DRA7XX_CORE_IOPAD(0x3768, PIN_INPUT_PULLUP | MODE_SELECT | MUX_MODE0)	/* mmc1_dat3.dat3 */
		>;
	};

	mmc1_pins_sdr104: mmc1_pins_sdr104 {
		pinctrl-single,pins = <
			DRA7XX_CORE_IOPAD(0x3754, PIN_INPUT_PULLUP | MODE_SELECT | MUX_MODE0)	/* mmc1_clk.clk */
			DRA7XX_CORE_IOPAD(0x3758, PIN_INPUT_PULLUP | MODE_SELECT | MUX_MODE0)	/* mmc1_cmd.cmd */
			DRA7XX_CORE_IOPAD(0x375c, PIN_INPUT_PULLUP | MODE_SELECT | MUX_MODE0)	/* mmc1_dat0.dat0 */
			DRA7XX_CORE_IOPAD(0x3760, PIN_INPUT_PULLUP | MODE_SELECT | MUX_MODE0)	/* mmc1_dat1.dat1 */
			DRA7XX_CORE_IOPAD(0x3764, PIN_INPUT_PULLUP | MODE_SELECT | MUX_MODE0)	/* mmc1_dat2.dat2 */
			DRA7XX_CORE_IOPAD(0x3768, PIN_INPUT_PULLUP | MODE_SELECT | MUX_MODE0)	/* mmc1_dat3.dat3 */
		>;
	};

	mmc2_pins_default: mmc2_pins_default {
		pinctrl-single,pins = <
			DRA7XX_CORE_IOPAD(0x349c, PIN_INPUT_PULLUP | MUX_MODE1) /* gpmc_a23.mmc2_clk */
			DRA7XX_CORE_IOPAD(0x34b0, PIN_INPUT_PULLUP | MUX_MODE1) /* gpmc_cs1.mmc2_cmd */
			DRA7XX_CORE_IOPAD(0x34a0, PIN_INPUT_PULLUP | MUX_MODE1) /* gpmc_a24.mmc2_dat0 */
			DRA7XX_CORE_IOPAD(0x34a4, PIN_INPUT_PULLUP | MUX_MODE1) /* gpmc_a25.mmc2_dat1 */
			DRA7XX_CORE_IOPAD(0x34a8, PIN_INPUT_PULLUP | MUX_MODE1) /* gpmc_a26.mmc2_dat2 */
			DRA7XX_CORE_IOPAD(0x34ac, PIN_INPUT_PULLUP | MUX_MODE1) /* gpmc_a27.mmc2_dat3 */
			DRA7XX_CORE_IOPAD(0x348c, PIN_INPUT_PULLUP | MUX_MODE1) /* gpmc_a19.mmc2_dat4 */
			DRA7XX_CORE_IOPAD(0x3490, PIN_INPUT_PULLUP | MUX_MODE1) /* gpmc_a20.mmc2_dat5 */
			DRA7XX_CORE_IOPAD(0x3494, PIN_INPUT_PULLUP | MUX_MODE1) /* gpmc_a21.mmc2_dat6 */
			DRA7XX_CORE_IOPAD(0x3498, PIN_INPUT_PULLUP | MUX_MODE1) /* gpmc_a22.mmc2_dat7 */
		>;
	};

	mmc2_pins_hs: mmc2_pins_hs {
		pinctrl-single,pins = <
			DRA7XX_CORE_IOPAD(0x349c, PIN_INPUT_PULLUP | MUX_MODE1) /* gpmc_a23.mmc2_clk */
			DRA7XX_CORE_IOPAD(0x34b0, PIN_INPUT_PULLUP | MUX_MODE1) /* gpmc_cs1.mmc2_cmd */
			DRA7XX_CORE_IOPAD(0x34a0, PIN_INPUT_PULLUP | MUX_MODE1) /* gpmc_a24.mmc2_dat0 */
			DRA7XX_CORE_IOPAD(0x34a4, PIN_INPUT_PULLUP | MUX_MODE1) /* gpmc_a25.mmc2_dat1 */
			DRA7XX_CORE_IOPAD(0x34a8, PIN_INPUT_PULLUP | MUX_MODE1) /* gpmc_a26.mmc2_dat2 */
			DRA7XX_CORE_IOPAD(0x34ac, PIN_INPUT_PULLUP | MUX_MODE1) /* gpmc_a27.mmc2_dat3 */
			DRA7XX_CORE_IOPAD(0x348c, PIN_INPUT_PULLUP | MUX_MODE1) /* gpmc_a19.mmc2_dat4 */
			DRA7XX_CORE_IOPAD(0x3490, PIN_INPUT_PULLUP | MUX_MODE1) /* gpmc_a20.mmc2_dat5 */
			DRA7XX_CORE_IOPAD(0x3494, PIN_INPUT_PULLUP | MUX_MODE1) /* gpmc_a21.mmc2_dat6 */
			DRA7XX_CORE_IOPAD(0x3498, PIN_INPUT_PULLUP | MUX_MODE1) /* gpmc_a22.mmc2_dat7 */
		>;
	};

	mmc2_pins_ddr_3_3v_rev11: mmc2_pins_ddr_3_3v_rev11 {
		pinctrl-single,pins = <
			DRA7XX_CORE_IOPAD(0x349c, PIN_INPUT_PULLUP | MODE_SELECT | MUX_MODE1) /* gpmc_a23.mmc2_clk */
			DRA7XX_CORE_IOPAD(0x34b0, PIN_INPUT_PULLUP | MODE_SELECT | MUX_MODE1) /* gpmc_cs1.mmc2_cmd */
			DRA7XX_CORE_IOPAD(0x34a0, PIN_INPUT_PULLUP | MODE_SELECT | MUX_MODE1) /* gpmc_a24.mmc2_dat0 */
			DRA7XX_CORE_IOPAD(0x34a4, PIN_INPUT_PULLUP | MODE_SELECT | MUX_MODE1) /* gpmc_a25.mmc2_dat1 */
			DRA7XX_CORE_IOPAD(0x34a8, PIN_INPUT_PULLUP | MODE_SELECT | MUX_MODE1) /* gpmc_a26.mmc2_dat2 */
			DRA7XX_CORE_IOPAD(0x34ac, PIN_INPUT_PULLUP | MODE_SELECT | MUX_MODE1) /* gpmc_a27.mmc2_dat3 */
			DRA7XX_CORE_IOPAD(0x348c, PIN_INPUT_PULLUP | MODE_SELECT | MUX_MODE1) /* gpmc_a19.mmc2_dat4 */
			DRA7XX_CORE_IOPAD(0x3490, PIN_INPUT_PULLUP | MODE_SELECT | MUX_MODE1) /* gpmc_a20.mmc2_dat5 */
			DRA7XX_CORE_IOPAD(0x3494, PIN_INPUT_PULLUP | MODE_SELECT | MUX_MODE1) /* gpmc_a21.mmc2_dat6 */
			DRA7XX_CORE_IOPAD(0x3498, PIN_INPUT_PULLUP | MODE_SELECT | MUX_MODE1) /* gpmc_a22.mmc2_dat7 */
		>;
	};

	mmc2_pins_ddr_1_8v_rev11: mmc2_pins_ddr_1_8v_rev11 {
		pinctrl-single,pins = <
			DRA7XX_CORE_IOPAD(0x349c, PIN_INPUT_PULLUP | MODE_SELECT | MUX_MODE1) /* gpmc_a23.mmc2_clk */
			DRA7XX_CORE_IOPAD(0x34b0, PIN_INPUT_PULLUP | MODE_SELECT | MUX_MODE1) /* gpmc_cs1.mmc2_cmd */
			DRA7XX_CORE_IOPAD(0x34a0, PIN_INPUT_PULLUP | MODE_SELECT | MUX_MODE1) /* gpmc_a24.mmc2_dat0 */
			DRA7XX_CORE_IOPAD(0x34a4, PIN_INPUT_PULLUP | MODE_SELECT | MUX_MODE1) /* gpmc_a25.mmc2_dat1 */
			DRA7XX_CORE_IOPAD(0x34a8, PIN_INPUT_PULLUP | MODE_SELECT | MUX_MODE1) /* gpmc_a26.mmc2_dat2 */
			DRA7XX_CORE_IOPAD(0x34ac, PIN_INPUT_PULLUP | MODE_SELECT | MUX_MODE1) /* gpmc_a27.mmc2_dat3 */
			DRA7XX_CORE_IOPAD(0x348c, PIN_INPUT_PULLUP | MODE_SELECT | MUX_MODE1) /* gpmc_a19.mmc2_dat4 */
			DRA7XX_CORE_IOPAD(0x3490, PIN_INPUT_PULLUP | MODE_SELECT | MUX_MODE1) /* gpmc_a20.mmc2_dat5 */
			DRA7XX_CORE_IOPAD(0x3494, PIN_INPUT_PULLUP | MODE_SELECT | MUX_MODE1) /* gpmc_a21.mmc2_dat6 */
			DRA7XX_CORE_IOPAD(0x3498, PIN_INPUT_PULLUP | MODE_SELECT | MUX_MODE1) /* gpmc_a22.mmc2_dat7 */
		>;
	};

	mmc2_pins_ddr_rev20: mmc2_pins_ddr_rev20 {
		pinctrl-single,pins = <
			DRA7XX_CORE_IOPAD(0x349c, PIN_INPUT_PULLUP | MUX_MODE1) /* gpmc_a23.mmc2_clk */
			DRA7XX_CORE_IOPAD(0x34b0, PIN_INPUT_PULLUP | MUX_MODE1) /* gpmc_cs1.mmc2_cmd */
			DRA7XX_CORE_IOPAD(0x34a0, PIN_INPUT_PULLUP | MUX_MODE1) /* gpmc_a24.mmc2_dat0 */
			DRA7XX_CORE_IOPAD(0x34a4, PIN_INPUT_PULLUP | MUX_MODE1) /* gpmc_a25.mmc2_dat1 */
			DRA7XX_CORE_IOPAD(0x34a8, PIN_INPUT_PULLUP | MUX_MODE1) /* gpmc_a26.mmc2_dat2 */
			DRA7XX_CORE_IOPAD(0x34ac, PIN_INPUT_PULLUP | MUX_MODE1) /* gpmc_a27.mmc2_dat3 */
			DRA7XX_CORE_IOPAD(0x348c, PIN_INPUT_PULLUP | MUX_MODE1) /* gpmc_a19.mmc2_dat4 */
			DRA7XX_CORE_IOPAD(0x3490, PIN_INPUT_PULLUP | MUX_MODE1) /* gpmc_a20.mmc2_dat5 */
			DRA7XX_CORE_IOPAD(0x3494, PIN_INPUT_PULLUP | MUX_MODE1) /* gpmc_a21.mmc2_dat6 */
			DRA7XX_CORE_IOPAD(0x3498, PIN_INPUT_PULLUP | MUX_MODE1) /* gpmc_a22.mmc2_dat7 */
		>;
	};

	mmc2_pins_hs200: mmc2_pins_hs200 {
		pinctrl-single,pins = <
			DRA7XX_CORE_IOPAD(0x349c, PIN_INPUT_PULLUP | MODE_SELECT | MUX_MODE1) /* gpmc_a23.mmc2_clk */
			DRA7XX_CORE_IOPAD(0x34b0, PIN_INPUT_PULLUP | MODE_SELECT | MUX_MODE1) /* gpmc_cs1.mmc2_cmd */
			DRA7XX_CORE_IOPAD(0x34a0, PIN_INPUT_PULLUP | MODE_SELECT | MUX_MODE1) /* gpmc_a24.mmc2_dat0 */
			DRA7XX_CORE_IOPAD(0x34a4, PIN_INPUT_PULLUP | MODE_SELECT | MUX_MODE1) /* gpmc_a25.mmc2_dat1 */
			DRA7XX_CORE_IOPAD(0x34a8, PIN_INPUT_PULLUP | MODE_SELECT | MUX_MODE1) /* gpmc_a26.mmc2_dat2 */
			DRA7XX_CORE_IOPAD(0x34ac, PIN_INPUT_PULLUP | MODE_SELECT | MUX_MODE1) /* gpmc_a27.mmc2_dat3 */
			DRA7XX_CORE_IOPAD(0x348c, PIN_INPUT_PULLUP | MODE_SELECT | MUX_MODE1) /* gpmc_a19.mmc2_dat4 */
			DRA7XX_CORE_IOPAD(0x3490, PIN_INPUT_PULLUP | MODE_SELECT | MUX_MODE1) /* gpmc_a20.mmc2_dat5 */
			DRA7XX_CORE_IOPAD(0x3494, PIN_INPUT_PULLUP | MODE_SELECT | MUX_MODE1) /* gpmc_a21.mmc2_dat6 */
			DRA7XX_CORE_IOPAD(0x3498, PIN_INPUT_PULLUP | MODE_SELECT | MUX_MODE1) /* gpmc_a22.mmc2_dat7 */
		>;
	};

	mmc4_pins_default: mmc4_pins_default {
		pinctrl-single,pins = <
			DRA7XX_CORE_IOPAD(0x37e8, PIN_INPUT_PULLUP | MUX_MODE3) /* uart1_ctsn.mmc4_clk */
			DRA7XX_CORE_IOPAD(0x37ec, PIN_INPUT_PULLUP | MUX_MODE3) /* uart1_rtsn.mmc4_cmd */
			DRA7XX_CORE_IOPAD(0x37f0, PIN_INPUT_PULLUP | MUX_MODE3) /* uart2_rxd.mmc4_dat0 */
			DRA7XX_CORE_IOPAD(0x37f4, PIN_INPUT_PULLUP | MUX_MODE3) /* uart2_txd.mmc4_dat1 */
			DRA7XX_CORE_IOPAD(0x37f8, PIN_INPUT_PULLUP | MUX_MODE3) /* uart2_ctsn.mmc4_dat2 */
			DRA7XX_CORE_IOPAD(0x37fc, PIN_INPUT_PULLUP | MUX_MODE3) /* uart2_rtsn.mmc4_dat3 */
		>;
	};

	mmc4_pins_hs: mmc4_pins_hs {
		pinctrl-single,pins = <
			DRA7XX_CORE_IOPAD(0x37e8, PIN_INPUT_PULLUP | MUX_MODE3) /* uart1_ctsn.mmc4_clk */
			DRA7XX_CORE_IOPAD(0x37ec, PIN_INPUT_PULLUP | MUX_MODE3) /* uart1_rtsn.mmc4_cmd */
			DRA7XX_CORE_IOPAD(0x37f0, PIN_INPUT_PULLUP | MUX_MODE3) /* uart2_rxd.mmc4_dat0 */
			DRA7XX_CORE_IOPAD(0x37f4, PIN_INPUT_PULLUP | MUX_MODE3) /* uart2_txd.mmc4_dat1 */
			DRA7XX_CORE_IOPAD(0x37f8, PIN_INPUT_PULLUP | MUX_MODE3) /* uart2_ctsn.mmc4_dat2 */
			DRA7XX_CORE_IOPAD(0x37fc, PIN_INPUT_PULLUP | MUX_MODE3) /* uart2_rtsn.mmc4_dat3 */
		>;
	};

	mmc3_pins_default: mmc3_pins_default {
		pinctrl-single,pins = <
			DRA7XX_CORE_IOPAD(0x377c, (PIN_INPUT_PULLUP | MUX_MODE0)) /* mmc3_clk.mmc3_clk */
			DRA7XX_CORE_IOPAD(0x3780, (PIN_INPUT_PULLUP | MUX_MODE0)) /* mmc3_cmd.mmc3_cmd */
			DRA7XX_CORE_IOPAD(0x3784, (PIN_INPUT_PULLUP | MUX_MODE0)) /* mmc3_dat0.mmc3_dat0 */
			DRA7XX_CORE_IOPAD(0x3788, (PIN_INPUT_PULLUP | MUX_MODE0)) /* mmc3_dat1.mmc3_dat1 */
			DRA7XX_CORE_IOPAD(0x378c, (PIN_INPUT_PULLUP | MUX_MODE0)) /* mmc3_dat2.mmc3_dat2 */
			DRA7XX_CORE_IOPAD(0x3790, (PIN_INPUT_PULLUP | MUX_MODE0)) /* mmc3_dat3.mmc3_dat3 */
		>;
	};

	mmc3_pins_hs: mmc3_pins_hs {
		pinctrl-single,pins = <
			DRA7XX_CORE_IOPAD(0x377c, (PIN_INPUT_PULLUP | MUX_MODE0)) /* mmc3_clk.mmc3_clk */
			DRA7XX_CORE_IOPAD(0x3780, (PIN_INPUT_PULLUP | MUX_MODE0)) /* mmc3_cmd.mmc3_cmd */
			DRA7XX_CORE_IOPAD(0x3784, (PIN_INPUT_PULLUP | MUX_MODE0)) /* mmc3_dat0.mmc3_dat0 */
			DRA7XX_CORE_IOPAD(0x3788, (PIN_INPUT_PULLUP | MUX_MODE0)) /* mmc3_dat1.mmc3_dat1 */
			DRA7XX_CORE_IOPAD(0x378c, (PIN_INPUT_PULLUP | MUX_MODE0)) /* mmc3_dat2.mmc3_dat2 */
			DRA7XX_CORE_IOPAD(0x3790, (PIN_INPUT_PULLUP | MUX_MODE0)) /* mmc3_dat3.mmc3_dat3 */
		>;
	};

	mmc3_pins_sdr12: mmc3_pins_sdr12 {
		pinctrl-single,pins = <
			DRA7XX_CORE_IOPAD(0x377c, (PIN_INPUT_PULLUP | MUX_MODE0)) /* mmc3_clk.mmc3_clk */
			DRA7XX_CORE_IOPAD(0x3780, (PIN_INPUT_PULLUP | MUX_MODE0)) /* mmc3_cmd.mmc3_cmd */
			DRA7XX_CORE_IOPAD(0x3784, (PIN_INPUT_PULLUP | MUX_MODE0)) /* mmc3_dat0.mmc3_dat0 */
			DRA7XX_CORE_IOPAD(0x3788, (PIN_INPUT_PULLUP | MUX_MODE0)) /* mmc3_dat1.mmc3_dat1 */
			DRA7XX_CORE_IOPAD(0x378c, (PIN_INPUT_PULLUP | MUX_MODE0)) /* mmc3_dat2.mmc3_dat2 */
			DRA7XX_CORE_IOPAD(0x3790, (PIN_INPUT_PULLUP | MUX_MODE0)) /* mmc3_dat3.mmc3_dat3 */
		>;
	};

	mmc3_pins_sdr25: mmc3_pins_sdr25 {
		pinctrl-single,pins = <
			DRA7XX_CORE_IOPAD(0x377c, (PIN_INPUT_PULLUP | MUX_MODE0)) /* mmc3_clk.mmc3_clk */
			DRA7XX_CORE_IOPAD(0x3780, (PIN_INPUT_PULLUP | MUX_MODE0)) /* mmc3_cmd.mmc3_cmd */
			DRA7XX_CORE_IOPAD(0x3784, (PIN_INPUT_PULLUP | MUX_MODE0)) /* mmc3_dat0.mmc3_dat0 */
			DRA7XX_CORE_IOPAD(0x3788, (PIN_INPUT_PULLUP | MUX_MODE0)) /* mmc3_dat1.mmc3_dat1 */
			DRA7XX_CORE_IOPAD(0x378c, (PIN_INPUT_PULLUP | MUX_MODE0)) /* mmc3_dat2.mmc3_dat2 */
			DRA7XX_CORE_IOPAD(0x3790, (PIN_INPUT_PULLUP | MUX_MODE0)) /* mmc3_dat3.mmc3_dat3 */
		>;
	};

	mmc3_pins_sdr50: mmc3_pins_sdr50 {
		pinctrl-single,pins = <
			DRA7XX_CORE_IOPAD(0x377c, (PIN_INPUT_PULLUP | MODE_SELECT | MUX_MODE0)) /* mmc3_clk.mmc3_clk */
			DRA7XX_CORE_IOPAD(0x3780, (PIN_INPUT_PULLUP | MODE_SELECT | MUX_MODE0)) /* mmc3_cmd.mmc3_cmd */
			DRA7XX_CORE_IOPAD(0x3784, (PIN_INPUT_PULLUP | MODE_SELECT | MUX_MODE0)) /* mmc3_dat0.mmc3_dat0 */
			DRA7XX_CORE_IOPAD(0x3788, (PIN_INPUT_PULLUP | MODE_SELECT | MUX_MODE0)) /* mmc3_dat1.mmc3_dat1 */
			DRA7XX_CORE_IOPAD(0x378c, (PIN_INPUT_PULLUP | MODE_SELECT | MUX_MODE0)) /* mmc3_dat2.mmc3_dat2 */
			DRA7XX_CORE_IOPAD(0x3790, (PIN_INPUT_PULLUP | MODE_SELECT | MUX_MODE0)) /* mmc3_dat3.mmc3_dat3 */
		>;
	};

	mmc4_pins_sdr12: mmc4_pins_sdr12 {
		pinctrl-single,pins = <
			DRA7XX_CORE_IOPAD(0x37e8, PIN_INPUT_PULLUP | MUX_MODE3) /* uart1_ctsn.mmc4_clk */
			DRA7XX_CORE_IOPAD(0x37ec, PIN_INPUT_PULLUP | MUX_MODE3) /* uart1_rtsn.mmc4_cmd */
			DRA7XX_CORE_IOPAD(0x37f0, PIN_INPUT_PULLUP | MUX_MODE3) /* uart2_rxd.mmc4_dat0 */
			DRA7XX_CORE_IOPAD(0x37f4, PIN_INPUT_PULLUP | MUX_MODE3) /* uart2_txd.mmc4_dat1 */
			DRA7XX_CORE_IOPAD(0x37f8, PIN_INPUT_PULLUP | MUX_MODE3) /* uart2_ctsn.mmc4_dat2 */
			DRA7XX_CORE_IOPAD(0x37fc, PIN_INPUT_PULLUP | MUX_MODE3) /* uart2_rtsn.mmc4_dat3 */
		>;
	};

	mmc4_pins_sdr25: mmc4_pins_sdr25 {
		pinctrl-single,pins = <
			DRA7XX_CORE_IOPAD(0x37e8, PIN_INPUT_PULLUP | MUX_MODE3) /* uart1_ctsn.mmc4_clk */
			DRA7XX_CORE_IOPAD(0x37ec, PIN_INPUT_PULLUP | MUX_MODE3) /* uart1_rtsn.mmc4_cmd */
			DRA7XX_CORE_IOPAD(0x37f0, PIN_INPUT_PULLUP | MUX_MODE3) /* uart2_rxd.mmc4_dat0 */
			DRA7XX_CORE_IOPAD(0x37f4, PIN_INPUT_PULLUP | MUX_MODE3) /* uart2_txd.mmc4_dat1 */
			DRA7XX_CORE_IOPAD(0x37f8, PIN_INPUT_PULLUP | MUX_MODE3) /* uart2_ctsn.mmc4_dat2 */
			DRA7XX_CORE_IOPAD(0x37fc, PIN_INPUT_PULLUP | MUX_MODE3) /* uart2_rtsn.mmc4_dat3 */
		>;
	};
};

&dra7_iodelay_core {

	/* Corresponds to MMC1_DDR_MANUAL1 in datamanual */
	mmc1_iodelay_ddr_rev11_conf: mmc1_iodelay_ddr_rev11_conf {
		pinctrl-pin-array = <
			0x618 A_DELAY_PS(572) G_DELAY_PS(540)	/* CFG_MMC1_CLK_IN */
			0x620 A_DELAY_PS(1525) G_DELAY_PS(0)	/* CFG_MMC1_CLK_OUT */
			0x624 A_DELAY_PS(0) G_DELAY_PS(600)	/* CFG_MMC1_CMD_IN */
			0x628 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_MMC1_CMD_OEN */
			0x62c A_DELAY_PS(55) G_DELAY_PS(0)	/* CFG_MMC1_CMD_OUT */
			0x630 A_DELAY_PS(403) G_DELAY_PS(120)	/* CFG_MMC1_DAT0_IN */
			0x634 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_MMC1_DAT0_OEN */
			0x638 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_MMC1_DAT0_OUT */
			0x63c A_DELAY_PS(23) G_DELAY_PS(60)	/* CFG_MMC1_DAT1_IN */
			0x640 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_MMC1_DAT1_OEN */
			0x644 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_MMC1_DAT1_OUT */
			0x648 A_DELAY_PS(25) G_DELAY_PS(60)	/* CFG_MMC1_DAT2_IN */
			0x64c A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_MMC1_DAT2_OEN */
			0x650 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_MMC1_DAT2_OUT */
			0x654 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_MMC1_DAT3_IN */
			0x658 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_MMC1_DAT3_OEN */
			0x65c A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_MMC1_DAT3_OUT */
		>;
	};

	/* Corresponds to MMC1_DDR_MANUAL1 in datamanual */
	mmc1_iodelay_ddr_rev20_conf: mmc1_iodelay_ddr50_rev20_conf {
		pinctrl-pin-array = <
			0x618 A_DELAY_PS(1076) G_DELAY_PS(330)	/* CFG_MMC1_CLK_IN */
			0x620 A_DELAY_PS(1271) G_DELAY_PS(0)	/* CFG_MMC1_CLK_OUT */
			0x624 A_DELAY_PS(722) G_DELAY_PS(0)	/* CFG_MMC1_CMD_IN */
			0x628 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_MMC1_CMD_OEN */
			0x62C A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_MMC1_CMD_OUT */
			0x630 A_DELAY_PS(751) G_DELAY_PS(0)	/* CFG_MMC1_DAT0_IN */
			0x634 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_MMC1_DAT0_OEN */
			0x638 A_DELAY_PS(20) G_DELAY_PS(0)	/* CFG_MMC1_DAT0_OUT */
			0x63C A_DELAY_PS(256) G_DELAY_PS(0)	/* CFG_MMC1_DAT1_IN */
			0x640 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_MMC1_DAT1_OEN */
			0x644 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_MMC1_DAT1_OUT */
			0x648 A_DELAY_PS(263) G_DELAY_PS(0)	/* CFG_MMC1_DAT2_IN */
			0x64C A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_MMC1_DAT2_OEN */
			0x650 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_MMC1_DAT2_OUT */
			0x654 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_MMC1_DAT3_IN */
			0x658 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_MMC1_DAT3_OEN */
			0x65C A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_MMC1_DAT3_OUT */
		>;
	};

	/* Corresponds to MMC1_SDR104_MANUAL1 in datamanual */
	mmc1_iodelay_sdr104_rev11_conf: mmc1_iodelay_sdr104_rev11_conf {
		pinctrl-pin-array = <
			0x620 A_DELAY_PS(1063) G_DELAY_PS(17)	/* CFG_MMC1_CLK_OUT */
			0x628 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_MMC1_CMD_OEN */
			0x62c A_DELAY_PS(23) G_DELAY_PS(0)	/* CFG_MMC1_CMD_OUT */
			0x634 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_MMC1_DAT0_OEN */
			0x638 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_MMC1_DAT0_OUT */
			0x640 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_MMC1_DAT1_OEN */
			0x644 A_DELAY_PS(2) G_DELAY_PS(0)	/* CFG_MMC1_DAT1_OUT */
			0x64c A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_MMC1_DAT2_OEN */
			0x650 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_MMC1_DAT2_OUT */
			0x658 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_MMC1_DAT3_OEN */
			0x65c A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_MMC1_DAT3_OUT */
		>;
	};

	/* Corresponds to MMC1_SDR104_MANUAL1 in datamanual */
	mmc1_iodelay_sdr104_rev20_conf: mmc1_iodelay_sdr104_rev20_conf {
		pinctrl-pin-array = <
			0x620 A_DELAY_PS(600) G_DELAY_PS(400)	/* CFG_MMC1_CLK_OUT */
			0x628 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_MMC1_CMD_OEN */
			0x62c A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_MMC1_CMD_OUT */
			0x634 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_MMC1_DAT0_OEN */
			0x638 A_DELAY_PS(30) G_DELAY_PS(0)	/* CFG_MMC1_DAT0_OUT */
			0x640 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_MMC1_DAT1_OEN */
			0x644 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_MMC1_DAT1_OUT */
			0x64c A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_MMC1_DAT2_OEN */
			0x650 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_MMC1_DAT2_OUT */
			0x658 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_MMC1_DAT3_OEN */
			0x65c A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_MMC1_DAT3_OUT */
		>;
	};

	/* Corresponds to MMC2_HS200_MANUAL1 in datamanual */
	mmc2_iodelay_hs200_rev11_conf: mmc2_iodelay_hs200_rev11_conf {
		pinctrl-pin-array = <
			0x190 A_DELAY_PS(621) G_DELAY_PS(600)	/* CFG_GPMC_A19_OEN */
			0x194 A_DELAY_PS(300) G_DELAY_PS(0)	/* CFG_GPMC_A19_OUT */
			0x1a8 A_DELAY_PS(739) G_DELAY_PS(600)	/* CFG_GPMC_A20_OEN */
			0x1ac A_DELAY_PS(240) G_DELAY_PS(0)	/* CFG_GPMC_A20_OUT */
			0x1b4 A_DELAY_PS(812) G_DELAY_PS(600)	/* CFG_GPMC_A21_OEN */
			0x1b8 A_DELAY_PS(240) G_DELAY_PS(0)	/* CFG_GPMC_A21_OUT */
			0x1c0 A_DELAY_PS(954) G_DELAY_PS(600)	/* CFG_GPMC_A22_OEN */
			0x1c4 A_DELAY_PS(60)  G_DELAY_PS(0)	/* CFG_GPMC_A22_OUT */
			0x1d0 A_DELAY_PS(1340) G_DELAY_PS(420)	/* CFG_GPMC_A23_OUT */
			0x1d8 A_DELAY_PS(935) G_DELAY_PS(600)	/* CFG_GPMC_A24_OEN */
			0x1dc A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_GPMC_A24_OUT */
			0x1e4 A_DELAY_PS(525) G_DELAY_PS(600)	/* CFG_GPMC_A25_OEN */
			0x1e8 A_DELAY_PS(120) G_DELAY_PS(0)	/* CFG_GPMC_A25_OUT */
			0x1f0 A_DELAY_PS(767) G_DELAY_PS(600)	/* CFG_GPMC_A26_OEN */
			0x1f4 A_DELAY_PS(225) G_DELAY_PS(0)	/* CFG_GPMC_A26_OUT */
			0x1fc A_DELAY_PS(565) G_DELAY_PS(600)	/* CFG_GPMC_A27_OEN */
			0x200 A_DELAY_PS(60) G_DELAY_PS(0)	/* CFG_GPMC_A27_OUT */
			0x364 A_DELAY_PS(969) G_DELAY_PS(600)	/* CFG_GPMC_CS1_OEN */
			0x368 A_DELAY_PS(180) G_DELAY_PS(0)	/* CFG_GPMC_CS1_OUT */
	      >;
	};

	/* Corresponds to MMC2_HS200_MANUAL1 in datamanual */
	mmc2_iodelay_hs200_rev20_conf: mmc2_iodelay_hs200_rev20_conf {
		pinctrl-pin-array = <
			0x190 A_DELAY_PS(274) G_DELAY_PS(0)       /* CFG_GPMC_A19_OEN */
			0x194 A_DELAY_PS(162) G_DELAY_PS(0)       /* CFG_GPMC_A19_OUT */
			0x1a8 A_DELAY_PS(401) G_DELAY_PS(0)       /* CFG_GPMC_A20_OEN */
			0x1ac A_DELAY_PS(73) G_DELAY_PS(0)        /* CFG_GPMC_A20_OUT */
			0x1b4 A_DELAY_PS(465) G_DELAY_PS(0)       /* CFG_GPMC_A21_OEN */
			0x1b8 A_DELAY_PS(115) G_DELAY_PS(0)       /* CFG_GPMC_A21_OUT */
			0x1c0 A_DELAY_PS(633) G_DELAY_PS(0)       /* CFG_GPMC_A22_OEN */
			0x1c4 A_DELAY_PS(47) G_DELAY_PS(0)        /* CFG_GPMC_A22_OUT */
			0x1d0 A_DELAY_PS(935) G_DELAY_PS(280)     /* CFG_GPMC_A23_OUT */
			0x1d8 A_DELAY_PS(621) G_DELAY_PS(0)       /* CFG_GPMC_A24_OEN */
			0x1dc A_DELAY_PS(0) G_DELAY_PS(0)         /* CFG_GPMC_A24_OUT */
			0x1e4 A_DELAY_PS(183) G_DELAY_PS(0)       /* CFG_GPMC_A25_OEN */
			0x1e8 A_DELAY_PS(0) G_DELAY_PS(0)         /* CFG_GPMC_A25_OUT */
			0x1f0 A_DELAY_PS(467) G_DELAY_PS(0)       /* CFG_GPMC_A26_OEN */
			0x1f4 A_DELAY_PS(0) G_DELAY_PS(0)         /* CFG_GPMC_A26_OUT */
			0x1fc A_DELAY_PS(262) G_DELAY_PS(0)       /* CFG_GPMC_A27_OEN */
			0x200 A_DELAY_PS(46) G_DELAY_PS(0)        /* CFG_GPMC_A27_OUT */
			0x364 A_DELAY_PS(684) G_DELAY_PS(0)       /* CFG_GPMC_CS1_OEN */
			0x368 A_DELAY_PS(76) G_DELAY_PS(0)        /* CFG_GPMC_CS1_OUT */
	      >;
	};

	/* Correspnds to MMC2_DDR_3V3_MANUAL1 in datamanual */
	mmc2_iodelay_ddr_3_3v_rev11_conf: mmc2_iodelay_ddr_3_3v_rev11_conf {
		pinctrl-pin-array = <
			0x18c A_DELAY_PS(0) G_DELAY_PS(120)	/* CFG_GPMC_A19_IN */
			0x190 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_GPMC_A19_OEN */
			0x194 A_DELAY_PS(174) G_DELAY_PS(0)	/* CFG_GPMC_A19_OUT */
			0x1a4 A_DELAY_PS(265) G_DELAY_PS(360)	/* CFG_GPMC_A20_IN */
			0x1a8 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_GPMC_A20_OEN */
			0x1ac A_DELAY_PS(168) G_DELAY_PS(0)	/* CFG_GPMC_A20_OUT */
			0x1b0 A_DELAY_PS(0) G_DELAY_PS(120)	/* CFG_GPMC_A21_IN */
			0x1b4 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_GPMC_A21_OEN */
			0x1b8 A_DELAY_PS(136) G_DELAY_PS(0)	/* CFG_GPMC_A21_OUT */
			0x1bc A_DELAY_PS(0) G_DELAY_PS(120)	/* CFG_GPMC_A22_IN */
			0x1c0 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_GPMC_A22_OEN */
			0x1c4 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_GPMC_A22_OUT */
			0x1c8 A_DELAY_PS(287) G_DELAY_PS(420)	/* CFG_GPMC_A23_IN */
			0x1d0 A_DELAY_PS(879) G_DELAY_PS(0)	/* CFG_GPMC_A23_OUT */
			0x1d4 A_DELAY_PS(144) G_DELAY_PS(240)	/* CFG_GPMC_A24_IN */
			0x1d8 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_GPMC_A24_OEN */
			0x1dc A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_GPMC_A24_OUT */
			0x1e0 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_GPMC_A25_IN */
			0x1e4 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_GPMC_A25_OEN */
			0x1e8 A_DELAY_PS(34) G_DELAY_PS(0)	/* CFG_GPMC_A25_OUT */
			0x1ec A_DELAY_PS(0) G_DELAY_PS(120)	/* CFG_GPMC_A26_IN */
			0x1f0 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_GPMC_A26_OEN */
			0x1f4 A_DELAY_PS(120) G_DELAY_PS(0)	/* CFG_GPMC_A26_OUT */
			0x1f8 A_DELAY_PS(120) G_DELAY_PS(180)	/* CFG_GPMC_A27_IN */
			0x1fc A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_GPMC_A27_OEN */
			0x200 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_GPMC_A27_OUT */
			0x360 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_GPMC_CS1_IN */
			0x364 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_GPMC_CS1_OEN */
			0x368 A_DELAY_PS(11) G_DELAY_PS(0)	/* CFG_GPMC_CS1_OUT */
		>;
	};

	/* Corresponds to MMC2_DDR_1V8_MANUAL1 in datamanual */
	mmc2_iodelay_ddr_1_8v_rev11_conf: mmc2_iodelay_ddr_1_8v_rev11_conf {
		pinctrl-pin-array = <
			0x18c A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_GPMC_A19_IN */
			0x190 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_GPMC_A19_OEN */
			0x194 A_DELAY_PS(174) G_DELAY_PS(0)	/* CFG_GPMC_A19_OUT */
			0x1a4 A_DELAY_PS(274) G_DELAY_PS(240)	/* CFG_GPMC_A20_IN */
			0x1a8 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_GPMC_A20_OEN */
			0x1ac A_DELAY_PS(168) G_DELAY_PS(0)	/* CFG_GPMC_A20_OUT */
			0x1b0 A_DELAY_PS(0) G_DELAY_PS(60)	/* CFG_GPMC_A21_IN */
			0x1b4 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_GPMC_A21_OEN */
			0x1b8 A_DELAY_PS(136) G_DELAY_PS(0)	/* CFG_GPMC_A21_OUT */
			0x1bc A_DELAY_PS(0) G_DELAY_PS(60)	/* CFG_GPMC_A22_IN */
			0x1c0 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_GPMC_A22_OEN */
			0x1c4 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_GPMC_A22_OUT */
			0x1c8 A_DELAY_PS(514) G_DELAY_PS(360)	/* CFG_GPMC_A23_IN */
			0x1d0 A_DELAY_PS(879) G_DELAY_PS(0)	/* CFG_GPMC_A23_OUT */
			0x1d4 A_DELAY_PS(187) G_DELAY_PS(120)	/* CFG_GPMC_A24_IN */
			0x1d8 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_GPMC_A24_OEN */
			0x1dc A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_GPMC_A24_OUT */
			0x1e0 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_GPMC_A25_IN */
			0x1e4 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_GPMC_A25_OEN */
			0x1e8 A_DELAY_PS(34) G_DELAY_PS(0)	/* CFG_GPMC_A25_OUT */
			0x1ec A_DELAY_PS(0) G_DELAY_PS(60)	/* CFG_GPMC_A26_IN */
			0x1f0 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_GPMC_A26_OEN */
			0x1f4 A_DELAY_PS(120) G_DELAY_PS(0)	/* CFG_GPMC_A26_OUT */
			0x1f8 A_DELAY_PS(121) G_DELAY_PS(60)	/* CFG_GPMC_A27_IN */
			0x1fc A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_GPMC_A27_OEN */
			0x200 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_GPMC_A27_OUT */
			0x360 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_GPMC_CS1_IN */
			0x364 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_GPMC_CS1_OEN */
			0x368 A_DELAY_PS(11) G_DELAY_PS(0)	/* CFG_GPMC_CS1_OUT */
		>;
	};

	/* Corresponds to MMC3_MANUAL1 in datamanual */
	mmc3_iodelay_manual1_rev20_conf: mmc3_iodelay_manual1_conf {
		pinctrl-pin-array = <
			0x678 A_DELAY_PS(0) G_DELAY_PS(386)	/* CFG_MMC3_CLK_IN */
			0x680 A_DELAY_PS(605) G_DELAY_PS(0)	/* CFG_MMC3_CLK_OUT */
			0x684 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_MMC3_CMD_IN */
			0x688 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_MMC3_CMD_OEN */
			0x68c A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_MMC3_CMD_OUT */
			0x690 A_DELAY_PS(171) G_DELAY_PS(0)	/* CFG_MMC3_DAT0_IN */
			0x694 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_MMC3_DAT0_OEN */
			0x698 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_MMC3_DAT0_OUT */
			0x69c A_DELAY_PS(221) G_DELAY_PS(0)	/* CFG_MMC3_DAT1_IN */
			0x6a0 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_MMC3_DAT1_OEN */
			0x6a4 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_MMC3_DAT1_OUT */
			0x6a8 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_MMC3_DAT2_IN */
			0x6ac A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_MMC3_DAT2_OEN */
			0x6b0 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_MMC3_DAT2_OUT */
			0x6b4 A_DELAY_PS(474) G_DELAY_PS(0)	/* CFG_MMC3_DAT3_IN */
			0x6b8 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_MMC3_DAT3_OEN */
			0x6bc A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_MMC3_DAT3_OUT */
		>;
	};

	/* Corresponds to MMC3_MANUAL1 in datamanual */
	mmc3_iodelay_manual1_rev11_conf: mmc3_iodelay_manual1_conf {
		pinctrl-pin-array = <
			0x678 A_DELAY_PS(406) G_DELAY_PS(0)	/* CFG_MMC3_CLK_IN */
			0x680 A_DELAY_PS(659) G_DELAY_PS(0)	/* CFG_MMC3_CLK_OUT */
			0x684 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_MMC3_CMD_IN */
			0x688 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_MMC3_CMD_OEN */
			0x68c A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_MMC3_CMD_OUT */
			0x690 A_DELAY_PS(130) G_DELAY_PS(0)	/* CFG_MMC3_DAT0_IN */
			0x694 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_MMC3_DAT0_OEN */
			0x698 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_MMC3_DAT0_OUT */
			0x69c A_DELAY_PS(169) G_DELAY_PS(0)	/* CFG_MMC3_DAT1_IN */
			0x6a0 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_MMC3_DAT1_OEN */
			0x6a4 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_MMC3_DAT1_OUT */
			0x6a8 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_MMC3_DAT2_IN */
			0x6ac A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_MMC3_DAT2_OEN */
			0x6b0 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_MMC3_DAT2_OUT */
			0x6b4 A_DELAY_PS(457) G_DELAY_PS(0)	/* CFG_MMC3_DAT3_IN */
			0x6b8 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_MMC3_DAT3_OEN */
			0x6bc A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_MMC3_DAT3_OUT */
		>;
	};

	/* Corresponds to MMC4_DS_MANUAL1 in datamanual */
	mmc4_iodelay_ds_rev11_conf: mmc4_iodelay_ds_rev11_conf {
		pinctrl-pin-array = <
			0x840 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_UART1_CTSN_IN */
			0x848 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_UART1_CTSN_OUT */
			0x84c A_DELAY_PS(96) G_DELAY_PS(0)	/* CFG_UART1_RTSN_IN */
			0x850 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_UART1_RTSN_OEN */
			0x854 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_UART1_RTSN_OUT */
			0x870 A_DELAY_PS(582) G_DELAY_PS(0)	/* CFG_UART2_CTSN_IN */
			0x874 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_UART2_CTSN_OEN */
			0x878 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_UART2_CTSN_OUT */
			0x87c A_DELAY_PS(391) G_DELAY_PS(0)	/* CFG_UART2_RTSN_IN */
			0x880 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_UART2_RTSN_OEN */
			0x884 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_UART2_RTSN_OUT */
			0x888 A_DELAY_PS(561) G_DELAY_PS(0)	/* CFG_UART2_RXD_IN */
			0x88c A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_UART2_RXD_OEN */
			0x890 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_UART2_RXD_OUT */
			0x894 A_DELAY_PS(588) G_DELAY_PS(0)	/* CFG_UART2_TXD_IN */
			0x898 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_UART2_TXD_OEN */
			0x89c A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_UART2_TXD_OUT */
		>;
	};

	/* Corresponds to MMC4_DS_MANUAL1 in datamanual */
	mmc4_iodelay_ds_rev20_conf: mmc4_iodelay_ds_rev20_conf {
		pinctrl-pin-array = <
			0x840 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_UART1_CTSN_IN */
			0x848 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_UART1_CTSN_OUT */
			0x84c A_DELAY_PS(307) G_DELAY_PS(0)	/* CFG_UART1_RTSN_IN */
			0x850 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_UART1_RTSN_OEN */
			0x854 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_UART1_RTSN_OUT */
			0x870 A_DELAY_PS(785) G_DELAY_PS(0)	/* CFG_UART2_CTSN_IN */
			0x874 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_UART2_CTSN_OEN */
			0x878 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_UART2_CTSN_OUT */
			0x87c A_DELAY_PS(613) G_DELAY_PS(0)	/* CFG_UART2_RTSN_IN */
			0x880 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_UART2_RTSN_OEN */
			0x884 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_UART2_RTSN_OUT */
			0x888 A_DELAY_PS(683) G_DELAY_PS(0)	/* CFG_UART2_RXD_IN */
			0x88c A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_UART2_RXD_OEN */
			0x890 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_UART2_RXD_OUT */
			0x894 A_DELAY_PS(835) G_DELAY_PS(0)	/* CFG_UART2_TXD_IN */
			0x898 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_UART2_TXD_OEN */
			0x89c A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_UART2_TXD_OUT */
		>;
	};

	/* Corresponds to MMC4_MANUAL1 in datamanual */
	mmc4_iodelay_sdr12_hs_sdr25_rev11_conf: mmc4_iodelay_sdr12_hs_sdr25_rev11_conf {
		pinctrl-pin-array = <
			0x840 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_UART1_CTSN_IN */
			0x848 A_DELAY_PS(2651) G_DELAY_PS(0)	/* CFG_UART1_CTSN_OUT */
			0x84c A_DELAY_PS(1572) G_DELAY_PS(0)	/* CFG_UART1_RTSN_IN */
			0x850 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_UART1_RTSN_OEN */
			0x854 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_UART1_RTSN_OUT */
			0x870 A_DELAY_PS(1913) G_DELAY_PS(0)	/* CFG_UART2_CTSN_IN */
			0x874 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_UART2_CTSN_OEN */
			0x878 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_UART2_CTSN_OUT */
			0x87c A_DELAY_PS(1721) G_DELAY_PS(0)	/* CFG_UART2_RTSN_IN */
			0x880 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_UART2_RTSN_OEN */
			0x884 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_UART2_RTSN_OUT */
			0x888 A_DELAY_PS(1891) G_DELAY_PS(0)	/* CFG_UART2_RXD_IN */
			0x88c A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_UART2_RXD_OEN */
			0x890 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_UART2_RXD_OUT */
			0x894 A_DELAY_PS(1919) G_DELAY_PS(0)	/* CFG_UART2_TXD_IN */
			0x898 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_UART2_TXD_OEN */
			0x89c A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_UART2_TXD_OUT */
		>;
	};

	/* Corresponds to MMC4_MANUAL1 in datamanual */
	mmc4_iodelay_sdr12_hs_sdr25_rev20_conf: mmc4_iodelay_sdr12_hs_sdr25_rev20_conf {
		pinctrl-pin-array = <
			0x840 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_UART1_CTSN_IN */
			0x848 A_DELAY_PS(1147) G_DELAY_PS(0)	/* CFG_UART1_CTSN_OUT */
			0x84c A_DELAY_PS(1834) G_DELAY_PS(0)	/* CFG_UART1_RTSN_IN */
			0x850 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_UART1_RTSN_OEN */
			0x854 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_UART1_RTSN_OUT */
			0x870 A_DELAY_PS(2165) G_DELAY_PS(0)	/* CFG_UART2_CTSN_IN */
			0x874 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_UART2_CTSN_OEN */
			0x878 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_UART2_CTSN_OUT */
			0x87c A_DELAY_PS(1929) G_DELAY_PS(64)	/* CFG_UART2_RTSN_IN */
			0x880 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_UART2_RTSN_OEN */
			0x884 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_UART2_RTSN_OUT */
			0x888 A_DELAY_PS(1935) G_DELAY_PS(128)	/* CFG_UART2_RXD_IN */
			0x88c A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_UART2_RXD_OEN */
			0x890 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_UART2_RXD_OUT */
			0x894 A_DELAY_PS(2172) G_DELAY_PS(44)	/* CFG_UART2_TXD_IN */
			0x898 A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_UART2_TXD_OEN */
			0x89c A_DELAY_PS(0) G_DELAY_PS(0)	/* CFG_UART2_TXD_OUT */
		>;
	};
};

&mailbox5 {
	status = "okay";
	mbox_ipu1_ipc3x: mbox_ipu1_ipc3x {
		status = "okay";
	};
	mbox_dsp1_ipc3x: mbox_dsp1_ipc3x {
		status = "okay";
	};
};

&mailbox6 {
	status = "okay";
	mbox_ipu2_ipc3x: mbox_ipu2_ipc3x {
		status = "okay";
	};
	mbox_dsp2_ipc3x: mbox_dsp2_ipc3x {
		status = "okay";
	};
};

&ipu2 {
	mboxes = <&mailbox6 &mbox_ipu2_ipc3x>;
	timers = <&timer3>;
	watchdog-timers = <&timer4>, <&timer9>;
};

&ipu1 {
	mboxes = <&mailbox5 &mbox_ipu1_ipc3x>;
	timers = <&timer11>;
	watchdog-timers = <&timer7>, <&timer8>;
};

&dsp2 {
	mboxes = <&mailbox6 &mbox_dsp2_ipc3x>;
	timers = <&timer6>;
	watchdog-timers = <&timer13>;
};

&scm_conf_clocks {
	dss_deshdcp_clk: dss_deshdcp_clk@558 {
		#clock-cells = <0>;
		compatible = "ti,gate-clock";
		clocks = <&l3_iclk_div>;
		ti,bit-shift = <0>;
		reg = <0x558>;
	};

       ehrpwm0_tbclk: ehrpwm0_tbclk@558 {
		#clock-cells = <0>;
		compatible = "ti,gate-clock";
		clocks = <&l4_root_clk_div>;
		ti,bit-shift = <20>;
		reg = <0x0558>;
	};

	ehrpwm1_tbclk: ehrpwm1_tbclk@558 {
		#clock-cells = <0>;
		compatible = "ti,gate-clock";
		clocks = <&l4_root_clk_div>;
		ti,bit-shift = <21>;
		reg = <0x0558>;
	};

	ehrpwm2_tbclk: ehrpwm2_tbclk@558 {
		#clock-cells = <0>;
		compatible = "ti,gate-clock";
		clocks = <&l4_root_clk_div>;
		ti,bit-shift = <22>;
		reg = <0x0558>;
	};

	sys_32k_ck: sys_32k_ck {
		#clock-cells = <0>;
		compatible = "ti,mux-clock";
		clocks = <&sys_clk32_crystal_ck>, <&sys_clk32_pseudo_ck>, <&sys_clk32_pseudo_ck>, <&sys_clk32_pseudo_ck>;
		ti,bit-shift = <8>;
		reg = <0x6c4>;
	};
};

#ifdef BELA
// lines below taken from am335x-boneblack-common.dtsi and adapted
&dra7_pmx_core {
	mcasp1_pins: mcasp1_pins {
		pinctrl-single,pins = <
/* BELA0 */ DRA7XX_CORE_IOPAD(0x3694, PIN_OUTPUT_PULLDOWN | MUX_MODE3) /* D18: P9.25: xref_clk0.off */  //mcasp0_ahclkx mcasp1_ahclkx MODE3
/* BELA1 */ DRA7XX_CORE_IOPAD(0x36E0, PIN_INPUT_PULLDOWN | MUX_MODE0) /* A12: P9.28: mcasp1_axr11.off */ //mcasp0_axr2 mcasp1_axr11 MODE0
/* BELA2 */ DRA7XX_CORE_IOPAD(0x36D8, PIN_INPUT | MUX_MODE15) /* A11: P9.29a: mcasp1_axr9.off */ //mcasp0_fsx off MODE15

/* BELA3 */ DRA7XX_CORE_IOPAD(0x36A8, PIN_INPUT_PULLDOWN | MUX_MODE0) /* D14: P9.29b: mcasp1_fsx.off */ //mcasp0_fsx mcasp1_fsx MODE0
/* BELA4 */ DRA7XX_CORE_IOPAD(0x36DC, PIN_INPUT_PULLDOWN | MUX_MODE0) /* B13: P9.30: mcasp1_axr10.off */ //mcasp0_axr0 mcasp1_axr10 MODE0
/* BELA5 */ DRA7XX_CORE_IOPAD(0x36D4, PIN_INPUT | MUX_MODE15) /* B12: P9.31a: mcasp1_axr8.off */ // mcasp0_aclkx off MODE15
/* BELA6 */ DRA7XX_CORE_IOPAD(0x36A4, PIN_INPUT_PULLDOWN | MUX_MODE0) /* C14: P9.31b: mcasp1_aclkx.off */ // mcasp0_aclkx mcasp1_aclkx MODE0
		>;
	};
};

&i2c4 {
	#address-cells = <1>;
	#size-cells = <0>;
	clock-frequency = <100000>;
	status = "okay";
	pinctrl-names = "default";
	tlv320aic3104: tlv320aic3104@18 {
		#sound-dai-cells = <0>;
		compatible = "ti,tlv320aic3104";
		reg = <0x18>;
	};
};

/ {

// the two below are from BB-BONE-AUDI-02-00A0.dts
	sound {
		compatible = "simple-audio-card";
		simple-audio-card,name = "AudioCape Rev B";
		simple-audio-card,widgets =
			"Headphone", "Headphone Jack",
			"Line", "Line In";
		simple-audio-card,routing =
			"Headphone Jack",       "HPLOUT",
			"Headphone Jack",       "HPROUT",
			"LINE1L",               "Line In",
			"LINE1R",               "Line In";
		simple-audio-card,format = "dsp_b";
		simple-audio-card,bitclock-master = <&sound_master>;
		simple-audio-card,frame-master = <&sound_master>;
		simple-audio-card,bitclock-inversion;

		simple-audio-card,cpu {
			sound-dai = <&mcasp1>;
			compatible = "fixed-clock";
			system-clock-frequency = <20000000>;
			system-clock-direction-out = <1>;
		};

		sound_master: simple-audio-card,codec {
			#sound-dai-cells = <0>;
			sound-dai = <&tlv320aic3104>;
			clocks = <&mcasp1_ahclkx_mux>;
			clock-frequency = <20000000>;
			clock-names = "mclk";
		};
	};
};
&mcasp1 {
	#sound-dai-cells = <0>;
	pinctrl-names = "default";
	pinctrl-0 = <&mcasp1_pins>;
	status = "okay";
	op-mode = <0>;          /* MCASP_IIS_MODE */
	tdm-slots = <2>;
	num-serializer = <16>;
	serial-dir = <  /* 0: INACTIVE, 1: TX, 2: RX */
		0 0 0 0
		0 0 0 0
		0 0 2 1
		0 0 0 0
	>;
	tx-num-evt = <1>;
	rx-num-evt = <1>;
	assigned-clocks = <&mcasp1_ahclkx_mux>;
	assigned-clock-parents = <&func_24m_clk>; // <&sys_clkin2>;
};
#endif /* BELA */ 
